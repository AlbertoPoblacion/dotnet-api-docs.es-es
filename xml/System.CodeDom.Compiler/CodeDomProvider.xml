<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cd6391acbb63e22a350d0f119e03fa9818cfdba" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0a195-101">Proporciona la clase base para las implementaciones de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a195-101">Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
      </span>
      <span data-ttu-id="0a195-102">Esta clase es abstracta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a195-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-103">Un <xref:System.CodeDom.Compiler.CodeDomProvider> puede usarse para crear y recuperar instancias de generadores de código y los compiladores de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> can be used to create and retrieve instances of code generators and code compilers.</span></span> <span data-ttu-id="0a195-104">Los generadores de código pueden utilizarse para generar código en un determinado lenguaje y los compiladores de código para compilar código y generar ensamblados.</span><span class="sxs-lookup"><span data-stu-id="0a195-104">Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-105">En el [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], los métodos a disposición del generador de código y el compilador de código están disponibles directamente desde el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-105">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider.</span></span> <span data-ttu-id="0a195-106">No es necesario llamar a <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> para tener acceso a los métodos y los métodos están marcados como obsoletos.</span><span class="sxs-lookup"><span data-stu-id="0a195-106">You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete.</span></span> <span data-ttu-id="0a195-107">Esto se aplica a preexistentes, así como las implementaciones del proveedor de código nuevo.</span><span class="sxs-lookup"><span data-stu-id="0a195-107">This applies to preexisting as well as new code provider implementations.</span></span>  
  
 <span data-ttu-id="0a195-108">Un <xref:System.CodeDom.Compiler.CodeDomProvider> implementación normalmente proporciona código interfaces de compilación de código o de generación para generar código y administrar la compilación para un único lenguaje de programación.</span><span class="sxs-lookup"><span data-stu-id="0a195-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</span></span> <span data-ttu-id="0a195-109">Se admiten varios idiomas por <xref:System.CodeDom.Compiler.CodeDomProvider> implementaciones que se suministran con el [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0a195-109">Several languages are supported by <xref:System.CodeDom.Compiler.CodeDomProvider> implementations that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span></span> <span data-ttu-id="0a195-110">Estos lenguajes incluyen C#, Visual Basic, C++ y JScript.</span><span class="sxs-lookup"><span data-stu-id="0a195-110">These languages include C#, Visual Basic, C++, and JScript.</span></span> <span data-ttu-id="0a195-111">Los programadores o fabricantes de compiladores pueden implementar la <xref:System.CodeDom.Compiler.ICodeGenerator> y <xref:System.CodeDom.Compiler.ICodeCompiler> e interfaces de proporcionar un <xref:System.CodeDom.Compiler.CodeDomProvider> que extiende la compatibilidad de CodeDOM a otros lenguajes de programación.</span><span class="sxs-lookup"><span data-stu-id="0a195-111">Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a <xref:System.CodeDom.Compiler.CodeDomProvider> that extends CodeDOM support to other programming languages.</span></span>  
  
 <span data-ttu-id="0a195-112">El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo (Machine.config) del archivo proporciona un mecanismo para agregar valores de configuración para adicionalesalosdesarrolladoresyfabricantesdecompiladores<xref:System.CodeDom.Compiler.CodeDomProvider>implementaciones.</span><span class="sxs-lookup"><span data-stu-id="0a195-112">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <xref:System.CodeDom.Compiler.CodeDomProvider> implementations.</span></span>  
  
 <span data-ttu-id="0a195-113">El <xref:System.CodeDom.Compiler.CodeDomProvider> clase proporciona métodos estáticos para detectar y enumerar los <xref:System.CodeDom.Compiler.CodeDomProvider> las implementaciones en un equipo.</span><span class="sxs-lookup"><span data-stu-id="0a195-113">The <xref:System.CodeDom.Compiler.CodeDomProvider> class provides static methods to discover and enumerate the <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="0a195-114">El <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método devuelve los valores para todos los <xref:System.CodeDom.Compiler.CodeDomProvider> las implementaciones en un equipo.</span><span class="sxs-lookup"><span data-stu-id="0a195-114">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="0a195-115">El <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> método devuelve la configuración para un determinado <xref:System.CodeDom.Compiler.CodeDomProvider> implementación, basándose en el nombre del lenguaje de programación.</span><span class="sxs-lookup"><span data-stu-id="0a195-115">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific <xref:System.CodeDom.Compiler.CodeDomProvider> implementation, based on the programming language name.</span></span> <span data-ttu-id="0a195-116">El <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método devuelve una instancia de un <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para un idioma específico.</span><span class="sxs-lookup"><span data-stu-id="0a195-116">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="0a195-117">Para obtener más detalles sobre la configuración del proveedor de lenguaje en el archivo de configuración, consulte [compilador y el esquema de configuración de proveedor de lenguaje](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span><span class="sxs-lookup"><span data-stu-id="0a195-117">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-118">Esta clase realiza una petición de vínculo y una petición de herencia en el nivel de clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="0a195-119">Un <xref:System.Security.SecurityException> se produce si el llamador inmediato o la clase derivada no tiene permiso de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="0a195-119">A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission.</span></span> <span data-ttu-id="0a195-120">Para obtener más información acerca de las peticiones de seguridad, consulte [peticiones de vínculo](~/docs/framework/misc/link-demands.md) y [peticiones de herencia](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="0a195-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-121">El programa de ejemplo siguiente puede generar y compilar código fuente basado en un modelo CodeDOM de un programa que imprime "Hello World" con la <xref:System.Console> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-121">The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <xref:System.Console> class.</span></span> <span data-ttu-id="0a195-122">Se proporciona una interfaz de usuario de formularios Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="0a195-122">A Windows Forms user interface is provided.</span></span> <span data-ttu-id="0a195-123">El usuario puede seleccionar el idioma de varias selecciones de programación de destino: C#, Visual Basic y JScript.</span><span class="sxs-lookup"><span data-stu-id="0a195-123">The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</span></span>  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="0a195-124">De plena confianza para el llamador inmediato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a195-124">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="0a195-125">Esta clase no puede ser usada por código de confianza parcial.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a195-125">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="0a195-126">de plena confianza para los herederos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a195-126">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="0a195-127">Esta clase no puede heredarse mediante código de confianza parcial.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a195-127">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="0a195-128">En las versiones 1.0 y 1.1 de .NET Framework, los proveedores de código están formados por implementaciones de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, y <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0a195-128">In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</span>
        </span>
        <span data-ttu-id="0a195-129">En el [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, y <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> métodos están obsoletos y los métodos de <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> y <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> están disponibles directamente en el <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> clase.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0a195-129">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, and <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> methods are obsolete, and the methods of <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> are directly available in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
        </span>
        <span data-ttu-id="0a195-130">Debe invalidar estos métodos en su implementación del proveedor de código y no llame a los métodos base.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0a195-130">You should override those methods in your code provider implementation and not call the base methods.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a195-131">Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-131">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0a195-132">De plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-132">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0a195-133">Esta clase no puede ser usada por código de confianza parcial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-133">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="0a195-134">Objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica la configuración de la compilación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-134">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="compilationUnits">
          <span data-ttu-id="0a195-135">Matriz de tipo <see cref="T:System.CodeDom.CodeCompileUnit" /> que indica el código que se va a compilar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-135">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-136">Compila un ensamblado basado en los árboles <see cref="N:System.CodeDom" /> que contiene la matriz especificada de objetos <see cref="T:System.CodeDom.CodeCompileUnit" />, utilizando la configuración del compilador especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-136">Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-137">Objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica los resultados de la compilación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-137">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-138">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeCompiler> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-138">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="0a195-139">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-139">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-140">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeCompiler> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-140">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-141">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-141">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-142">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-142">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-143">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para ofrecer compatibilidad con proveedores existentes que utilizan los compiladores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-143">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="0a195-144">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-144">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-145">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no usa un compilador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-145">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="0a195-146">Objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica la configuración de la compilación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-146">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="fileNames">
          <span data-ttu-id="0a195-147">Matriz de los nombres de los archivos que se van a compilar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-147">An array of the names of the files to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-148">Compila un ensamblado a partir del código fuente que contienen los archivos especificados, utilizando la configuración de compilador especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-148">Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-149">Objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica los resultados de la compilación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-149">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-150">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeCompiler> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-150">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="0a195-151">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-151">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-152">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeCompiler> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-152">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-153">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-153">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-154">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-154">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-155">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para ofrecer compatibilidad con proveedores existentes que utilizan los compiladores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-155">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="0a195-156">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-156">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-157">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no usa un compilador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-157">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="0a195-158">Objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica la configuración de compilador para esta compilación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-158">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation.</span>
          </span>
        </param>
        <param name="sources">
          <span data-ttu-id="0a195-159">Matriz de cadenas de código fuente que se van a compilar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-159">An array of source code strings to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-160">Compila un ensamblado basado en la matriz especificada de cadenas que contiene el código fuente, utilizando la configuración del compilador especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-160">Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-161">Objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica los resultados de la compilación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-161">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-162">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeCompiler> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-162">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="0a195-163">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-163">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-164">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeCompiler> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-164">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-165">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-165">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-166">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-166">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-167">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para ofrecer compatibilidad con proveedores existentes que utilizan los compiladores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-167">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="0a195-168">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-168">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-169">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no usa un compilador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-169">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a195-170">Cuando se reemplaza en una clase derivada, crea un nuevo compilador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-170">When overridden in a derived class, creates a new code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-171">
            <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> que puede utilizarse para la compilación de representaciones de código fuente basadas en el espacio de nombres <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-171">An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-172">Este método está obsoleto en la [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0a195-172">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="0a195-173">La alternativa recomendada es llamar a la <xref:System.CodeDom.Compiler.ICodeCompiler> métodos que están disponibles directamente en el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-173">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-174">En el [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], debe implementar la <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> miembros en el <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> clase y producir un <see cref="T:System.NotSupportedException" /> cuando se llama a este método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-174">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a195-175">Cadena para la que se va a crear un identificador de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-175">The string for which to create an escaped identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-176">Crea un identificador de escape para el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-176">Creates an escaped identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-177">Identificador de escape para el valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-177">The escaped identifier for the value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-178"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> pruebas si el identificador entra en conflicto con cualquier reservados o palabras clave del lenguaje y si es así, devuelve un nombre equivalente con formato de código de escape específico del lenguaje.</span><span class="sxs-lookup"><span data-stu-id="0a195-178"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="0a195-179">Esto se conoce como identificador de escape.</span><span class="sxs-lookup"><span data-stu-id="0a195-179">This is referred to an escaped identifier.</span></span> <span data-ttu-id="0a195-180">El identificador de escape contiene el mismo `value` , pero se le agrega formato de código de escape para el identificador se diferenciará de la palabra clave.</span><span class="sxs-lookup"><span data-stu-id="0a195-180">The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="0a195-181">Dos ejemplos de implementación preceden la `value` con "@" o Estimando el `value` con "[" y "]".</span><span class="sxs-lookup"><span data-stu-id="0a195-181">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-182">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-182">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-183">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-183">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-184">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-184">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-185">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-185">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-186">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-186">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-187">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-187">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-188">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-188">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-189">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-189">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a195-190">Cuando se reemplaza en una clase derivada, crea un nuevo generador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-190">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a195-191">Cuando se reemplaza en una clase derivada, crea un nuevo generador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-191">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-192">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que puede utilizarse para generar representaciones de código fuente basadas en el espacio de nombres <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-192">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-193">Este método está obsoleto en la [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0a195-193">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="0a195-194">La alternativa recomendada es llamar a la <xref:System.CodeDom.Compiler.ICodeGenerator> métodos que están disponibles directamente en el <xref:System.CodeDom.Compiler.CodeDomProvider> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-194">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-195">En el [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], debe implementar la <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> miembros en el <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> clase y producir un <see cref="T:System.NotSupportedException" /> cuando se llama a este método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-195">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="0a195-196">
            <see cref="T:System.IO.TextWriter" /> que se va a utilizar para los resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-196">A <see cref="T:System.IO.TextWriter" /> to use to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-197">Cuando se reemplaza en una clase derivada, crea un nuevo generador de código utilizando el <see cref="T:System.IO.TextWriter" /> especificado para los resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-197">When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-198">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que puede utilizarse para generar representaciones de código fuente basadas en el espacio de nombres <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-198">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-199">Este método usa especificado <xref:System.IO.TextWriter> para la salida.</span><span class="sxs-lookup"><span data-stu-id="0a195-199">This method uses the specified <xref:System.IO.TextWriter> for output.</span></span> <span data-ttu-id="0a195-200">Este método admite la generación de código optimizado más que actualiza de forma incremental el código fuente.</span><span class="sxs-lookup"><span data-stu-id="0a195-200">This method supports more optimized code generation that incrementally updates the source code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-201">La implementación de la clase base llama el <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método, que está obsoleto en la [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] y da como resultado un <xref:System.NotSupportedException> si un <xref:System.CodeDom.Compiler.ICodeGenerator> no se devuelve el objeto.</span><span class="sxs-lookup"><span data-stu-id="0a195-201">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0a195-202">Nombre del archivo de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-202">The file name to output to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-203">Cuando se reemplaza en una clase derivada, crea un nuevo generador de código utilizando el nombre de archivo especificado para los resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-203">When overridden in a derived class, creates a new code generator using the specified file name for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-204">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que puede utilizarse para generar representaciones de código fuente basadas en el espacio de nombres <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-204">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-205">Este método utiliza el nombre de archivo especificado para la salida.</span><span class="sxs-lookup"><span data-stu-id="0a195-205">This method uses the specified file name for output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-206">La implementación de la clase base llama el <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método, que está obsoleto en la [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] y da como resultado un <xref:System.NotSupportedException> si un <xref:System.CodeDom.Compiler.ICodeGenerator> no se devuelve el objeto.</span><span class="sxs-lookup"><span data-stu-id="0a195-206">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a195-207">Cuando se reemplaza en una clase derivada, crea un nuevo analizador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-207">When overridden in a derived class, creates a new code parser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-208">
            <see cref="T:System.CodeDom.Compiler.ICodeParser" /> que puede utilizarse para analizar código fuente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-208">An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code.</span>
          </span>
          <span data-ttu-id="0a195-209">La implementación base siempre devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-209">The base implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a195-210">Obtiene una instancia de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para el lenguaje especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-210">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="0a195-211">Nombre del lenguaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-211">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-212">Obtiene una instancia de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para el lenguaje especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-212">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-213">Proveedor CodeDOM que se implementa para el nombre de lenguaje especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-213">A CodeDOM provider that is implemented for the specified language name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-214">Este método se utiliza normalmente para crear una instancia de un proveedor de código en una aplicación que opcionalmente puede utilizar uno de varios proveedores.</span><span class="sxs-lookup"><span data-stu-id="0a195-214">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="0a195-215"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> permite especificar en tiempo de ejecución el proveedor de código que se va a crear una instancia.</span><span class="sxs-lookup"><span data-stu-id="0a195-215"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> allows you to specify at run time the code provider you wish to instantiate.</span></span> <span data-ttu-id="0a195-216">Si sabe en qué código es de proveedor que se usará el tiempo de diseño, se debe crear una instancia de ese proveedor de código en lugar de usar el <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0a195-216">If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method.</span></span>  
  
 <span data-ttu-id="0a195-217">El <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método devuelve un <xref:System.CodeDom.Compiler.CodeDomProvider> de la instancia de un nombre de lenguaje concreto; es similar a llamar a la <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> método con el tipo de proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="0a195-217">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method with the language provider type.</span></span> <span data-ttu-id="0a195-218">Utilice <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> cuando desee encontrar dinámicamente una implementación configurada del proveedor para un nombre de idioma.</span><span class="sxs-lookup"><span data-stu-id="0a195-218">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> when you want to dynamically find a configured provider implementation for a language name.</span></span>  
  
 <span data-ttu-id="0a195-219">Si se configura más de una implementación de proveedor para el nombre del idioma, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> devuelve una instancia del proveedor para el último elemento de configuración coincidente.</span><span class="sxs-lookup"><span data-stu-id="0a195-219">If more than one provider implementation is configured for the language name, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> returns a provider instance for the last matching configuration element.</span></span>  
  
 <span data-ttu-id="0a195-220">Use la <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> sobrecarga del método cuando desee que una implementación de proveedor de lenguaje concreto.</span><span class="sxs-lookup"><span data-stu-id="0a195-220">Use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload when you want a specific language provider implementation.</span></span> <span data-ttu-id="0a195-221">Por ejemplo, use la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método para obtener una instancia del proveedor que admita el nombre del lenguaje `"CSharp"`; utilice la <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> sobrecarga del método para obtener una instancia del proveedor específicamente para el <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementación.</span><span class="sxs-lookup"><span data-stu-id="0a195-221">For example, use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method to get a provider instance that supports the language name `"CSharp"`; use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="0a195-222">Debe usar el [\], CultureInfo, objeto\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5b%5D%29?displayProperty=nameWithType > método si tiene varios proveedores de código para un lenguaje y desea crear una instancia de un proveedor de código específicos.</span><span class="sxs-lookup"><span data-stu-id="0a195-222">You should use the [\], CultureInfo, Object\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</span></span>  
  
 <span data-ttu-id="0a195-223">El <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método comprueba si al menos una implementación del proveedor es compatible con un idioma específico.</span><span class="sxs-lookup"><span data-stu-id="0a195-223">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="0a195-224">Puede validar un nombre de idioma mediante <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> antes de pasarlo a <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a195-224">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span></span> <span data-ttu-id="0a195-225">Si se pasa un nombre de idioma no admitido para <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> un <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> se produce.</span><span class="sxs-lookup"><span data-stu-id="0a195-225">If you pass an unsupported language name to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> is thrown.</span></span>  
  
 <span data-ttu-id="0a195-226">El <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método se puede utilizar para determinar todas <xref:System.CodeDom.Compiler.CodeDomProvider> las implementaciones en un equipo, incluso implementaciones adicionales proporcionadas por los desarrolladores y fabricantes de compiladores que se identifican en el [ &lt;system.codedom &gt; Elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en el archivo de configuración del equipo (Machine.config).</span><span class="sxs-lookup"><span data-stu-id="0a195-226">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config).</span></span>  
  
 <span data-ttu-id="0a195-227">El <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método devuelve una instancia de un <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para un idioma específico.</span><span class="sxs-lookup"><span data-stu-id="0a195-227">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="0a195-228">Los nombres de lenguaje distinguen entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a195-228">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-229">En el ejemplo de código siguiente se determina el <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para un idioma de entrada y muestra los valores configurados para el proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="0a195-229">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0a195-230">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-230">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="0a195-231">
            <paramref name="language" /> no tiene un proveedor configurado en este equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-231">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a195-232">El valor de <paramref name="language" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-232">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0a195-233">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-233">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0a195-234">De plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-234">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0a195-235">Un código de confianza parcial no puede utilizar este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-235">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="0a195-236">Nombre del lenguaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-236">The language name.</span>
          </span>
        </param>
        <param name="providerOptions">
          <span data-ttu-id="0a195-237">Una colección de opciones de proveedor extraídas del archivo de configuración.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-237">A collection of provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-238">Obtiene una instancia de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para el lenguaje y opciones de proveedor especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-238">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-239">Un proveedor CodeDOM que se implementa para el nombre del lenguaje y opciones especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-239">A CodeDOM provider that is implemented for the specified language name and options.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-240">Este método se utiliza normalmente para crear una instancia de un proveedor de código en una aplicación que opcionalmente puede utilizar uno de varios proveedores.</span><span class="sxs-lookup"><span data-stu-id="0a195-240">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="0a195-241"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> le permite especificar en tiempo de ejecución de la versión del proveedor de código que desea crear una instancia.</span><span class="sxs-lookup"><span data-stu-id="0a195-241"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> enables you to specify at run time the version of the code provider you want to instantiate.</span></span> <span data-ttu-id="0a195-242">Si sabe en qué código es de proveedor que se usará el tiempo de diseño, debe crear una instancia de ese proveedor de código en lugar de utilizar el <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> método.</span><span class="sxs-lookup"><span data-stu-id="0a195-242">If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="0a195-243">Utilice <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> cuando desee encontrar dinámicamente una implementación configurada del proveedor para un idioma específico y sus opciones.</span><span class="sxs-lookup"><span data-stu-id="0a195-243">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> when you want to dynamically find a configured provider implementation for a specific language and options.</span></span> <span data-ttu-id="0a195-244">Los nombres de lenguaje distinguen entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a195-244">Language names are case-insensitive.</span></span> <span data-ttu-id="0a195-245">Para obtener información acerca de las opciones de proveedor compatibles, consulte la documentación específica del proveedor CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="0a195-245">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="0a195-246">Para obtener información acerca de cómo validar un proveedor y llamar a un proveedor si más de una implementación de proveedor está configurada para el nombre del idioma, vea la sección Comentarios de la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="0a195-246">For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-247">En el ejemplo siguiente se muestra cómo crear una instancia de un proveedor mediante el `providerOptions` parámetro.</span><span class="sxs-lookup"><span data-stu-id="0a195-247">The following example shows how to create an instance of a provider by using the `providerOptions` parameter.</span></span>  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a195-248">Cadena para la que se va a generar un identificador válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-248">The string for which to generate a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-249">Crea un identificador válido para el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-249">Creates a valid identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-250">Identificador válido para el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-250">A valid identifier for the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-251"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> comprueba si el identificador entra en conflicto con reservadas o palabras clave del lenguaje, y si es así, intenta devolver un identificador válido nombre que no entran en conflicto.</span><span class="sxs-lookup"><span data-stu-id="0a195-251"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</span></span> <span data-ttu-id="0a195-252">Normalmente el identificador devuelto se modifica ligeramente para diferenciar el identificador de la palabra clave; Por ejemplo, el nombre podría ir precedido por el carácter de subrayado ("_").</span><span class="sxs-lookup"><span data-stu-id="0a195-252">Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-253">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-253">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-254">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-254">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-255">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-255">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-256">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-256">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-257">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-257">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-258">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-258">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-259">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-259">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-260">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-260">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a195-261">Obtiene la extensión de archivo predeterminada que se utilizará para los archivos de código fuente en el lenguaje actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-261">Gets the default file name extension to use for source code files in the current language.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a195-262">Extensión de archivo correspondiente a la extensión de los archivos de código fuente del lenguaje actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-262">A file name extension corresponding to the extension of the source files of the current language.</span>
          </span>
          <span data-ttu-id="0a195-263">La implementación base siempre devuelve <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-263">The base implementation always returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-264">Esta propiedad se usa por los generadores de código y los compiladores de código para indicar qué extensiones de archivo deben generarse o utilizarse.</span><span class="sxs-lookup"><span data-stu-id="0a195-264">This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-265">En el ejemplo de código siguiente se crea una instancia de <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0a195-265">The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0a195-266">En el ejemplo se muestra el nombre del proveedor, el hash predeterminada y el código de extensión del archivo para la nueva instancia del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-266">The example displays the provider name, hash code and default file name extension for the new provider instance.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="compileUnit">
          <span data-ttu-id="0a195-267">
            <see cref="T:System.CodeDom.CodeCompileUnit" /> para el que se va a generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-267">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0a195-268">
            <see cref="T:System.IO.TextWriter" /> al que se envía el código de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-268">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0a195-269">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica las opciones que se van a utilizar para generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-269">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-270">Genera código para la unidad de compilación CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-270">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-271">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-271">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-272">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-272">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-273">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-273">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-274">En el ejemplo de código siguiente se muestra el uso de la <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> método para generar código para una aplicación "Hello World" de un <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="0a195-274">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> method to generate code for a "Hello World" application from a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="0a195-275">Este ejemplo forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CodeDomProvider> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-275">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-276">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-276">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-277">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-277">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-278">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-278">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-279">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-279">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-280">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-280">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="0a195-281">Objeto <see cref="T:System.CodeDom.CodeExpression" /> que indica la expresión para la que se va a generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-281">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0a195-282">
            <see cref="T:System.IO.TextWriter" /> al que se envía el código de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-282">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0a195-283">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica las opciones que se van a utilizar para generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-283">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-284">Genera código para la expresión CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-284">Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-285">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-285">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-286">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-286">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-287">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-287">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-288">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-288">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-289">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-289">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-290">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-290">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-291">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-291">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-292">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-292">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="0a195-293">Objeto <see cref="T:System.CodeDom.CodeTypeMember" /> que indica el miembro para el que se va a generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-293">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0a195-294">
            <see cref="T:System.IO.TextWriter" /> al que se envía el código de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-294">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0a195-295">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica las opciones que se van a utilizar para generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-295">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-296">Genera código para la declaración de miembro CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-296">Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-297">Implementación de la clase base produce un <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="0a195-297">The base class implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="0a195-298">Consulte <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> para documentación que describe una implementación de este método.</span><span class="sxs-lookup"><span data-stu-id="0a195-298">See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> for documentation describing an implementation of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-299">En el ejemplo de código siguiente se muestra el uso de la <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> método tal como lo implementan las <xref:Microsoft.CSharp.CSharpCodeProvider> y <xref:Microsoft.VisualBasic.VBCodeProvider> clases.</span><span class="sxs-lookup"><span data-stu-id="0a195-299">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-300">Este método no se reemplaza en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-300">This method is not overridden in a derived class.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">
          <span data-ttu-id="0a195-301">Objeto <see cref="T:System.CodeDom.CodeNamespace" /> que indica el espacio de nombres para el que se va a generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-301">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0a195-302">
            <see cref="T:System.IO.TextWriter" /> al que se envía el código de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-302">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0a195-303">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica las opciones que se van a utilizar para generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-303">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-304">Genera código para el espacio de nombres CodeDOM (Code Document Object Model) especificado y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-304">Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-305">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-305">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-306">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-306">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-307">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-307">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-308">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-308">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-309">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-309">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-310">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-310">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-311">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-311">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-312">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-312">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="statement">
          <span data-ttu-id="0a195-313">
            <see cref="T:System.CodeDom.CodeStatement" /> que contiene los elementos CodeDOM para los que se va a generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-313">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0a195-314">
            <see cref="T:System.IO.TextWriter" /> al que se envía el código de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-314">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0a195-315">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica las opciones que se van a utilizar para generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-315">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-316">Genera código para la instrucción CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-316">Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-317">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-317">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-318">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-318">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-319">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-319">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-320">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-320">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-321">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-321">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-322">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-322">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-323">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-323">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-324">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-324">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeType">
          <span data-ttu-id="0a195-325">Objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que indica el tipo para el que se va a generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-325">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0a195-326">
            <see cref="T:System.IO.TextWriter" /> al que se envía el código de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-326">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0a195-327">
            <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica las opciones que se van a utilizar para generar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-327">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-328">Genera código para la declaración de tipos CodeDOM (Code Document Object Model) especificada y lo envía al escritor de texto especificado utilizando las opciones igualmente especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-328">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-329">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-329">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-330">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-330">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-331">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-331">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-332">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-332">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-333">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-333">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-334">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-334">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-335">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-335">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-336">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-336">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a195-337">Devuelve los valores de configuración del proveedor y compilador de lenguaje de este equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-337">Returns the language provider and compiler configuration settings for this computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-338">Matriz de tipo <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> que representa los valores de configuración de todas las implementaciones de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configuradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-338">An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-339">Use la <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método para enumerar la configuración del proveedor de idioma en un equipo.</span><span class="sxs-lookup"><span data-stu-id="0a195-339">Use the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method to enumerate the language provider settings on a computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-340">En el [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], los proveedores de lenguaje predeterminados proporcionados por .NET Framework no se especifican en el [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) configuración del compilador sección y no se puede quitar, por lo que esta método devuelve información sobre los proveedores predeterminados y los especificados en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="0a195-340">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-341">En el ejemplo de código siguiente se enumera los proveedores de lenguaje en el equipo y muestra la configuración de configuración y del compilador de cada proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="0a195-341">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="0a195-342">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-342">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0a195-343">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-343">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0a195-344">De plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-344">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0a195-345">Un código de confianza parcial no puede utilizar este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-345">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="0a195-346">Nombre de lenguaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-346">A language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-347">Devuelve la configuración del proveedor y compilador del lenguaje especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-347">Returns the language provider and compiler configuration settings for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-348">Objeto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> que contiene los valores de configuración de la implementación de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-348">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-349">El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo el archivo contiene la configuración del proveedor y compilador de lenguaje para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo.</span><span class="sxs-lookup"><span data-stu-id="0a195-349">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="0a195-350">Para obtener información acerca de los archivos de configuración de máquina, vea la sección de archivos de configuración de máquina en [configurar aplicaciones](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span><span class="sxs-lookup"><span data-stu-id="0a195-350">For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span></span> <span data-ttu-id="0a195-351">El <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> método busca en cada elemento de configuración de proveedor para el nombre del idioma especificado.</span><span class="sxs-lookup"><span data-stu-id="0a195-351">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method searches each provider configuration element for the specified language name.</span></span> <span data-ttu-id="0a195-352">El valor devuelto <xref:System.CodeDom.Compiler.CompilerInfo> instancia contiene la configuración de compilador y del proveedor de lenguaje configurado.</span><span class="sxs-lookup"><span data-stu-id="0a195-352">The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.</span></span>  
  
 <span data-ttu-id="0a195-353">El <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método comprueba si al menos una implementación del proveedor es compatible con un idioma específico.</span><span class="sxs-lookup"><span data-stu-id="0a195-353">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="0a195-354">Puede validar un nombre de idioma mediante <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> antes de pasarlo a <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a195-354">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span></span> <span data-ttu-id="0a195-355">Esto evita que producir una <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> al acceder a la <xref:System.CodeDom.Compiler.CompilerInfo> instancia para un nombre de idioma no admitido.</span><span class="sxs-lookup"><span data-stu-id="0a195-355">This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.</span></span>  
  
 <span data-ttu-id="0a195-356">Si se configura más de una implementación de proveedor para el nombre del idioma de entrada, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> devuelve la configuración desde el último proveedor de búsqueda de coincidencias de elemento de configuración.</span><span class="sxs-lookup"><span data-stu-id="0a195-356">If more than one provider implementation is configured for the input language name, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> returns the settings from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="0a195-357">Los nombres de lenguaje distinguen entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a195-357">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-358">En el ejemplo de código siguiente se determina el <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para un idioma de entrada y muestra los valores configurados para el proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="0a195-358">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0a195-359">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-359">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="0a195-360">
            <paramref name="language" /> no tiene un proveedor configurado en este equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-360">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="0a195-361">El valor de <paramref name="language" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-361">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0a195-362">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-362">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0a195-363">De plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-363">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0a195-364">Un código de confianza parcial no puede utilizar este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-364">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0a195-365">Tipo de objeto para el que se recupera un convertidor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-365">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-366">Obtiene un <see cref="T:System.ComponentModel.TypeConverter" /> para el tipo de datos especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-366">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-367">
            <see cref="T:System.ComponentModel.TypeConverter" /> para el tipo especificado o <see langword="null" /> si no se encuentra <see cref="T:System.ComponentModel.TypeConverter" /> para el tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-367">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or <see langword="null" /> if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-368">Una clase derivada puede invalidar este método para proporcionar tipos específicos de convertidores de tipos para tipos de datos específicos.</span><span class="sxs-lookup"><span data-stu-id="0a195-368">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="0a195-369">Extensión de nombre de archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-369">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-370">Devuelve un nombre de lenguaje asociado a la extensión de nombre de archivo especificada, tal como se define en la sección de configuración del compilador <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-370">Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-371">Nombre de lenguaje asociado a la extensión de nombre de archivo, tal como se define en la configuración del compilador <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-371">A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-372">El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo (Machine.config) del archivo contiene la configuración del proveedor y compilador de lenguaje para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo.</span><span class="sxs-lookup"><span data-stu-id="0a195-372">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="0a195-373">El <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> método busca en cada elemento de configuración de proveedor para la extensión de nombre de archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="0a195-373">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> method searches each provider configuration element for the specified file name extension.</span></span>  
  
 <span data-ttu-id="0a195-374">El <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> método comprueba si la implementación de al menos un proveedor admite una extensión de nombre de archivo específico.</span><span class="sxs-lookup"><span data-stu-id="0a195-374">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension.</span></span> <span data-ttu-id="0a195-375">Puede validar una extensión de nombre de archivo con <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> antes de pasarlo a <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a195-375">You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span></span> <span data-ttu-id="0a195-376">Esto evita que <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> genere un <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> para una extensión de nombre de archivo no compatible.</span><span class="sxs-lookup"><span data-stu-id="0a195-376">This prevents <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> for an unsupported file name extension.</span></span>  
  
 <span data-ttu-id="0a195-377">Si una implementación de proveedor es compatible con la extensión de nombre de archivo de entrada y hay varios lenguajes compatibles configurados para ese proveedor, a continuación, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> devuelve el primer nombre de lenguaje para dicho proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-377">If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the first language name for that provider.</span></span> <span data-ttu-id="0a195-378">Si se configura más de una implementación de proveedor para la extensión de nombre de archivo de entrada, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> devuelve el nombre de idioma desde el último proveedor de búsqueda de coincidencias de elemento de configuración.</span><span class="sxs-lookup"><span data-stu-id="0a195-378">If more than one provider implementation is configured for the input file name extension, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the language name from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="0a195-379">Los nombres de lenguaje y las extensiones de nombre de archivo distinguen mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a195-379">Language names and file name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-380">En el ejemplo de código siguiente se determina el <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para una extensión de nombre de archivo de entrada y muestra los valores configurados para el proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="0a195-380">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0a195-381">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-381">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="0a195-382">
            <paramref name="extension" /> no tiene un proveedor de lenguaje configurado en este equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-382">The <paramref name="extension" /> does not have a configured language provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="0a195-383">El valor de <paramref name="extension" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-383">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0a195-384">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-384">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0a195-385">De plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-385">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0a195-386">Un código de confianza parcial no puede utilizar este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-386">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0a195-387">
            <see cref="T:System.CodeDom.CodeTypeReference" /> que indica el tipo que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-387">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-388">Obtiene el tipo indicado por el <see cref="T:System.CodeDom.CodeTypeReference" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-388">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-389">Representación de texto del tipo especificado, con el formato que corresponde al lenguaje en el que este generador de código genera el código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-389">A text representation of the specified type, formatted for the language in which code is generated by this code generator.</span>
          </span>
          <span data-ttu-id="0a195-390">En Visual Basic, por ejemplo, al pasar <see cref="T:System.CodeDom.CodeTypeReference" /> para el tipo <see cref="T:System.Int32" />, se devolverá "Integer".</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-390">In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-391">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-391">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-392">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-392">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-393">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-393">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-394">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-394">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-395">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-395">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-396">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-396">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-397">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-397">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-398">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-398">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="0a195-399">Extensión de nombre de archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-399">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-400">Comprueba si una extensión de nombre de archivo tiene configurada una implementación de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> asociada en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-400">Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-401">Es <see langword="true" /> si se ha configurado una implementación de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para la extensión de nombre de archivo especificada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-401">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-402">El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo (Machine.config) del archivo contiene la configuración del proveedor y compilador de lenguaje para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo.</span><span class="sxs-lookup"><span data-stu-id="0a195-402">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="0a195-403">El <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> método busca en los elementos de configuración de proveedor para la extensión de nombre de archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="0a195-403">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method searches the provider configuration elements for the specified file name extension.</span></span>  
  
 <span data-ttu-id="0a195-404">Extensiones de nombre de archivo distinguen mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a195-404">File name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-405">En el ejemplo de código siguiente se determina el <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para una extensión de nombre de archivo de entrada y muestra los valores configurados para el proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="0a195-405">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0a195-406">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-406">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a195-407">El valor de <paramref name="extension" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-407">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0a195-408">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-408">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0a195-409">De plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-409">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0a195-410">Un código de confianza parcial no puede utilizar este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-410">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="0a195-411">Nombre del lenguaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-411">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-412">Comprueba si un lenguaje tiene una implementación de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurada en el equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-412">Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-413">Es <see langword="true" /> si se ha configurado una implementación de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para el lenguaje especificado; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-413">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-414">El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo (Machine.config) del archivo contiene la configuración del proveedor y compilador de lenguaje para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo.</span><span class="sxs-lookup"><span data-stu-id="0a195-414">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="0a195-415">El <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método busca en los elementos de configuración de proveedor para el nombre del idioma especificado.</span><span class="sxs-lookup"><span data-stu-id="0a195-415">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method searches the provider configuration elements for the specified language name.</span></span>  
  
 <span data-ttu-id="0a195-416">Los nombres de lenguaje distinguen entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0a195-416">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a195-417">En el ejemplo de código siguiente se determina el <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para un idioma de entrada y muestra los valores configurados para el proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="0a195-417">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0a195-418">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="0a195-418">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a195-419">El valor de <paramref name="language" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-419">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0a195-420">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0a195-421">De plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-421">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0a195-422">Un código de confianza parcial no puede utilizar este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-422">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a195-423">Valor que se va a comprobar como identificador válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-423">The value to verify as a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-424">Devuelve un valor que indica si el valor especificado es un identificador válido para el lenguaje actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-424">Returns a value that indicates whether the specified value is a valid identifier for the current language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-425">Es <see langword="true" /> si el parámetro <paramref name="value" /> es un identificador válido; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-425">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-426">Este método comprueba si un identificador es válido.</span><span class="sxs-lookup"><span data-stu-id="0a195-426">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="0a195-427">El <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> método es específico del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-427">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> method is provider specific.</span></span> <span data-ttu-id="0a195-428">Los identificadores que son válidos para un proveedor no sea válidos para otros proveedores.</span><span class="sxs-lookup"><span data-stu-id="0a195-428">Identifiers that are valid for one provider might not be valid for other providers.</span></span> <span data-ttu-id="0a195-429">Si `value` contiene caracteres fuera del intervalo de caracteres ASCII, compruebe el identificador de todos los idiomas que podrían usarse para compilar el código.</span><span class="sxs-lookup"><span data-stu-id="0a195-429">If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-430">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-430">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-431">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-431">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-432">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-432">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-433">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-433">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-434">Al reemplazar <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> en una clase derivada, diseñe el método devuelva <see langword="true" /> sólo si el valor se ajusta a las reglas del lenguaje y no entra en conflicto con una palabra clave.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-434">When overriding <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in a derived class, design the method to return <see langword="true" /> only if the value fits the rules of the language and does not conflict with a keyword.</span>
            </span>
            <span data-ttu-id="0a195-435">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-435">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-436">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-436">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-437">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-437">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-438">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-438">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a195-439">Obtiene un identificador de características de lenguaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-439">Gets a language features identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a195-440">
            <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> que indica las características especiales del lenguaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-440">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="codeStream">
          <span data-ttu-id="0a195-441">Objeto <see cref="T:System.IO.TextReader" /> que se utiliza para leer el código que se va a analizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-441">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a195-442">Compila en <see cref="T:System.CodeDom.CodeCompileUnit" /> el código leído de la secuencia de texto especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-442">Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-443">Un objeto <see cref="T:System.CodeDom.CodeCompileUnit" /> que contiene una representación del código analizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-443">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a195-444">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeParser> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-444">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider.</span></span> <span data-ttu-id="0a195-445">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-445">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-446">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeParser> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-446">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-447">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-447">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-448">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-448">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-449">El método de clase base, crea un analizador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> método para ofrecer compatibilidad con los proveedores existentes que utilizan analizadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-449">The base-class method creates a parser in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> method for compatibility with preexisting providers that use code parsers.</span>
            </span>
            <span data-ttu-id="0a195-450">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-450">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-451">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un analizador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-451">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code parser.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport">To be added.</param>
        <summary>
          <span data-ttu-id="0a195-452">Devuelve un valor que indica si se proporciona la compatibilidad especificada para la generación de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-452">Returns a value indicating whether the specified code generation support is provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a195-453">Es <see langword="true" /> si se proporciona la compatibilidad de generación de código especificada; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-453">
              <see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a195-454">Puede llamar a este método con un número de <xref:System.CodeDom.Compiler.GeneratorSupport> marcas al mismo tiempo para comprobar un conjunto de funciones mediante la combinación de un conjunto de indicadores de capacidad apropiados junto con un archivo binario `OR` operador (&#124;).</span><span class="sxs-lookup"><span data-stu-id="0a195-454">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a195-455">En las versiones 1.0 y 1.1 de .NET Framework, este método lo proporciona el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación devuelto por la <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método del proveedor.</span><span class="sxs-lookup"><span data-stu-id="0a195-455">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0a195-456">En la versión 2.0, este método puede llamarse directamente en el proveedor de código incluso si no se ha reemplazado por el proveedor de código.</span><span class="sxs-lookup"><span data-stu-id="0a195-456">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0a195-457">Si el proveedor de código no reemplaza este método, el <xref:System.CodeDom.Compiler.ICodeGenerator> implementación llama a la clase base.</span><span class="sxs-lookup"><span data-stu-id="0a195-457">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a195-458">Este método y el método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> no se reemplazan en una clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a195-458">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a195-459">Si invalida este método, no debe llamar al método correspondiente de la clase base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-459">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0a195-460">El método de clase base crea un generador en la clase derivada mediante el atributo obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para ofrecer compatibilidad con proveedores existentes que utilizan generadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-460">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0a195-461">El método de clase base, a continuación, llama al método equivalente el <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementación para realizar esta función.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-461">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0a195-462">Obtendrá un <see cref="T:System.NotImplementedException" /> si llama al método de clase base desde un proveedor de código que no use un generador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a195-462">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>