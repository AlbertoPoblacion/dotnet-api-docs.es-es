<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeGenerator.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50a1be4859a7f2562cfa49ea1c2b7933e269d168d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a1be4859a7f2562cfa49ea1c2b7933e269d168d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>Provides an example implementation of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> interface.</source>
          <target state="translated">Proporciona una implementación de ejemplo de la interfaz <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class is abstract.</source>
          <target state="translated">Esta clase es abstracta.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This is a useful base class for code generators to derive from.</source>
          <target state="translated">Se trata de una clase base útil para los generadores de código pueden derivar.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>Code generators are capable of rendering source code in a specific language according to the structure of a Code Document Object Model (CodeDOM) graph.</source>
          <target state="translated">Los generadores de código son capaces de procesar código fuente en un idioma específico según la estructura de un gráfico de Code Document Object Model (CodeDOM).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class provides many functions and methods to generate specific types of code from a CodeDOM graph.</source>
          <target state="translated">Esta clase proporciona muchas funciones y métodos para generar tipos específicos de código desde un gráfico CodeDOM.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">Esta clase contiene una petición de vínculo y una petición de herencia en el nivel de clase que se aplica a todos los miembros.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> se produce cuando el llamador inmediato o la clase derivada no tiene permiso de plena confianza.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">Para obtener más información acerca de las peticiones de seguridad, consulte <bpt id="p1">[</bpt>peticiones de vínculo<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> y <bpt id="p2">[</bpt>peticiones de herencia<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Esta clase no puede ser usada por código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>for full trust for inheritors.</source>
          <target state="translated">de plena confianza para los herederos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">Esta clase no puede heredarse mediante código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGenerator" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGenerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.#ctor">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Esta clase no puede ser usada por código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
          <source>The string to write on the new line.</source>
          <target state="translated">Cadena que se va a escribir en la línea nueva.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
          <source>Generates a line-continuation character and outputs the specified string on a new line.</source>
          <target state="translated">Genera un carácter de continuación de línea y envía la cadena especificada a una nueva línea.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
          <source>When implementing a code generator for a language that supports a line-continuation character (for example, Visual Basic), this method should output the line-continuation character before it outputs a newline character.</source>
          <target state="translated">Al implementar un generador de código para un idioma que admite un carácter de continuación de línea (por ejemplo, Visual Basic), este método debe devolver el carácter de continuación de línea antes de que genera un carácter de nueva línea.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The string to create an escaped identifier for.</source>
          <target state="translated">Cadena para crear un identificador de escape.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>Creates an escaped identifier for the specified value.</source>
          <target state="translated">Crea un identificador de escape para el valor especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier for the value.</source>
          <target state="translated">Identificador de escape para el valor.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier%2A&gt;</ph> tests whether the identifier conflicts with reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier%2A&gt;</ph> comprueba si el identificador entra en conflicto con reservadas o palabras clave del lenguaje y si es así, devuelve un nombre equivalente con formato de código de escape específico del lenguaje.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The returned name is referred to an escaped identifier.</source>
          <target state="translated">El nombre devuelto se conoce un identificador de escape.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier contains the same <ph id="ph1">`value`</ph> but includes escape code formatting to differentiate it from conflicting keywords.</source>
          <target state="translated">El identificador de escape contiene el mismo <ph id="ph1">`value`</ph> pero incluye formato de código de escape para diferenciarlo de palabras clave en conflicto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>For example, <ph id="ph1">`value`</ph> could be preceded by an at sign ("@") or delimited by square brackets ("[" and "]") to create an escaped identifier.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">`value`</ph> puede estar precedido por una arroba ("@") o delimitados por corchetes ("[" y "]") para crear un identificador de escape.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The default implementation of this method does nothing.</source>
          <target state="translated">La implementación predeterminada de este método no hace nada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>A string to create a valid identifier for.</source>
          <target state="translated">Cadena para crear un identificador válido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>Creates a valid identifier for the specified value.</source>
          <target state="translated">Crea un identificador válido para el valor especificado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>A valid identifier for the value.</source>
          <target state="translated">Identificador válido para el valor.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier%2A&gt;</ph> tests whether the identifier conflicts with reserved or language keywords, and if so, returns a valid identifier name that does not conflict.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier%2A&gt;</ph> comprueba si el identificador entra en conflicto con reservadas o palabras clave del lenguaje y si es así, devuelve un nombre de identificador válido que no entra en conflicto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>The returned identifier contains the same <ph id="ph1">`value`</ph> but includes escape code formatting to differentiate it from conflicting keywords.</source>
          <target state="translated">El identificador devuelto contiene el mismo <ph id="ph1">`value`</ph> pero incluye formato de código de escape para diferenciarlo de palabras clave en conflicto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>Typically, if the value requires modification, it is preceded by an underscore "_".</source>
          <target state="translated">Por lo general, si el valor requiere una modificación, está precedido por un carácter de subrayado "_".</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>The default implementation of this method does nothing.</source>
          <target state="translated">La implementación predeterminada de este método no hace nada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentClass">
          <source>Gets the code type declaration for the current class.</source>
          <target state="translated">Obtiene la declaración de tipos de código para la clase actual.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentClass">
          <source>The code type declaration for the current class.</source>
          <target state="translated">Declaración de tipos de código para la clase actual.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentMember">
          <source>Gets the current member of the class.</source>
          <target state="translated">Obtiene el miembro actual de la clase.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentMember">
          <source>The current member of the class.</source>
          <target state="translated">Miembro actual de la clase.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName">
          <source>Gets the current member name.</source>
          <target state="translated">Obtiene el nombre del miembro actual.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName">
          <source>The name of the current member.</source>
          <target state="translated">Nombre del miembro actual.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentTypeName">
          <source>Gets the current class name.</source>
          <target state="translated">Obtiene el nombre de la clase actual.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentTypeName">
          <source>The current class name.</source>
          <target state="translated">Nombre de la clase actual.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /&gt;</ph> que indica la expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
          <source>Generates code for the specified argument reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia de argumento especificada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArrayCreateExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArrayCreateExpression" /&gt;</ph> que indica la expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
          <source>Generates code for the specified array creation expression.</source>
          <target state="translated">Genera código para la expresión de creación de matrices especificada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArrayIndexerExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArrayIndexerExpression" /&gt;</ph> que indica la expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
          <source>Generates code for the specified array indexer expression.</source>
          <target state="translated">Genera código para la expresión de indizador de matrices especificada.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAssignStatement" /&gt;</ph> that indicates the statement to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAssignStatement" /&gt;</ph> que indica la instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
          <source>Generates code for the specified assignment statement.</source>
          <target state="translated">Genera código para la instrucción de asignación especificada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttachEventStatement" /&gt;</ph> that indicates the statement to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttachEventStatement" /&gt;</ph> que indica la instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
          <source>Generates code for the specified attach event statement.</source>
          <target state="translated">Genera código para la instrucción especificada de eventos relacionados.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /&gt;</ph> that indicates the end of the attribute block to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /&gt;</ph> que indica el final del bloque de atributos para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>Generates code for the specified attribute block end.</source>
          <target state="translated">Genera código para el final del bloque de atributos especificado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /&gt;</ph> that indicates the start of the attribute block to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /&gt;</ph> que indica el inicio del bloque de atributos para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>Generates code for the specified attribute block start.</source>
          <target state="translated">Genera código para el inicio del bloque de atributos especificado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeBaseReferenceExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeBaseReferenceExpression" /&gt;</ph> que indica la expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
          <source>Generates code for the specified base reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia base especificada.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /&gt;</ph> que indica la expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
          <source>Generates code for the specified binary operator expression.</source>
          <target state="translated">Genera código para la expresión de operador binario especificada.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCastExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCastExpression" /&gt;</ph> que indica la expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
          <source>Generates code for the specified cast expression.</source>
          <target state="translated">Genera código para la expresión de conversión especificada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The class member to generate code for.</source>
          <target state="translated">Miembro de clase para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">Escritor de texto que recibe la salida de código.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use when generating the code.</source>
          <target state="translated">Opciones que se utilizarán cuando se genere el código.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified class member using the specified text writer and code generator options.</source>
          <target state="translated">Genera código para el miembro de clase especificado usando las opciones del generador de código y el programa de escritura de texto especificados.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Code for members is generated differently depending on the context.</source>
          <target state="translated">Código para los miembros se genera de forma diferente dependiendo del contexto.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>For example, code for methods on an interface or fields on an enumeration is generated differently from code for the same member on a class.</source>
          <target state="translated">Por ejemplo, para los métodos en una interfaz o campos en una enumeración se genera código diferente desde el código para el mismo miembro en una clase.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>This implementation assumes that the member is being generated for the class context.</source>
          <target state="translated">Esta implementación se da por supuesto que el miembro se genera para el contexto de clase.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /&gt;</ph> property is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /&gt;</ph> no es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> to generate code for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
          <source>Generates code for the specified comment.</source>
          <target state="translated">Genera código para el comentario especificado.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
          <source>Generates code for the specified comment statement.</source>
          <target state="translated">Genera código para la instrucción de comentario especificada.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
          <source>The <ph id="ph1">&lt;see cref="P:System.CodeDom.CodeCommentStatement.Comment" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is not set.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;see cref="P:System.CodeDom.CodeCommentStatement.Comment" /&gt;</ph> de <ph id="ph2">&lt;paramref name="e" /&gt;</ph> no está establecida.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
          <source>Generates code for the specified comment statements.</source>
          <target state="translated">Genera código para las instrucciones de comentarios especificadas.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>The compile unit to generate code for.</source>
          <target state="translated">Unidad de compilación para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>Generates code for the specified compile unit.</source>
          <target state="translated">Genera código para la unidad de compilación especificada.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
          <source>The compile unit to generate code for.</source>
          <target state="translated">Unidad de compilación para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
          <source>Generates code for the end of a compile unit.</source>
          <target state="translated">Genera código para el final de una unidad de compilación.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
          <source>The compile unit to generate code for.</source>
          <target state="translated">Unidad de compilación para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
          <source>Generates code for the start of a compile unit.</source>
          <target state="translated">Genera código para el inicio de una unidad de compilación.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
          <source>Generates code for the specified conditional statement.</source>
          <target state="translated">Genera código para la instrucción condicional especificada.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
          <source>For most languages, this method will generate code for an <ph id="ph1">`if`</ph> statement.</source>
          <target state="translated">Para la mayoría de los idiomas, este método generará código para un <ph id="ph1">`if`</ph> instrucción.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
          <source>The constructor to generate code for.</source>
          <target state="translated">Constructor para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
          <source>The type of the object that this constructor constructs.</source>
          <target state="translated">Tipo del objeto que construye este constructor.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified constructor.</source>
          <target state="translated">Genera código para el constructor especificado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)">
          <source>The decimal value to generate code for.</source>
          <target state="translated">Valor decimal para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)">
          <source>Generates code for the specified decimal value.</source>
          <target state="translated">Genera código para el valor decimal especificado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
          <source>The reference to generate code for.</source>
          <target state="translated">Referencia para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
          <source>Generates code for the specified reference to a default value.</source>
          <target state="translated">Genera código para la referencia especificada a un valor predeterminado.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
          <source>Generates code for the specified delegate creation expression.</source>
          <target state="translated">Genera código para la expresión de creación de delegado especificada.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
          <source>Generates code for the specified delegate invoke expression.</source>
          <target state="translated">Genera código para la expresión de invocación de delegado especificada.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
          <source>Generates code for the specified direction expression.</source>
          <target state="translated">Genera código para la expresión de dirección especificada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
          <source>The code directives to generate code for.</source>
          <target state="translated">Directivas de código para las que se va a generar código.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
          <source>Generates code for the specified code directives.</source>
          <target state="translated">Genera código para las directivas de código especificadas.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)">
          <source>The value to generate code for.</source>
          <target state="translated">Valor para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)">
          <source>Generates code for a double-precision floating point number.</source>
          <target state="translated">Genera código para un número de punto flotante de precisión doble.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>The entry point for the code.</source>
          <target state="translated">Punto de entrada del código.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>The code that declares the type.</source>
          <target state="translated">Código que declara el tipo.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified entry point method.</source>
          <target state="translated">Genera código para el método de punto de entrada especificado.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
          <source>The member event to generate code for.</source>
          <target state="translated">Evento de miembro para el que se va generar código.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
          <source>The type of the object that this event occurs on.</source>
          <target state="translated">Tipo del objeto en el que se produce este evento.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified event.</source>
          <target state="translated">Genera código para el evento especificado.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
          <source>Generates code for the specified event reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia de evento especificada.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
          <source>The code expression to generate code for.</source>
          <target state="translated">Expresión de código para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
          <source>Generates code for the specified code expression.</source>
          <target state="translated">Genera código para la expresión de código especificada.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> no es un <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
          <source>Generates code for the specified expression statement.</source>
          <target state="translated">Genera código para la instrucción de expresión especificada.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
          <source>The field to generate code for.</source>
          <target state="translated">Campo para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
          <source>Generates code for the specified member field.</source>
          <target state="translated">Genera código para el campo de miembro especificado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
          <source>Generates code for the specified field reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia de campo especificada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
          <source>Generates code for the specified <ph id="ph1">&lt;see langword="goto" /&gt;</ph> statement.</source>
          <target state="translated">Genera código para la instrucción <ph id="ph1">&lt;see langword="goto" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
          <source>Generates code for the specified indexer expression.</source>
          <target state="translated">Genera código para la expresión de indizador especificada.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
          <source>Generates code for the specified iteration statement.</source>
          <target state="translated">Genera código para la instrucción de iteración especificada.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
          <source>For most languages, this method will generate code for a <ph id="ph1">`for`</ph> loop or a <ph id="ph2">`while`</ph> loop.</source>
          <target state="translated">Para la mayoría de los idiomas, este método generará código para un <ph id="ph1">`for`</ph> bucle o un <ph id="ph2">`while`</ph> bucle.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
          <source>Generates code for the specified labeled statement.</source>
          <target state="translated">Genera código para la instrucción con etiqueta especificada.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)">
          <source>The end of the line pragma to generate code for.</source>
          <target state="translated">Final de línea pragma para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)">
          <source>Generates code for the specified line pragma end.</source>
          <target state="translated">Genera código para el final de línea pragma especificado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
          <source>The start of the line pragma to generate code for.</source>
          <target state="translated">Inicio de línea pragma para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
          <source>Generates code for the specified line pragma start.</source>
          <target state="translated">Genera código para el inicio de línea pragma especificado.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>The member method to generate code for.</source>
          <target state="translated">Método de miembro para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>The type of the object that this method occurs on.</source>
          <target state="translated">Tipo del objeto en el que se ejecuta este método.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified method.</source>
          <target state="translated">Genera código para el método especificado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
          <source>Generates code for the specified method invoke expression.</source>
          <target state="translated">Genera código para la expresión de invocación de método especificada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
          <source>Generates code for the specified method reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia de método especificada.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
          <source>Generates code for the specified method return statement.</source>
          <target state="translated">Genera código para la instrucción return de método especificada.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
          <source>The namespace to generate code for.</source>
          <target state="translated">Espacio de nombres para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
          <source>Generates code for the specified namespace.</source>
          <target state="translated">Genera código para el espacio de nombres especificado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
          <source>The namespace to generate code for.</source>
          <target state="translated">Espacio de nombres para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
          <source>Generates code for the end of a namespace.</source>
          <target state="translated">Genera código para el final de un espacio de nombres.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
          <source>The namespace import to generate code for.</source>
          <target state="translated">Importación de espacio de nombres para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
          <source>Generates code for the specified namespace import.</source>
          <target state="translated">Genera código para la importación de espacio de nombres especificada.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)">
          <source>The namespace import to generate code for.</source>
          <target state="translated">Importación de espacio de nombres para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)">
          <source>Generates code for the specified namespace import.</source>
          <target state="translated">Genera código para la importación de espacio de nombres especificada.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)">
          <source>The compile unit to generate namespaces for.</source>
          <target state="translated">Unidad de compilación para la que se van a generar espacios de nombres.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)">
          <source>Generates code for the namespaces in the specified compile unit.</source>
          <target state="translated">Genera código para el espacio de nombres en la unidad de compilación especificada.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
          <source>The namespace to generate code for.</source>
          <target state="translated">Espacio de nombres para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
          <source>Generates code for the start of a namespace.</source>
          <target state="translated">Genera código para el inicio de un espacio de nombres.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
          <source>Generates code for the specified object creation expression.</source>
          <target state="translated">Genera código para la expresión de creación de objeto especificada.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
          <source>Generates code for the specified parameter declaration expression.</source>
          <target state="translated">Genera código para la expresión de declaración de parámetros especificada.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Generates code for the specified primitive expression.</source>
          <target state="translated">Genera código para la expresión primitiva especificada.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> uses an invalid data type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> utiliza un tipo de datos no válido.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Only the following data types are valid:</source>
          <target state="translated">Sólo los tipos de datos siguientes son válidos:</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>string</source>
          <target state="translated">cadena</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>char</source>
          <target state="translated">char</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>byte</source>
          <target state="translated">byte</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Int16</source>
          <target state="translated">Int16</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Int32</source>
          <target state="translated">Int32</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Int64</source>
          <target state="translated">Int64</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Single</source>
          <target state="translated">Single</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Double</source>
          <target state="translated">Doble</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Decimal</source>
          <target state="translated">Decimal</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
          <source>The property to generate code for.</source>
          <target state="translated">Propiedad para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
          <source>The type of the object that this property occurs on.</source>
          <target state="translated">Tipo del objeto en el que tiene lugar esta propiedad.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified property.</source>
          <target state="translated">Genera código para la propiedad especificada.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
          <source>Generates code for the specified property reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia de propiedad especificada.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
          <source>Generates code for the specified property set value reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia especificada del valor del conjunto de propiedades.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
          <source>Generates code for the specified remove event statement.</source>
          <target state="translated">Genera código para la instrucción de eliminación de evento especificada.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)">
          <source>The value to generate code for.</source>
          <target state="translated">Valor para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)">
          <source>Generates code for a single-precision floating point number.</source>
          <target state="translated">Genera código para un número de punto flotante de precisión sencilla.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
          <source>The literal code fragment compile unit to generate code for.</source>
          <target state="translated">Unidad de compilación de fragmento de código literal para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
          <source>Outputs the code of the specified literal code fragment compile unit.</source>
          <target state="translated">Proporciona el código de la unidad de compilación de fragmento de código literal que se especifique.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
          <source>Outputs the code of the specified literal code fragment expression.</source>
          <target state="translated">Proporciona los resultados relacionados con el código de la expresión de fragmento de código literal que se especifique.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
          <source>The member to generate code for.</source>
          <target state="translated">Miembro para el que se va generar código.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
          <source>Outputs the code of the specified literal code fragment class member.</source>
          <target state="translated">Proporciona los resultados relacionados con el código del miembro de clase de fragmento de código literal que se especifique.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
          <source>Outputs the code of the specified literal code fragment statement.</source>
          <target state="translated">Proporciona los resultados relacionados con el código de la instrucción de fragmento de código literal que se especifique.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
          <source>Generates code for the specified statement.</source>
          <target state="translated">Genera código para la instrucción especificada.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> no es un <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)">
          <source>The statements to generate code for.</source>
          <target state="translated">Instrucciones para las que se va a generar código.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)">
          <source>Generates code for the specified statement collection.</source>
          <target state="translated">Genera código para la colección de instrucciones especificada.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
          <source>Generates code for the specified this reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia especificada.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
          <source>Generates code for the specified throw exception statement.</source>
          <target state="translated">Genera código para la instrucción de producción de excepción especificada.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
          <source>Generates code for the specified <ph id="ph1">&lt;see langword="try...catch...finally" /&gt;</ph> statement.</source>
          <target state="translated">Genera código para la instrucción <ph id="ph1">&lt;see langword="try...catch...finally" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
          <source>The class constructor to generate code for.</source>
          <target state="translated">Constructor de clase para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
          <source>Generates code for the specified class constructor.</source>
          <target state="translated">Genera código para el constructor de clase especificado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
          <source>The end of the class to generate code for.</source>
          <target state="translated">Final de la clase para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified end of the class.</source>
          <target state="translated">Genera código para el final de la clase especificado.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
          <source>Generates code for the specified type of expression.</source>
          <target state="translated">Genera código para el tipo de expresión especificado.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
          <source>Generates code for the specified type reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia de tipo especificada.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)">
          <source>The namespace to generate classes for.</source>
          <target state="translated">Espacio de nombres para el que se van a generar clases.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)">
          <source>Generates code for the specified namespace and the classes it contains.</source>
          <target state="translated">Genera código para el espacio de nombres especificado y para las clases que contiene.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
          <source>The start of the class to generate code for.</source>
          <target state="translated">Inicio de la clase para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified start of the class.</source>
          <target state="translated">Genera código para el inicio especificado de la clase.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">Instrucción para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
          <source>Generates code for the specified variable declaration statement.</source>
          <target state="translated">Genera código para la instrucción de declaración de variables especificada.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
          <source>Generates code for the specified variable reference expression.</source>
          <target state="translated">Genera código para la expresión de referencia de variable especificada.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The type whose name will be returned.</source>
          <target state="translated">Tipo cuyo nombre se devolverá.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>Gets the name of the specified data type.</source>
          <target state="translated">Obtiene el nombre del tipo de datos especificado.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The name of the data type reference.</source>
          <target state="translated">Nombre de la referencia de tipo de datos.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.Indent">
          <source>Gets or sets the amount of spaces to indent each indentation level.</source>
          <target state="translated">Obtiene o establece los espacios que se van a aplicar a cada nivel de sangría.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.Indent">
          <source>The number of spaces to indent for each indentation level.</source>
          <target state="translated">Número de espacios donde aplicar una sangría a cada nivel de sangría.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.Indent">
          <source>Segments of code are commonly indented for ease of recognition.</source>
          <target state="translated">Normalmente se aplica sangría a segmentos de código para facilitar su reconocimiento.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentClass">
          <source>Gets a value indicating whether the current object being generated is a class.</source>
          <target state="translated">Obtiene un valor que indica si el objeto que se está generando en la actualidad es una clase.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is a class; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto actual es una clase; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate">
          <source>Gets a value indicating whether the current object being generated is a delegate.</source>
          <target state="translated">Obtiene un valor que indica si el objeto que se está generando en la actualidad es un delegado.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is a delegate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto actual es un delegado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum">
          <source>Gets a value indicating whether the current object being generated is an enumeration.</source>
          <target state="translated">Obtiene un valor que indica si el objeto que se está generando en la actualidad es una enumeración.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is an enumeration; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto actual es una enumeración; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface">
          <source>Gets a value indicating whether the current object being generated is an interface.</source>
          <target state="translated">Obtiene un valor que indica si el objeto que se está generando en la actualidad es una interfaz.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is an interface; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto actual es una interfaz; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct">
          <source>Gets a value indicating whether the current object being generated is a value type or struct.</source>
          <target state="translated">Obtiene un valor que indica si el objeto que se está generando en la actualidad es un tipo de valor o struct.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is a value type or struct; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto actual es un tipo de valor o struct; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)">
          <source>The value to test for conflicts with valid identifiers.</source>
          <target state="translated">Valor que hay que comprobar para ver si existen conflictos con identificadores válidos.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)">
          <source>Gets a value indicating whether the specified value is a valid identifier.</source>
          <target state="translated">Obtiene un valor que indica si el valor especificado es un identificador válido.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value is a valid identifier; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el valor es un identificador válido; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>The string to test for validity.</source>
          <target state="translated">Cadena que hay que comprobar para ver si es válida.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>Gets a value indicating whether the specified string is a valid identifier.</source>
          <target state="translated">Obtiene un valor que indica si la cadena especificada es un identificador válido.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified string is a valid identifier; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la cadena especificada es un identificador válido; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>This method checks the specified string to ensure that it does not contain certain characters that can be used to escape an identifier field.</source>
          <target state="translated">Este método comprueba la cadena especificada para asegurarse de que no contiene algunos caracteres que pueden utilizarse para un campo de identificador de escape.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A&gt;</ph> method calls this method to perform string validation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A&gt;</ph> método llama a este método para realizar la validación de la cadena.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>Calling the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A&gt;</ph> method and passing a <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> before generating code from it can prevent the use of certain character sequences to include hidden code within an identifier field.</source>
          <target state="translated">Llamar a la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A&gt;</ph> método y pasar un <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> antes de generar código a partir de la puede impedir el uso de ciertas secuencias de caracteres que incluyen código oculto dentro de un campo de identificador.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.NullToken">
          <source>Gets the token that represents <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Obtiene el token que representa <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.NullToken">
          <source>The token that represents <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Token que representa <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.Options">
          <source>Gets the options to be used by the code generator.</source>
          <target state="translated">Obtiene las opciones que va a utilizar el generador de código.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.Options">
          <source>An object that indicates the options for the code generator to use.</source>
          <target state="translated">Objeto que indica las opciones que va a utilizar el generador de código.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.Output">
          <source>Gets the text writer to use for output.</source>
          <target state="translated">Obtiene el escritor de texto que se va a utilizar para la salida.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.Output">
          <source>The text writer to use for output.</source>
          <target state="translated">Escritor de texto que se va a utilizar para la salida.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
          <source>The attribute argument to generate code for.</source>
          <target state="translated">Argumento de atributo para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
          <source>Outputs an argument in an attribute block.</source>
          <target state="translated">Devuelve un argumento dentro de un bloque de atributos.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>The attributes to generate code for.</source>
          <target state="translated">Atributos para los que se va a generar código.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>Generates code for the specified attribute declaration collection.</source>
          <target state="translated">Genera código para la colección de declaraciones de atributos especificada.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)">
          <source>One of the enumeration values that indicates the attribute of the field.</source>
          <target state="translated">Uno de los valores de enumeración que indica el atributo del campo.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)">
          <source>Generates code for the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.FieldDirection" /&gt;</ph>.</source>
          <target state="translated">Genera código para el <ph id="ph1">&lt;see cref="T:System.CodeDom.FieldDirection" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>Generates code for the specified expression list.</source>
          <target state="translated">Genera código para la lista de expresiones especificada.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
          <source>The expressions to generate code for.</source>
          <target state="translated">Expresiones para las que se va a generar código.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
          <source>Generates code for the specified expression list.</source>
          <target state="translated">Genera código para la lista de expresiones especificada.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
          <source>The expressions to generate code for.</source>
          <target state="translated">Expresiones para las que se va a generar código.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to insert a new line after each item; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para insertar una línea nueva después de cada elemento; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
          <source>Generates code for the specified expression list.</source>
          <target state="translated">Genera código para la lista de expresiones especificada.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)">
          <source>One of the enumeration values that specifies the attributes.</source>
          <target state="translated">Uno de los valores de enumeración que especifica los atributos.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)">
          <source>Outputs a field scope modifier that corresponds to the specified attributes.</source>
          <target state="translated">Devuelve un modificador de ámbito de campo que se corresponde con los atributos especificados.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)">
          <source>The identifier to output.</source>
          <target state="translated">Identificador que se va a devolver.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)">
          <source>Outputs the specified identifier.</source>
          <target state="translated">Devuelve el identificador especificado.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)">
          <source>One of the enumeration values that indicates the member access modifier to generate code for.</source>
          <target state="translated">Uno de los valores de enumeración que indica el modificador de acceso de miembro para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)">
          <source>Generates code for the specified member access modifier.</source>
          <target state="translated">Genera código para el modificador de acceso de miembro especificado.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)">
          <source>One of the enumeration values that indicates the member scope modifier to generate code for.</source>
          <target state="translated">Uno de los valores de enumeración que indica el modificador de ámbito de miembro para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)">
          <source>Generates code for the specified member scope modifier.</source>
          <target state="translated">Genera código para el modificador de ámbito de miembro especificado.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)">
          <source>The operator to generate code for.</source>
          <target state="translated">Operador para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)">
          <source>Generates code for the specified operator.</source>
          <target state="translated">Genera código para el operador especificado.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
          <source>The parameter declaration expressions to generate code for.</source>
          <target state="translated">Expresiones de declaración de parámetros para las que se va a generar código.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
          <source>Generates code for the specified parameters.</source>
          <target state="translated">Genera código para los parámetros especificados.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
          <source>The type to generate code for.</source>
          <target state="translated">Tipo para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
          <source>Generates code for the specified type.</source>
          <target state="translated">Genera código para el tipo especificado.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
          <source>One of the enumeration values that indicates the type attributes to generate code for.</source>
          <target state="translated">Uno de los valores de enumeración que indica los atributos de tipo para los que se va a generar código.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type is a struct; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el tipo es un struct; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type is an enum; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el tipo es una enumeración; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
          <source>Generates code for the specified type attributes.</source>
          <target state="translated">Genera código para los atributos de tipo especificados.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
          <source>The type.</source>
          <target state="translated">Tipo.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
          <source>The name for the object.</source>
          <target state="translated">Nombre para el objeto.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
          <source>Generates code for the specified object type and name pair.</source>
          <target state="translated">Genera código para el par de tipo y nombre de objeto especificado.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>The string to convert.</source>
          <target state="translated">Cadena que se va a convertir.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>Converts the specified string by formatting it with escape codes.</source>
          <target state="translated">Convierte la cadena especificada dándole formato con códigos de escape.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>The converted string.</source>
          <target state="translated">Cadena convertida.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>This method returns a modified version of the specified string that has been formatted with escape code characters.</source>
          <target state="translated">Este método devuelve una versión modificada de la cadena especificada que se ha formateado previamente con caracteres de código de escape.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>For example, <ph id="ph1">`/"`</ph> might be used to represent <ph id="ph2">`"`</ph>.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">`/"`</ph> podría usarse para representar <ph id="ph2">`"`</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>These escape codes are used to replace elements of the specified string that might otherwise conflict with language syntax.</source>
          <target state="translated">Estos códigos de escape se utilizan para reemplazar elementos de la cadena especificada que, de lo contrario, podrían entrar en conflicto con la sintaxis del lenguaje.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>The type of code generation support to test for.</source>
          <target state="translated">Tipo de compatibilidad de generación de código que se va a comprobar.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>Gets a value indicating whether the specified code generation support is provided.</source>
          <target state="translated">Obtiene un valor que indica si se proporciona la compatibilidad de generación de código especificada.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified code generation support is provided; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se proporciona la compatibilidad de generación de código especificada; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
          <source>The string to create an escaped identifier for.</source>
          <target state="translated">Cadena para crear un identificador de escape.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
          <source>Creates an escaped identifier for the specified value.</source>
          <target state="translated">Crea un identificador de escape para el valor especificado.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier for the value.</source>
          <target state="translated">Identificador de escape para el valor.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
          <source>The string to generate a valid identifier for.</source>
          <target state="translated">Cadena para generar un identificador válido.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
          <source>Creates a valid identifier for the specified value.</source>
          <target state="translated">Crea un identificador válido para el valor especificado.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
          <source>A valid identifier for the specified value.</source>
          <target state="translated">Identificador válido para el valor especificado.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The CodeDOM compilation unit to generate code for.</source>
          <target state="translated">Unidad de compilación CodeDOM para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">Escritor de texto que recibe la salida de código.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">Opciones que se van a usar para generar código.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</source>
          <target state="translated">Genera código para la unidad de compilación de Code Document Object Model (CodeDOM) especificada y lo envía al escritor de texto especificado mediante las opciones especificadas.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> no está disponible.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> se puede haber cerrado antes de realiza la llamada al método.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The expression to generate code for.</source>
          <target state="translated">Expresión para la que se va a generar código.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">Escritor de texto que recibe la salida de código.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">Opciones que se van a usar para generar código.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</source>
          <target state="translated">Genera código para la expresión de Code Document Object Model (CodeDOM) especificada y lo envía al escritor de texto especificado.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> no está disponible.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> se puede haber cerrado antes de realiza la llamada al método.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The namespace to generate code for.</source>
          <target state="translated">Espacio de nombres para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">Escritor de texto que recibe la salida de código.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">Opciones que se van a usar para generar código.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</source>
          <target state="translated">Genera código para el espacio de nombres de Code Document Object Model (CodeDOM) especificado y lo envía al escritor de texto especificado mediante las opciones especificadas.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> no está disponible.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> se puede haber cerrado antes de realiza la llamada al método.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The statement that contains the CodeDOM elements to translate.</source>
          <target state="translated">Instrucción que contiene los elementos CodeDOM que se van a traducir.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">Escritor de texto que recibe la salida de código.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">Opciones que se van a usar para generar código.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</source>
          <target state="translated">Genera código para la instrucción de Code Document Object Model (CodeDOM) especificada y lo envía al escritor de texto especificado mediante las opciones especificadas.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> no está disponible.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> se puede haber cerrado antes de realiza la llamada al método.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The type to generate code for.</source>
          <target state="translated">Tipo para el que se va a generar código.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">Escritor de texto que recibe la salida de código.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">Opciones que se van a usar para generar código.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</source>
          <target state="translated">Genera código para la declaración de Code Document Object Model (CodeDOM) especificada y lo envía al escritor de texto especificado mediante las opciones especificadas.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> no está disponible.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> se puede haber cerrado antes de realiza la llamada al método.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The type to return.</source>
          <target state="translated">Tipo que se devuelve.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>Gets the type indicated by the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>.</source>
          <target state="translated">Obtiene el tipo indicado por el <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The name of the data type reference.</source>
          <target state="translated">Nombre de la referencia de tipo de datos.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
          <source>The value to test.</source>
          <target state="translated">Valor que se va a comprobar.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
          <source>Gets a value that indicates whether the specified value is a valid identifier for the current language.</source>
          <target state="translated">Obtiene un valor que indica si el valor especificado es un identificador válido para el lenguaje actual.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a valid identifier; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="value" /&gt;</ph> es un identificador válido; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>The capabilities to test the generator for.</source>
          <target state="translated">Características para las que se va a comprobar el generador.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>Gets a value indicating whether the generator provides support for the language features represented by the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.GeneratorSupport" /&gt;</ph> object.</source>
          <target state="translated">Obtiene un valor que indica si el generador proporciona compatibilidad para las características de lenguaje representadas por el objeto <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.GeneratorSupport" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified capabilities are supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se admiten las funciones especificadas; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)">
          <source>The identifier to validate.</source>
          <target state="translated">El identificador que se debe validar.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)">
          <source>Throws an exception if the specified value is not a valid identifier.</source>
          <target state="translated">Provoca una excepción si el valor especificado no es un identificador válido.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)">
          <source>The identifier to test for validity as an identifier.</source>
          <target state="translated">Identificador que hay que comprobar si es válido como tal.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)">
          <source>Throws an exception if the specified string is not a valid identifier.</source>
          <target state="translated">Inicia una excepción si la cadena especificada no es un identificador válido.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)">
          <source>If the specified identifier is invalid or conflicts with reserved or language keywords.</source>
          <target state="translated">Si el identificador especificado no es válido o se producen conflictos con palabras clave o reservadas del lenguaje.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>An object to test for invalid identifiers.</source>
          <target state="translated">Objeto que se someterá a pruebas en busca de identificadores no válidos.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>Attempts to validate each identifier field contained in the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeObject" /&gt;</ph> or <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> tree.</source>
          <target state="translated">Intenta validar cada campo identificador que está dentro del <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeObject" /&gt;</ph> o árbol <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>It is possible for the identifier fields of <ph id="ph1">&lt;xref:System.CodeDom.CodeObject&gt;</ph> objects to contain field escape characters and hidden code which can allow security violations.</source>
          <target state="translated">Es posible que los campos de identificador de <ph id="ph1">&lt;xref:System.CodeDom.CodeObject&gt;</ph> objetos que se va a contener los caracteres de escape de campo y código oculto que puede permitir que las infracciones de seguridad.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>This method checks the literal fields of each <ph id="ph1">&lt;xref:System.CodeDom.CodeObject&gt;</ph> in a <ph id="ph2">&lt;xref:System.CodeDom&gt;</ph> tree for characters which could be used to hide code, and throws an exception if an identifier field contains an invalid character.</source>
          <target state="translated">Este método comprueba los campos literales de cada <ph id="ph1">&lt;xref:System.CodeDom.CodeObject&gt;</ph> en un <ph id="ph2">&lt;xref:System.CodeDom&gt;</ph> árbol para los caracteres que puede utilizar para ocultar código y produce una excepción si un campo identificador contiene un carácter no válido.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A&gt;</ph> method to validate each identifier in the specified <ph id="ph2">&lt;xref:System.CodeDom.CodeObject&gt;</ph> or <ph id="ph3">&lt;xref:System.CodeDom&gt;</ph> tree, and throws an exception if an identifier is invalid or contains invalid characters.</source>
          <target state="translated">Este método llama a la <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A&gt;</ph> método para validar cada identificador de la manera especificada <ph id="ph2">&lt;xref:System.CodeDom.CodeObject&gt;</ph> o <ph id="ph3">&lt;xref:System.CodeDom&gt;</ph> del árbol y produce una excepción si un identificador no es válido o contiene caracteres no válidos.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>Call this method and pass it the <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> containing the code graph to generate before generating code to block the use of certain character sequences that can be used to include hidden code within an identifier field.</source>
          <target state="translated">Llamar a este método y pásele el <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> que contiene el gráfico de código para generar antes de generar código para bloquear el uso de ciertas secuencias de caracteres que puede utilizarse para incluir código oculto dentro de un campo de identificador.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>This method is not called automatically by any generate code methods.</source>
          <target state="translated">Este método no se llama automáticamente por ningún método de generar código.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeObject" /&gt;</ph> contains an invalid identifier.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeObject" /&gt;</ph> especificado contiene un identificador no válido.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>