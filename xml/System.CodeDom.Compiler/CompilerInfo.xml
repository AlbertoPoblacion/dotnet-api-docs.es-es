<Type Name="CompilerInfo" FullName="System.CodeDom.Compiler.CompilerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa380af74fbc398c3723101ff223d48767de5ee3" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46637629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompilerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompilerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CompilerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompilerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerInfo sealed" />
  <TypeSignature Language="F#" Value="type CompilerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa los valores de configuración de un proveedor de lenguaje. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.CodeDom.Compiler.CompilerInfo> clase para determinar si un <xref:System.CodeDom.Compiler.CodeDomProvider> implementación está configurada en el equipo, o para examinar la configuración de la configuración y del compilador para un proveedor de lenguaje específico.  
  
 El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo el archivo contiene los valores de configuración del proveedor y compilador de lenguaje. Cada proveedor de lenguaje configurado tiene un elemento de configuración del compilador correspondiente. Cada elemento define la <xref:System.CodeDom.Compiler.CodeDomProvider> tipo de implementación, nombres de los idiomas admitidos, las extensiones de nombre de archivo admitidos y los parámetros del compilador.  
  
 .NET Framework define la configuración inicial del compilador en el archivo de configuración del equipo. Los desarrolladores y los proveedores de compiladores pueden agregar valores de configuración para una nueva implementación de <xref:System.CodeDom.Compiler.CodeDomProvider>.  
  
 La <xref:System.CodeDom.Compiler.CompilerInfo> clase proporciona acceso de solo lectura a esta configuración en el archivo de configuración del equipo. Use la <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>, <xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>, y <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> miembros para examinar los atributos de configuración correspondiente para un proveedor de lenguaje. Use el <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> método para obtener el compilador los valores de atributo de nivel de advertencia y de las opciones para un proveedor de lenguaje.  
  
 Para obtener más detalles sobre la configuración del proveedor de lenguaje en el archivo de configuración, consulte [compilador y Language Provider Settings Schema](~/docs/framework/configure-apps/file-schema/compiler/index.md).  
  
> [!NOTE]
>  Esta clase contiene una petición de vínculo en el nivel de clase que se aplica a todos los miembros. Un <xref:System.Security.SecurityException> se produce cuando el llamador inmediato no tiene permiso de plena confianza. Para obtener más información acerca de las peticiones de vínculo, vea [peticiones de vínculo](~/docs/framework/misc/link-demands.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra los valores de configuración del proveedor de lenguaje. Argumentos de línea de comandos se usan para especificar un idioma, la extensión de nombre de archivo o tipo de proveedor. Para la entrada especificada, el ejemplo determina el proveedor de lenguaje correspondiente y muestra la configuración del compilador de lenguaje configurado.  
  
 [!code-cpp[CodeDom_CompilerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#1)]
 [!code-csharp[CodeDom_CompilerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#1)]
 [!code-vb[CodeDom_CompilerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permisos con nombre](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
    <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configuración de compilador y proveedor de lenguaje</related>
  </Docs>
  <Members>
    <Member MemberName="CodeDomProviderType">
      <MemberSignature Language="C#" Value="public Type CodeDomProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CodeDomProviderType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProviderType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CodeDomProviderType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProviderType : Type" Usage="System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de la implementación de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurada.</summary>
        <value>Una instancia de <see cref="T:System.Type" /> de sólo lectura que representa el tipo de proveedor de lenguaje configurado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El archivo de configuración de máquina contiene el nombre de tipo completo para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo. El <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> valor de propiedad es un <xref:System.Type> instancia que representa una implementación de proveedor de lenguaje configurado.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si el idioma de entrada tiene un objeto configurado <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo. Si hay un proveedor configurado para el idioma especificado, en el ejemplo se muestra la configuración del proveedor de lenguaje. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">El proveedor de lenguaje no está configurado en este equipo.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pueda encontrar el tipo porque es un valor <see langword="null" /> o una cadena vacía.  
  
O bien 
No se puede encontrar el tipo porque el nombre de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> no se puede encontrar en el archivo de configuración.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Asociados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeración: <see langword="Unrestricted" />.</permission>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultCompilerParameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDefaultCompilerParameters () As CompilerParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerParameters ^ CreateDefaultCompilerParameters();" />
      <MemberSignature Language="F#" Value="member this.CreateDefaultCompilerParameters : unit -&gt; System.CodeDom.Compiler.CompilerParameters" Usage="compilerInfo.CreateDefaultCompilerParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene los valores del compilador configurado para la implementación del proveedor de lenguaje.</summary>
        <returns>Una instancia de <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> de sólo lectura que contiene las opciones y valores del compilador configurados para el proveedor de lenguaje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> método para examinar la configuración del compilador de la <xref:System.CodeDom.Compiler.CompilerInfo> instancias devueltas por la <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> y <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> métodos.  
  
 El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo el archivo contiene la configuración del proveedor y compilador de lenguaje para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo. Cada elemento de configuración del proveedor de lenguaje puede contener opcional `compilerOptions` y `warningLevel` atributos. Estos atributos definen los valores predeterminados para el <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> y <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> propiedades.  
  
 Si el elemento de configuración del proveedor de lenguaje no define el `compilerOptions` atributo, el <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> valor de propiedad es una cadena vacía (""). Si el elemento de configuración del proveedor de lenguaje no define el `warningLevel` atributo, el <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> valor de propiedad es -1.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si el idioma de entrada tiene un objeto configurado <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo. Si hay un proveedor configurado para el idioma especificado, en el ejemplo se muestra la configuración del proveedor de lenguaje. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Asociados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeración: <see langword="Unrestricted" />; [NIB: conjuntos de permisos con nombre](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configuración de compilador y proveedor de lenguaje</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve una instancia de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para la configuración del proveedor de lenguaje actual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider () As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider();" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : unit -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una instancia de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para la configuración del proveedor de lenguaje actual.</summary>
        <returns>Proveedor CodeDOM asociado a la configuración del proveedor de lenguaje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> método devuelve un <xref:System.CodeDom.Compiler.CodeDomProvider> instancia para la configuración del proveedor de lenguaje actual.  
  
 Use la <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> método para obtener un <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para un <xref:System.CodeDom.Compiler.CompilerInfo> instancia devuelta por la <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> o <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se enumera los proveedores de lenguaje en el equipo y muestra la configuración de compilador y la configuración de cada proveedor de lenguaje. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Asociados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeración: <see langword="Unrestricted" />.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configuración de compilador y proveedor de lenguaje</related>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider (providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider providerOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="providerOptions">Una colección de opciones de proveedor extraídas del archivo de configuración.</param>
        <summary>Devuelve una instancia de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para la configuración del proveedor de lenguaje actual y las opciones especificadas.</summary>
        <returns>Un proveedor CodeDOM asociado a la configuración de proveedor de lenguaje y a las opciones especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> método devuelve un <xref:System.CodeDom.Compiler.CodeDomProvider> instancia para la configuración actual del proveedor de lenguaje y las opciones de proveedor especificado. Para obtener información acerca de las opciones de proveedor admitidos, consulte la documentación específica del proveedor CodeDOM.  
  
 Use la <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> método para obtener un <xref:System.CodeDom.Compiler.CodeDomProvider> implementación para un <xref:System.CodeDom.Compiler.CompilerInfo> instancia devuelta por la <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> o <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerOptions" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El proveedor no admite opciones.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compilerInfo.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objeto que se va a comparar con el objeto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> actual.</param>
        <summary>Determina si el objeto especificado representa la misma configuración del compilador y del proveedor de lenguaje que el objeto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> actual.</summary>
        <returns>
          <see langword="true" /> si <paramref name="o" /> es un objeto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> y tiene el mismo valor que la instancia en cuestión; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida el <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> método.  
  
 Las dos instancias se consideran iguales si los valores de las siguientes propiedades son iguales:  
  
-   Propiedad <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A>  
  
-   El <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>, <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>, y <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> propiedades de la <xref:System.CodeDom.Compiler.CompilerParameters> instancia devuelta por la <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> método.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Asociados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeración: <see langword="Unrestricted" />; [NIB: conjuntos de permisos con nombre](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="public string[] GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExtensions () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; string[]" Usage="compilerInfo.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve las extensiones de nombre de archivo admitidas por el proveedor de lenguaje.</summary>
        <returns>Una matriz de extensiones de nombre de archivo admitidas por el proveedor de lenguaje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo el archivo contiene la configuración del proveedor y compilador de lenguaje para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo. Cada proveedor de lenguaje configurado admite una o varias extensiones de nombre de archivo. Por ejemplo, un <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> podría admitir las extensiones de nombre de archivo "cs" y ". c#".  
  
   
  
## Examples  
 En el ejemplo de código siguiente se enumera los proveedores de lenguaje en el equipo y muestra la configuración de compilador y la configuración de cada proveedor de lenguaje. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Asociados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeración: <see langword="Unrestricted" />; [NIB: conjuntos de permisos con nombre](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configuración de compilador y proveedor de lenguaje</related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compilerInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el código hash de la instancia actual.</summary>
        <returns>Un código hash de un entero de 32 bits con signo para la instancia actual de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />, adecuado para su utilización en estructuras de datos y algoritmos hash tales como una tabla hash.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> método.  
  
 Este método genera el mismo código hash para dos objetos que son iguales de acuerdo con el método <xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se crea una instancia de la <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType> clase. En el ejemplo se muestra el nombre del proveedor, código hash y extensión de nombre de archivo predeterminado para la nueva instancia del proveedor. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Asociados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeración: <see langword="Unrestricted" />; [NIB: conjuntos de permisos con nombre](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguages">
      <MemberSignature Language="C#" Value="public string[] GetLanguages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetLanguages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetLanguages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguages () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetLanguages();" />
      <MemberSignature Language="F#" Value="member this.GetLanguages : unit -&gt; string[]" Usage="compilerInfo.GetLanguages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene los nombres de lenguajes admitidos por el proveedor de lenguaje.</summary>
        <returns>Una matriz de nombres de lenguajes admitidos por el proveedor de lenguaje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [ &lt;system.codedom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) en la configuración del equipo el archivo contiene la configuración del proveedor y compilador de lenguaje para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo. Cada proveedor de lenguaje configurado admite uno o más nombres de lenguaje. Por ejemplo, el <xref:System.CodeDom.Compiler.CompilerInfo> de objeto para un <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> podría devolver una matriz con el lenguaje nombres "c#", "cs" y "csharp".  
  
   
  
## Examples  
 En el ejemplo de código siguiente se enumera los proveedores de lenguaje en el equipo y muestra la configuración de compilador y la configuración de cada proveedor de lenguaje. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Asociados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeración: <see langword="Unrestricted" />; [NIB: conjuntos de permisos con nombre](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configuración de compilador y proveedor de lenguaje</related>
      </Docs>
    </Member>
    <Member MemberName="IsCodeDomProviderTypeValid">
      <MemberSignature Language="C#" Value="public bool IsCodeDomProviderTypeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCodeDomProviderTypeValid" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCodeDomProviderTypeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCodeDomProviderTypeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCodeDomProviderTypeValid : bool" Usage="System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un valor que indica si la implementación del proveedor de lenguaje está configurada en el equipo.</summary>
        <value>Es <see langword="true" /> si el tipo de implementación del proveedor de lenguaje está configurado en el equipo; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> propiedad para comprobar la <xref:System.CodeDom.Compiler.CodeDomProvider> implementación antes de acceder a los métodos o propiedades del proveedor. Por ejemplo, después obtener el lenguaje de configuración del proveedor de la <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> método, use el <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> propiedad para comprobar la implementación del tipo de proveedor antes de llamar a la <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> método o mediante el <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si el idioma de entrada tiene un objeto configurado <xref:System.CodeDom.Compiler.CodeDomProvider> implementación en el equipo. Si hay un proveedor configurado para el idioma especificado, en el ejemplo se muestra la configuración del proveedor de lenguaje. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.CodeDom.Compiler.CompilerInfo> clase.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para llamar a los miembros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Asociados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeración: <see langword="Unrestricted" />; [NIB: conjuntos de permisos con nombre](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
  </Members>
</Type>