<Type Name="ExtensionElementCollection" FullName="System.ServiceModel.Configuration.ExtensionElementCollection">
  <TypeSignature Language="C#" Value="public class ExtensionElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExtensionElementCollection extends System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1&lt;class System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.ExtensionElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ExtensionElementCollection&#xA;Inherits ServiceModelConfigurationElementCollection(Of ExtensionElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExtensionElementCollection : System::ServiceModel::Configuration::ServiceModelConfigurationElementCollection&lt;System::ServiceModel::Configuration::ExtensionElement ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="ConfigurationElementType">System.ServiceModel.Configuration.ExtensionElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Configuration.ExtensionElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f0051-101">Representa una colección de instancias de <see cref="T:System.ServiceModel.Configuration.ExtensionElement" />.</span><span class="sxs-lookup"><span data-stu-id="f0051-101">Represents a collection of <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> instances.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExtensionElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0051-102">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f0051-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0051-103">Agrega un elemento de configuración a la colección <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f0051-103">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0051-104">Al agregar, se considera que un elemento es un duplicado de otro sólo en el caso de que sus claves sean idénticas y sus valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="f0051-104">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="f0051-105">Los elementos que tienen idénticas claves y valores se aceptan sin notificación alguna porque los elementos no entran en conflicto.</span><span class="sxs-lookup"><span data-stu-id="f0051-105">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="f0051-106">Sin embargo, no se puede agregar un elemento que tenga la misma clave que otro pero un valor diferente porque no hay una lógica para determinar cuál de los valores en conflicto debe prevalecer.</span><span class="sxs-lookup"><span data-stu-id="f0051-106">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BaseAdd (element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BaseAdd(System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="f0051-107"><see cref="T:System.Configuration.ConfigurationElement" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="f0051-107">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span></span></param>
        <summary><span data-ttu-id="f0051-108">Agrega un elemento de configuración a la colección <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f0051-108">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0051-109">Al agregar, se considera que un elemento es un duplicado de otro sólo en el caso de que sus claves sean idénticas y sus valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="f0051-109">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="f0051-110">Los elementos que tienen idénticas claves y valores se aceptan sin notificación alguna porque los elementos no entran en conflicto.</span><span class="sxs-lookup"><span data-stu-id="f0051-110">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="f0051-111">Sin embargo, no se puede agregar un elemento que tenga la misma clave que otro pero un valor diferente porque no hay una lógica para determinar cuál de los valores en conflicto debe prevalecer.</span><span class="sxs-lookup"><span data-stu-id="f0051-111">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f0051-112">Una extensión con el mismo nombre o tipo que <paramref name="element" /> ya existe en la colección.</span><span class="sxs-lookup"><span data-stu-id="f0051-112">An extension with the same name or type as <paramref name="element" /> already exists in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BaseAdd (index As Integer, element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BaseAdd(int index, System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f0051-113">Ubicación de índice donde agregar <c>element</c>.</span><span class="sxs-lookup"><span data-stu-id="f0051-113">The index location at which to add <c>element</c>.</span></span></param>
        <param name="element"><span data-ttu-id="f0051-114"><see cref="T:System.Configuration.ConfigurationElement" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="f0051-114">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</span></span></param>
        <summary><span data-ttu-id="f0051-115">Agrega un elemento de configuración a la <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />, en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="f0051-115">Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />, at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0051-116">Al agregar, se considera que un elemento es un duplicado de otro sólo en el caso de que sus claves sean idénticas y sus valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="f0051-116">When adding, an element is considered a duplicate only if the keys are identical but the values are different.</span></span> <span data-ttu-id="f0051-117">Los elementos que tienen idénticas claves y valores se aceptan sin notificación alguna porque los elementos no entran en conflicto.</span><span class="sxs-lookup"><span data-stu-id="f0051-117">Elements with identical keys and values are accepted silently because the elements do not compete.</span></span> <span data-ttu-id="f0051-118">Sin embargo, no se puede agregar un elemento que tenga la misma clave que otro pero un valor diferente porque no hay una lógica para determinar cuál de los valores en conflicto debe prevalecer.</span><span class="sxs-lookup"><span data-stu-id="f0051-118">However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="f0051-119">Una extensión con el mismo nombre o tipo que <paramref name="element" /> ya existe en la colección.</span><span class="sxs-lookup"><span data-stu-id="f0051-119">An extension with the same name or type as <paramref name="element" /> already exists in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="f0051-120">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> para el que se va a devolver la clave.</span><span class="sxs-lookup"><span data-stu-id="f0051-120">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for.</span></span></param>
        <summary><span data-ttu-id="f0051-121">Obtiene la clave de elemento para el elemento de configuración especificado.</span><span class="sxs-lookup"><span data-stu-id="f0051-121">Gets the element key for the specified configuration element.</span></span></summary>
        <returns><span data-ttu-id="f0051-122">Un <see cref="T:System.Object" /> que actúa como la clave para el elemento de configuración especificado.</span><span class="sxs-lookup"><span data-stu-id="f0051-122">An <see cref="T:System.Object" /> that acts as the key for the specified configuration element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0051-123">El valor de <paramref name="element" /> es <see langword="null" /> o está vacío.</span><span class="sxs-lookup"><span data-stu-id="f0051-123"><paramref name="element" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected override bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThrowOnDuplicate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ThrowOnDuplicate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0051-124">Obtiene un valor que indica si el intento de agregar un objeto <see cref="T:System.Configuration.ConfigurationElement" /> duplicado a la colección <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> va a hacer que se produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="f0051-124">Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> will cause an exception to be thrown.</span></span></summary>
        <value>
          <span data-ttu-id="f0051-125"><see langword="true" /> si el intento de agregar un objeto <see cref="T:System.Configuration.ConfigurationElement" /> duplicado a <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> va a provocar que se inicie una excepción; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0051-125"><see langword="true" /> if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> will cause an exception to be thrown; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd" />
      </Docs>
    </Member>
  </Members>
</Type>