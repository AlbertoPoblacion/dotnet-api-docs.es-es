<Type Name="ExtensionElementCollection" FullName="System.ServiceModel.Configuration.ExtensionElementCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89a4569a3b7562b6a52b5e4fae80f12c8432ff6a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30509459" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExtensionElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExtensionElementCollection extends System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1&lt;class System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.ExtensionElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ExtensionElementCollection&#xA;Inherits ServiceModelConfigurationElementCollection(Of ExtensionElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExtensionElementCollection : System::ServiceModel::Configuration::ServiceModelConfigurationElementCollection&lt;System::ServiceModel::Configuration::ExtensionElement ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="ConfigurationElementType">System.ServiceModel.Configuration.ExtensionElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Configuration.ExtensionElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una colección de instancias de <see cref="T:System.ServiceModel.Configuration.ExtensionElement" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExtensionElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un elemento de configuración a la colección <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al agregar, se considera que un elemento es un duplicado de otro sólo en el caso de que sus claves sean idénticas y sus valores diferentes. Los elementos que tienen idénticas claves y valores se aceptan sin notificación alguna porque los elementos no entran en conflicto. Sin embargo, no se puede agregar un elemento que tenga la misma clave que otro pero un valor diferente porque no hay una lógica para determinar cuál de los valores en conflicto debe prevalecer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BaseAdd (element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BaseAdd(System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Configuration.ConfigurationElement" /> que se va a agregar.</param>
        <summary>Agrega un elemento de configuración a la colección <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al agregar, se considera que un elemento es un duplicado de otro sólo en el caso de que sus claves sean idénticas y sus valores diferentes. Los elementos que tienen idénticas claves y valores se aceptan sin notificación alguna porque los elementos no entran en conflicto. Sin embargo, no se puede agregar un elemento que tenga la misma clave que otro pero un valor diferente porque no hay una lógica para determinar cuál de los valores en conflicto debe prevalecer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Una extensión con el mismo nombre o tipo que <paramref name="element" /> ya existe en la colección.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BaseAdd (index As Integer, element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BaseAdd(int index, System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index">Ubicación de índice donde agregar <c>element</c>.</param>
        <param name="element">
          <see cref="T:System.Configuration.ConfigurationElement" /> que se va a agregar.</param>
        <summary>Agrega un elemento de configuración a la <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />, en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al agregar, se considera que un elemento es un duplicado de otro sólo en el caso de que sus claves sean idénticas y sus valores diferentes. Los elementos que tienen idénticas claves y valores se aceptan sin notificación alguna porque los elementos no entran en conflicto. Sin embargo, no se puede agregar un elemento que tenga la misma clave que otro pero un valor diferente porque no hay una lógica para determinar cuál de los valores en conflicto debe prevalecer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Una extensión con el mismo nombre o tipo que <paramref name="element" /> ya existe en la colección.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> para el que se va a devolver la clave.</param>
        <summary>Obtiene la clave de elemento para el elemento de configuración especificado.</summary>
        <returns>Un <see cref="T:System.Object" /> que actúa como la clave para el elemento de configuración especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          El valor de <paramref name="element" /> es <see langword="null" /> o está vacío.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected override bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThrowOnDuplicate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ThrowOnDuplicate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el intento de agregar un objeto <see cref="T:System.Configuration.ConfigurationElement" /> duplicado a la colección <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> va a hacer que se produzca una excepción.</summary>
        <value>
          <see langword="true" /> si el intento de agregar un objeto <see cref="T:System.Configuration.ConfigurationElement" /> duplicado a <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> va a provocar que se inicie una excepción; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd" />
      </Docs>
    </Member>
  </Members>
</Type>