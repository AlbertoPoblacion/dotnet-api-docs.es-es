<Type Name="WebMessageEncodingElement" FullName="System.ServiceModel.Configuration.WebMessageEncodingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e93402c44f799b4c7ee3393024c239c5e2585c0d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37457144" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebMessageEncodingElement : System.ServiceModel.Configuration.BindingElementExtensionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMessageEncodingElement extends System.ServiceModel.Configuration.BindingElementExtensionElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.WebMessageEncodingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMessageEncodingElement&#xA;Inherits BindingElementExtensionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMessageEncodingElement sealed : System::ServiceModel::Configuration::BindingElementExtensionElement" />
  <TypeSignature Language="F#" Value="type WebMessageEncodingElement = class&#xA;    inherit BindingElementExtensionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.BindingElementExtensionElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa el elemento de configuración que especifica la codificación de caracteres utilizada para los mensajes que no son SOAP. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Codificar es el proceso de transformar un conjunto de caracteres Unicode en una secuencia de bytes. Los tipos de codificación para los mensajes que no son SOAP son texto, JSON y sin formato.  
  
 <xref:System.ServiceModel.Configuration.WebMessageEncodingElement> representa <xref:System.ServiceModel.Channels.WebMessageEncodingBindingElement> en configuración. El <xref:System.ServiceModel.Channels.WebMessageEncodingBindingElement> proporciona el punto de extensibilidad para integrar un codificador compuesto que se puede usar para invalidar la asignación de tipos de contenido de mensajes entrantes para los diversos (texto/JSON/sin formato binario) de codificadores internos que proporcionada por Windows Communication Foundation (WCF). El codificador del mensaje compuesto no admite SOAP o WS-Addressing.  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Text;  
using System.ServiceModel;  
using System.ServiceModel.Web;  
using System.ServiceModel.Configuration;  
  
class Program  
{  
  static void Main(string[] args)  
  {  
      WebMessageEncodingElement webMEE = new WebMessageEncodingElement();  
      Console.WriteLine("The BE type is: {0}", webMEE.BindingElementType);  
  
      int maxReadPoolSize = webMEE.MaxReadPoolSize;  
      Console.WriteLine("The MaxReadPoolSize is: {0}", maxReadPoolSize);  
      maxReadPoolSize = 128;  
      Console.WriteLine("The MaxReadPoolSize has been changed to: {0}", maxReadPoolSize);  
  
      int maxWritePoolSize = webMEE.MaxWritePoolSize;  
      Console.WriteLine("The MaxWritePoolSize is: {0}", maxWritePoolSize);  
      maxWritePoolSize = 48;  
      Console.WriteLine("The MaxWritePoolSize has been changed to: {0}", maxWritePoolSize);  
  
      Encoding webMessageEncoding = webMEE.WriteEncoding;  
      Console.WriteLine("The write encoding is: {0}", webMessageEncoding);  
      webMessageEncoding = UnicodeEncoding.Unicode;  
      Console.WriteLine("The write encoding has been changed to: {0}", webMessageEncoding);  
  
      XmlDictionaryReaderQuotasElement webMessageReaderQuotasElement = webMEE.ReaderQuotas;  
      Console.WriteLine("The max depth of the reader Quotas is: {0}", webMessageReaderQuotasElement.MaxDepth);  
  
      Console.WriteLine("Press <ENTER> to terminate the program.");  
      Console.ReadLine();  
        }  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMessageEncodingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebMessageEncodingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMessageEncodingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Configuration.WebMessageEncodingElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```  
static void Main(string[] args)  
 {  
    WebMessageEncodingElement webMEE = new WebMessageEncodingElement();  
    Console.WriteLine("The BE type is: {0}", webMEE.BindingElementType);  
  }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyConfiguration(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyConfiguration(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.ApplyConfiguration : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="webMessageEncodingElement.ApplyConfiguration bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement">
          <see cref="T:System.ServiceModel.Channels.BindingElement" /> que se aplicará.</param>
        <summary>Aplica el contenido de un elemento de enlace especificado a esta sección de configuración de enlace.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingElementType">
      <MemberSignature Language="C#" Value="public override Type BindingElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingElementType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebMessageEncodingElement.BindingElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BindingElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BindingElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingElementType : Type" Usage="System.ServiceModel.Configuration.WebMessageEncodingElement.BindingElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de elemento de enlace habilitado por este elemento de configuración.</summary>
        <value>Tipo del elemento de enlace habilitado por este elemento de configuración: <see cref="T:System.ServiceModel.Channels.WebMessageEncodingBindingElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```  
static void Main(string[] args)  
{  
   WebMessageEncodingElement webMEE = new WebMessageEncodingElement();  
   Console.WriteLine("The BE type is: {0}", webMEE.BindingElementType);  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.ServiceModel.Configuration.ServiceModelExtensionElement from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFrom (from As ServiceModelExtensionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::ServiceModel::Configuration::ServiceModelExtensionElement ^ from);" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.ServiceModel.Configuration.ServiceModelExtensionElement -&gt; unit" Usage="webMessageEncodingElement.CopyFrom from" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.ServiceModel.Configuration.ServiceModelExtensionElement" />
      </Parameters>
      <Docs>
        <param name="from">El <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> que se va a copiar.</param>
        <summary>Copia el contenido de la sección de configuración especificada a este elemento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElement">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Channels.BindingElement CreateBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Channels.BindingElement CreateBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebMessageEncodingElement.CreateBindingElement" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateBindingElement () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::ServiceModel::Channels::BindingElement ^ CreateBindingElement();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElement : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="webMessageEncodingElement.CreateBindingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReadPoolSize">
      <MemberSignature Language="C#" Value="public int MaxReadPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxReadPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebMessageEncodingElement.MaxReadPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReadPoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxReadPoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReadPoolSize : int with get, set" Usage="System.ServiceModel.Configuration.WebMessageEncodingElement.MaxReadPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxReadPoolSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica el número máximo de mensajes que se pueden leer simultáneamente sin asignar nuevos lectores.</summary>
        <value>El número máximo de mensajes que se pueden leer simultáneamente sin asignar nuevos lectores. El valor predeterminado es 64.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tamaños de grupo más grandes hacen que el sistema sea más tolerante a picos de actividad a costa de un espacio de trabajo mayor. `WebMessageEncodingElement` configura un codificador compuesto que es capaz de leer y escribir texto sin formato XML, JSON y binario sin formato. Este codificador se compone de tres codificadores independientes. Este valor afecta al número máximo de lectores para cada codificador individual.  
  
   
  
## Examples  
  
```  
static void Main(string[] args)  
{  
    WebMessageEncodingElement webMEE = new WebMessageEncodingElement();  
    int maxReadPoolSize = webMEE.MaxReadPoolSize;  
    Console.WriteLine("The MaxReadPoolSize is: {0}", maxReadPoolSize);  
    maxReadPoolSize = 128;  
    Console.WriteLine("The MaxReadPoolSize has been changed to: {0}", maxReadPoolSize);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWritePoolSize">
      <MemberSignature Language="C#" Value="public int MaxWritePoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWritePoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebMessageEncodingElement.MaxWritePoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWritePoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWritePoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWritePoolSize : int with get, set" Usage="System.ServiceModel.Configuration.WebMessageEncodingElement.MaxWritePoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxWritePoolSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica el número máximo de mensajes que se pueden enviar simultáneamente sin asignar nuevos escritores.</summary>
        <value>El número máximo de mensajes que se pueden enviar simultáneamente sin asignar nuevos escritores. El valor predeterminado es 16.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tamaños de grupo más grandes hacen que el sistema sea más tolerante a picos de actividad a costa de un espacio de trabajo mayor. `WebMessageEncodingElement` configura un codificador compuesto que es capaz de leer y escribir texto sin formato XML, JSON y binario sin formato. Este codificador se compone de tres codificadores independientes. Este valor afecta al número máximo de sistemas de escritura para cada codificador individual.  
  
   
  
## Examples  
  
```  
static void Main(string[] args)  
{  
   int maxWritePoolSize = webMEE.MaxWritePoolSize;  
   Console.WriteLine("The MaxWritePoolSize is: {0}", maxWritePoolSize);  
   maxWritePoolSize = 48;  
   Console.WriteLine("The MaxWritePoolSize has been changed to: {0}", maxWritePoolSize);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebMessageEncodingElement.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotasElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ ReaderQuotas { System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" Usage="System.ServiceModel.Configuration.WebMessageEncodingElement.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("readerQuotas")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece restricciones en la complejidad de mensajes SOAP que pueden ser procesados por puntos de conexión configurados con este enlace.</summary>
        <value>
          <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> que especifica las restricciones de complejidad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las restricciones de complejidad incluyen elementos como una profundidad máxima de elemento o una longitud máxima para el contenido de la cadena dentro del mensaje. Las restricciones protegen contra un tipo de ataques por denegación de servicio (DOS) que intentan usar la complejidad del mensaje para atar los recursos de procesamiento del punto de conexión.  
  
   
  
## Examples  
  
```  
XmlDictionaryReaderQuotasElement webMessageReaderQuotasElement = webMEE.ReaderQuotas;  
Console.WriteLine("The max depth of the reader Quotas is: {0}", webMessageReaderQuotasElement.MaxDepth);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebContentTypeMapperType">
      <MemberSignature Language="C#" Value="public string WebContentTypeMapperType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebContentTypeMapperType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebMessageEncodingElement.WebContentTypeMapperType" />
      <MemberSignature Language="VB.NET" Value="Public Property WebContentTypeMapperType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WebContentTypeMapperType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WebContentTypeMapperType : string with get, set" Usage="System.ServiceModel.Configuration.WebMessageEncodingElement.WebContentTypeMapperType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("webContentTypeMapperType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del tipo de un objeto <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" /> que especifica el formato al que está asignado el tipo de contenido de un mensaje entrante.</summary>
        <value>Nombre del tipo de un <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Éste es un punto de extensibilidad en el modelo de programación que es utilizado por el codificador de mensajes web para invalidar cómo los tipos de contenido se asignan a los formatos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding WriteEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding WriteEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebMessageEncodingElement.WriteEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ WriteEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.Configuration.WebMessageEncodingElement.WriteEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("writeEncoding", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el codificador del juego de caracteres que se va a usar para emitir los mensajes en el enlace.</summary>
        <value>Un valor <see cref="T:System.Text.Encoding" /> válido que especifica el codificador del juego de caracteres que se va a usar para emitir los mensajes en el enlace. El valor predeterminado es <see cref="T:System.Text.UTF8Encoding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```  
using System;  
using System.Text;  
using System.ServiceModel;  
using System.ServiceModel.Web;  
using System.ServiceModel.Configuration;  
  
static void Main()  
{  
    Encoding webMessageEncoding = webMEE.WriteEncoding;  
    Console.WriteLine("The write encoding is: {0}",     webMessageEncoding);  
    webMessageEncoding = UnicodeEncoding.Unicode;  
    Console.WriteLine("The write encoding has been changed to: {0}", webMessageEncoding);  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor establecido es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>