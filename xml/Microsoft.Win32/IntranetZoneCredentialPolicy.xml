<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf9f57bdf65a6f26cf1e2965c02261fbb922b20d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37707537" /></Metadata><TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class IntranetZoneCredentialPolicy&#xA;Implements ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntranetZoneCredentialPolicy : System::Net::ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type IntranetZoneCredentialPolicy = class&#xA;    interface ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define la directiva de credenciales que se va a utilizar para las solicitudes de recursos realizadas a través de <see cref="T:System.Net.WebRequest" /> y sus clases derivadas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta directiva permite que las credenciales se envíen solo si el recurso solicitado está en el mismo dominio que el cliente que realiza la solicitud. Para muchas aplicaciones es la directiva óptimo porque evita que las credenciales de red que se envían con las solicitudes de recursos que no están en la intranet.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy> las directivas se invocan únicamente si el <xref:System.Net.WebRequest> o <xref:System.Net.WebProxy> que está asociado con la solicitud tiene credenciales que no son `null`. Si configura esta directiva no tiene ningún efecto en las solicitudes que no especifique credenciales.  
  
 Use la <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> propiedad para establecer el <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> directiva. El <xref:System.Net.IAuthenticationModule> que controla la autenticación para la solicitud se invocará el <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> método antes de realizar la autenticación. Si el recurso solicitado está en un dominio diferente que el cliente, el <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> devuelve del método `false`, y no se realiza la autenticación.  
  
 Esta directiva afecta a todas las instancias de <xref:System.Net.WebRequest> con las credenciales que no son null en el dominio de aplicación actual. La directiva no puede reemplazarse en las solicitudes individuales.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una instancia de <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> y usarlo para establecer la directiva de credenciales del dominio de aplicación.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntranetZoneCredentialPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las aplicaciones utilizan este constructor para crear objetos que pueden usarse para establecer el <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una instancia de esta clase.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool&#xA;override this.ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="intranetZoneCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">El objeto <see cref="T:System.Uri" /> que recibe la solicitud.</param>
        <param name="request">El objeto <see cref="T:System.Net.WebRequest" /> que representa el recurso solicitado.</param>
        <param name="credential">El objeto <see cref="T:System.Net.NetworkCredential" /> que debe enviarse con la solicitud si este método devuelve <see langword="true" />.</param>
        <param name="authModule">El objeto <see cref="T:System.Net.IAuthenticationModule" /> que debe realizar la autenticación, si ésta se requiere.</param>
        <summary>Devuelve un objeto <see cref="T:System.Boolean" /> que indica si las credenciales del cliente se envían con una solicitud de recurso realizada mediante <see cref="T:System.Net.WebRequest" />.</summary>
        <returns>Es <see langword="true" /> si el recurso solicitado está en el mismo dominio que el cliente que realiza la solicitud; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las aplicaciones no llame a este método directamente. lo llama el <xref:System.Net.IAuthenticationModule> que es responsable de realizar la autenticación con el servidor. Si este método devuelve `false`, el <xref:System.Net.IAuthenticationModule> no autenticará el cliente en el servidor.  
  
 Se llama a este método solo para las solicitudes que especifican las credenciales o usarán un <xref:System.Net.WebProxy> objeto que especifica las credenciales.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo derivar de <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> para permitir que las credenciales que se enviarán para las solicitudes que utilizan el protocolo de transferencia de hipertexto seguro (HTTPS) con la autenticación básica. Uso de HTTPS y la autenticación básica, la contraseña del usuario se cifra antes de enviarse a través de la red.  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>