<Type Name="Registry" FullName="Microsoft.Win32.Registry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d9e36d9ba0212aaa2fa07a4ff7ddbbc7129175a" /><Meta Name="ms.sourcegitcommit" Value="a9b8eb12d69b131f7c0de74d471798e44e863282" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/04/2019" /><Meta Name="ms.locfileid" Value="66502035" /></Metadata><TypeSignature Language="C#" Value="public static class Registry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Registry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.Registry" />
  <TypeSignature Language="VB.NET" Value="Public Class Registry" />
  <TypeSignature Language="C++ CLI" Value="public ref class Registry abstract sealed" />
  <TypeSignature Language="F#" Value="type Registry = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona objetos <see cref="T:Microsoft.Win32.RegistryKey" />, que representan las claves principales del Registro de Windows, así como métodos <see langword="static" /> para obtener acceso a los pares de clave y valor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase proporciona el conjunto de claves raíz estándar que se encuentra en el registro en equipos que ejecutan Windows. El registro es un servicio de almacenamiento para obtener información acerca de la configuración predeterminada del sistema, usuarios y aplicaciones. Por ejemplo, las aplicaciones pueden usar el registro para almacenar información que debe conservarse después de cerrar la aplicación y tener acceso a esa misma información cuando se vuelve a cargar la aplicación. Por ejemplo, puede almacenar las preferencias de color, ubicaciones de la pantalla o el tamaño de la ventana. Puede controlar estos datos para cada usuario al almacenar la información en una ubicación diferente en el registro.  
  
 La base o raíz <xref:Microsoft.Win32.RegistryKey> instancias que exponen el `Registry` clase delinear el mecanismo de almacenamiento básico de las subclaves y valores del registro. Todas las claves son de solo lectura porque el registro depende de su existencia. Las claves expuestas por `Registry` son:  
  
 <xref:Microsoft.Win32.Registry.CurrentUser>  
 Almacena información sobre las preferencias del usuario.  
  
 <xref:Microsoft.Win32.Registry.LocalMachine>  
 Almacena información de configuración para el equipo local.  
  
 <xref:Microsoft.Win32.Registry.ClassesRoot>  
 Almacena información sobre los tipos (y clases) y sus propiedades.  
  
 <xref:Microsoft.Win32.Registry.Users>  
 Almacena información sobre la configuración predeterminada del usuario.  
  
 <xref:Microsoft.Win32.Registry.PerformanceData>  
 Almacena información de rendimiento de los componentes de software.  
  
 <xref:Microsoft.Win32.Registry.CurrentConfig>  
 Almacena información de hardware que no son específicas del usuario.  
  
 <xref:Microsoft.Win32.Registry.DynData>  
 Almacena los datos dinámicos.  
  
 Una vez que haya identificado la clave de raíz en la que desea almacenar o recuperar información del registro, puede usar el <xref:Microsoft.Win32.RegistryKey> clase para agregar o quitar subclaves y manipular los valores de una clave determinada.  
  
 Dispositivos de hardware pueden colocar información en el registro automáticamente mediante la interfaz Plug and Play. Software para instalar los controladores de dispositivo puede colocar información en el registro mediante la escritura a las API estándares.  
  
## <a name="static-methods-for-getting-and-setting-values"></a>Métodos estáticos para obtener y establecer valores  
 En .NET Framework versión 2.0, el <xref:Microsoft.Win32.Registry> clase también contiene `static` <xref:Microsoft.Win32.Registry.GetValue%2A> y <xref:Microsoft.Win32.Registry.SetValue%2A> métodos para establecer y recuperar valores de las claves del registro. Abren estos métodos y las claves de registro cerrar cada vez que se usan, por lo que no lleva a cabo, así como métodos análogos en el <xref:Microsoft.Win32.RegistryKey> (clase), cuando tiene acceso a un gran número de valores.  
  
 La <xref:Microsoft.Win32.RegistryKey> clase también proporciona métodos que permiten establecer la seguridad de control de acceso de Windows para las claves del registro, para probar el tipo de datos de un valor antes de recuperarlos y para eliminar las claves.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo muestra las claves raíz y el segundo ejemplo muestra el `static` <xref:Microsoft.Win32.Registry.GetValue%2A> y <xref:Microsoft.Win32.Registry.SetValue%2A> métodos.  
  
 Ejemplo 1  
  
 El ejemplo de código siguiente muestra cómo recuperar las subclaves de la clave HKEY_USERS e imprimir sus nombres en la pantalla. Use el <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> método para crear una instancia de la subclave específica de interés. A continuación, puede usar otras operaciones en `RegistryKey` para manipular dicha clave.  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 Ejemplo 2  
  
 El ejemplo de código siguiente almacena valores de varios tipos de datos en una clave de ejemplo, creación de la clave tal como lo hace y, a continuación, recupera y muestra los valores. En el ejemplo se muestra cómo almacenar y recuperar el par de nombre/valor (anónimos) de forma predeterminada y el uso de `defaultValue` cuando no existe un par nombre/valor.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
    <altmember cref="T:Microsoft.Win32.RegistryKey" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey ClassesRoot;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassesRoot As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ ClassesRoot;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.ClassesRoot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Define los tipos (o clases) de documentos y las propiedades asociadas a dichos tipos. Este campo lee la clave base HKEY_CLASSES_ROOT del Registro de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las aplicaciones convencionales y las aplicaciones OLE utilizan datos que se almacenan bajo esta clave. Esta clave también proporciona compatibilidad con la base de datos de registro de Windows 3.1 almacenando información de soporte técnico DDE y OLE. Visores de archivos y las extensiones de interfaz de usuario almacenan sus identificadores de clase OLE en esta clave, y servidores de procesamiento se registran en esta clave.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo recuperar las subclaves de esta clave e imprime sus nombres en la pantalla. Use el <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> método para crear una instancia de la subclave específica de interés. A continuación, puede usar otras operaciones en <xref:Microsoft.Win32.RegistryKey> para manipular dicha clave.  
  
 [!code-cpp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.ClassesRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentConfig;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentConfig As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentConfig;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentConfig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene información de configuración relativa al hardware que no es específica para el usuario. Este campo lee la clave base HKEY_CURRENT_CONFIG del Registro de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro se asigna a una subclave de <xref:Microsoft.Win32.Registry.LocalMachine>.  
  
 Un ejemplo del uso de este miembro es una aplicación que almacena un nombre de servidor diferente para sus datos, dependiendo de si el sistema está conectado a una red.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo recuperar las subclaves de esta clave e imprime sus nombres en la pantalla. Use el <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> método para crear una instancia de la subclave específica de interés. A continuación, puede usar otras operaciones en <xref:Microsoft.Win32.RegistryKey> para manipular dicha clave.  
  
 [!code-cpp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentConfig Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentUser;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentUser As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentUser;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentUser" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene información sobre las preferencias del usuario actual. Este campo lee la clave base HKEY_CURRENT_USER del Registro de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Información almacenada en esta clave incluye la configuración de las variables de entorno y los datos sobre los grupos de programas, colores, impresoras, conexiones de red y las preferencias de la aplicación. Esta clave resulta más fácil establecer la configuración del usuario actual. En esta clave, los fabricantes de software almacenan las preferencias específicas del usuario actual para su uso en sus aplicaciones. Microsoft, por ejemplo, crea la clave HKEY_CURRENT_USER\Software\Microsoft para sus aplicaciones usar con cada aplicación que cree su propia subclave bajo la clave de Microsoft.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo recuperar las subclaves de esta clave e imprime sus nombres en la pantalla. Use el <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> método para crear una instancia de la subclave específica de interés. A continuación, puede usar otras operaciones en <xref:Microsoft.Win32.RegistryKey> para manipular dicha clave.  
  
 [!code-cpp[Classic Registry.CurrentUser Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentUser Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentUser Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey DynData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.DynData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DynData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ DynData;" />
      <MemberSignature Language="F#" Value=" staticval mutable DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.DynData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use PerformanceData instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The DynData registry key only works on Win9x, which is no longer supported by the CLR.  On NT-based operating systems, use the PerformanceData registry key instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene datos dinámicos del Registro. Este campo lee la clave base HKEY_DYN_DATA del Registro de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El registro de Windows 98 o Windows Millennium Edition es compatible con los datos estáticos (que se almacenan en disco en el registro) y los datos dinámicos (que cambian con frecuencia, como las estadísticas de rendimiento). Esta área de datos dinámicos es el mecanismo que permite a los controladores de dispositivos virtuales (VxD) para proporcionar datos en tiempo real a las aplicaciones de Win32 que se pueden ejecutar de forma remota como localmente. También permite que el monitor de sistema proporcionar estadísticas de rendimiento en sistemas de Windows 98 o Windows Millennium Edition remotos.  
  
 VXD no se limita a los datos de rendimiento. Pueden proporcionar cualquier dato que van a pasar del anillo 0 al anillo 3 eficaz sin monopolizando la CPU. El registro es compatible con datos dinámicos mediante el almacenamiento de un puntero a una función que devuelve un valor (o muchos valores). Cuando un valores de las consultas del Registro llamada asociada con una clave dinámica, que se llama la función para devolver el valor deseado o valores.  
  
> [!NOTE]
>  Las claves dinámicas introducidas en Microsoft Windows 95 para controlar los datos del registro dinámicos. Se admiten solo en Windows 98 o Windows Millennium Edition.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo recuperar las subclaves de esta clave e imprime sus nombres en la pantalla. Use el <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> método para crear una instancia de la subclave específica de interés. A continuación, puede usar otras operaciones en <xref:Microsoft.Win32.RegistryKey> para manipular dicha clave. Tenga en cuenta que este ejemplo no puede devolver ningún resultado, ya que podría no haber datos dinámicos disponibles o no es posible que se esté ejecutando Windows 98 / Me. Con esta clave puede producir un error en otros sistemas.  
  
 [!code-cpp[Classic Registry.DynData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.DynData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.DynData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.DynData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El sistema operativo no es compatible con los datos dinámicos; es decir, no es Windows 98, Windows 98 Second Edition ni Windows Millennium Edition (Windows Me).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValue : string * string * obj -&gt; obj" Usage="Microsoft.Win32.Registry.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultValue" Type="System.Object" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyName">Ruta de acceso completa de la clave del Registro que comienza con una clave raíz válida, como "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nombre del par nombre/valor.</param>
        <param name="defaultValue">Valor que se devuelve si <paramref name="valueName" /> no existe.</param>
        <summary>Recupera el valor asociado al nombre especificado de la clave del Registro especificada. Si el nombre no se encuentra en esta clave, devuelve un valor predeterminado, que se puede definir previamente, o <see langword="null" /> si la clave especificada no existe.</summary>
        <returns>Es <see langword="null" /> si la subclave especificada por <paramref name="keyName" /> no existe; de lo contrario, el valor asociado a <paramref name="valueName" />, o <paramref name="defaultValue" /> si <paramref name="valueName" /> no se encuentra.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena `valueName` no distingue mayúsculas de minúsculas.  
  
> [!NOTE]
>  Una clave del registro puede contener un valor que no esté asociado a ningún nombre. Cuando este valor sin nombre se muestra en el editor del registro, aparece la cadena "(Default)" en lugar del nombre. Para recuperar este valor sin nombre, especifique `null` o una cadena vacía ("") para `valueName`.  
  
 Nombres de raíz válidos son HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG y HKEY_DYN_DATA. Por ejemplo, en Visual Basic la cadena "HKEY_CURRENT_USER\MyTestKey" tiene acceso a los pares clave/valor para la subclave "MyTestKey" en la raíz HKEY_CURRENT_USER.  
  
 Cuando el <xref:Microsoft.Win32.RegistryKey.GetValue%2A> método recupera los valores de cadena expandible (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), expande las cadenas de entorno con datos desde el entorno local. Si se ha almacenado un valor que contiene referencias expansibles a variables de entorno como una cadena (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), en lugar de como una cadena expandible (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> no se expande. Puede expandir este tipo de cadena después de haberlos recuperado mediante una llamada a la <xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType> método.  
  
> [!NOTE]
>  La manera recomendada para recuperar datos de HKEY_PERFORMANCE_DATA es usar el <xref:System.Diagnostics.PerformanceCounter> clase en lugar de <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> método.  
  
 El <xref:Microsoft.Win32.Registry.GetValue%2A> y <xref:Microsoft.Win32.Registry.SetValue%2A> métodos abren y las claves de registro cerrar cada vez que se usan, por lo que no lleva a cabo, así como los métodos de la <xref:Microsoft.Win32.RegistryKey> si tiene acceso a un gran número de valores de clase.  
  
 <xref:Microsoft.Win32.RegistryKey> También proporciona métodos que permiten agregar una lista de control de acceso (ACL) a una clave del registro, para probar el tipo de datos de un valor antes de recuperarlos y para eliminar las claves.  
  
   
  
## Examples  
 El ejemplo de código siguiente almacena valores de varios tipos de datos en una clave de ejemplo, creación de la clave tal como lo hace y, a continuación, recupera y muestra los valores. En el ejemplo se muestra cómo almacenar y recuperar el par de nombre/valor (anónimos) de forma predeterminada y el uso de `defaultValue` cuando no existe un par nombre/valor.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para leer en la clave del Registro.</exception>
        <exception cref="T:System.IO.IOException">El objeto <see cref="T:Microsoft.Win32.RegistryKey" /> que contiene el valor especificado se ha marcado para su eliminación.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> no comienza con una clave raíz del Registro válida.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">para leer desde el registro. Enumeración asociada: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">para leer la clave del registro del tipo REG_EXPAND_SZ. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey LocalMachine;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalMachine As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ LocalMachine;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.LocalMachine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene los datos de configuración correspondientes al equipo local. Este campo lee la clave base HKEY_LOCAL_MACHINE del Registro de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `LocalMachine` contiene cinco claves:  
  
 Hardware  
 Describe el hardware físico en el equipo, la manera en que los controladores de dispositivo usa ese hardware y las asignaciones y datos relacionados que vinculan los controladores modo kernel con el código de modo de usuario. Todos los datos de esta clave se vuelve a crear cada vez que se inicia el sistema. La subclave Description describe el hardware del equipo real. La subclave DeviceMap contiene diversos datos en formatos específicos de clases concretas de controladores. La subclave ResourceMap describe qué recursos de hardware de la notificación de los controladores de dispositivos. El programa de diagnóstico de Windows NT (Winmsdp.exe) puede informar sobre su contenido en un formulario fácil de leer.  
  
 SAM  
 La base de datos de servicios de directorio de información de seguridad para cuentas de usuario y grupo y para los dominios de Windows 2000 Server (SAM es el Administrador de cuentas de seguridad, conocido como la base de datos de servicios de directorio).  
  
 Seguridad  
 Contiene la directiva de seguridad local, como los derechos de usuario específico. Esta clave se usa únicamente por el subsistema de seguridad de Windows 2000.  
  
 Software  
 La base de datos de software por equipo. Esta clave contiene datos sobre el software instalado en el equipo local, junto con varios elementos de datos de configuración varios.  
  
 Sistema  
 Controla el inicio del sistema, carga del controlador de dispositivo, los servicios de Windows 2000 y comportamiento del sistema operativo.  
  
 Por convención, si existen datos similares bajo <xref:Microsoft.Win32.Registry.CurrentUser> y en <xref:Microsoft.Win32.Registry.LocalMachine>, los datos de <xref:Microsoft.Win32.Registry.CurrentUser> tiene prioridad. Sin embargo, los valores de esta clave también pueden ampliar (en lugar de reemplazar) datos en Registry.LocalMachine. Además, algunos elementos (por ejemplo, las entradas de carga el controlador de dispositivo) no tienen sentidos si se producen fuera de Registry.LocalMachine.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo recuperar las subclaves de esta clave e imprime sus nombres en la pantalla. Use el <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> método para crear una instancia de la subclave específica de interés. A continuación, puede usar otras operaciones en <xref:Microsoft.Win32.RegistryKey> para manipular dicha clave.  
  
 [!code-cpp[Classic Registry.LocalMachine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.LocalMachine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.LocalMachine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey PerformanceData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PerformanceData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ PerformanceData;" />
      <MemberSignature Language="F#" Value=" staticval mutable PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.PerformanceData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene información de rendimiento de los componentes de software. Este campo lee la clave base HKEY_PERFORMANCE_DATA del Registro de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada componente de software crea claves para sus objetos, los contadores cuando se instala y escribe los datos del contador mientras se esté ejecutando. Puede tener acceso a estos datos como accedería a cualquier otro dato de registro, utilizando el <xref:Microsoft.Win32.RegistryKey> funciones.  
  
 Aunque utilice el registro para recopilar datos de rendimiento, los datos no se almacenan en la base de datos del registro. En su lugar, acceso al registro con esta clave hace que el sistema recopilar los datos de los administradores de objeto de sistema adecuado.  
  
 Para obtener datos de rendimiento del sistema local, use el <xref:Microsoft.Win32.RegistryKey.GetValue%2A> método, con la clave Registry.PerformanceData. La primera llamada abre la clave (no es necesario abrir explícitamente la clave en primer lugar). Sin embargo, asegúrese de usar el <xref:Microsoft.Win32.RegistryKey.Close%2A> método para cerrar el identificador de la clave cuando haya terminado de obtención de datos de rendimiento. El usuario no se puede instalar o quitar un componente de software, mientras que los datos de rendimiento están en uso.  
  
 Para obtener datos de rendimiento desde un sistema remoto, debe usar el <xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A> método con el nombre del equipo del sistema remoto y la clave Registry.PerformanceData. Esta llamada recupera una clave que representa los datos de rendimiento para el sistema remoto. Para recuperar los datos, llame al <xref:Microsoft.Win32.RegistryKey.GetValue%2A> mediante esta clave, en lugar de la clave Registry.PerformanceData.  
  
> [!NOTE]
>  En Windows Server 2003, debe pertenecer al menos un usuario al grupo usuarios del Monitor de rendimiento con el fin de obtener acceso a las subclaves de esta clave base.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo recuperar las subclaves de esta clave e imprime sus nombres en la pantalla. Use el <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> método para crear una instancia de la subclave específica de interés. A continuación, puede usar otras operaciones en <xref:Microsoft.Win32.RegistryKey> para manipular dicha clave. Tenga en cuenta que este ejemplo a menudo no puede devolver ningún resultado, ya que no puede haber ningún dato de rendimiento.  
  
 [!code-cpp[Classic Registry.PerformanceData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.PerformanceData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.PerformanceData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece el valor de un par de nombre/valor en una clave del Registro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente almacena valores de varios tipos de datos en una clave de ejemplo, creación de la clave tal como lo hace y, a continuación, recupera y muestra los valores. En el ejemplo se muestra cómo almacenar y recuperar el par de nombre/valor (anónimos) de forma predeterminada y el uso de `defaultValue` cuando no existe un par nombre/valor.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyName">Ruta de acceso completa de la clave del Registro que comienza con una clave raíz válida, como "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nombre del par nombre/valor.</param>
        <param name="value">Valor que se va a almacenar.</param>
        <summary>Establece el par nombre/valor especificado en la clave del Registro especificada. Si la clave especificada no existe, se crea.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], el `valueName` parámetro ya no está restringido a un máximo de 255 caracteres; sin embargo, el `keyName` parámetro sigue teniendo la restricción de 255 caracteres.  
  
 Dado que muchos valores se pueden almacenar en cada clave del registro, debe utilizar el `valueName` parámetro para especificar el valor concreto que desea establecer.  
  
> [!NOTE]
>  Una clave del registro puede contener un valor que no esté asociado a ningún nombre. Cuando este valor sin nombre se muestra en el editor del registro, aparece la cadena "(Default)" en lugar del nombre. Para establecer este valor sin nombre, especifique `null` o una cadena vacía ("") para `valueName`.  
  
 Si `valueName` no existe en la clave, se crea y se establece el valor asociado `value`.  
  
 Si `keyName` especifica una subclave que no existe, se crea la subclave en la raíz especificada. Por ejemplo, en Visual Basic, la cadena "HKEY_CURRENT_USER\MyTestKey" crea la subclave "MyTestKey" en la raíz HKEY_CURRENT_USER. La cadena "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" crea las subclaves anidadas "MyTestKey", "MyTestKey\Key2" y "MyTestKey\Key2\Key3".  
  
 Los nombres de raíz válido incluir HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG y HKEY_DYN_DATA.  
  
> [!NOTE]
>  El <xref:Microsoft.Win32.Registry.SetValue%2A> método abre una clave del registro, Establece el valor y cierra la clave cada vez que se llama. Si tiene que modificar un gran número de valores, el <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> método podría proporcionar un mejor rendimiento. La <xref:Microsoft.Win32.RegistryKey> clase también proporciona métodos que permiten agregar una lista de control de acceso (ACL) a una clave del registro, para probar el tipo de datos de un valor antes de recuperarlos y para eliminar las claves.  
  
 Esta sobrecarga de <xref:Microsoft.Win32.Registry.SetValue%2A> almacena enteros de 64 bits como cadenas (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>). Para almacenar números de 64 bits como <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> valores, utilice el <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> sobrecarga del método.  
  
 Esta sobrecarga de <xref:Microsoft.Win32.Registry.SetValue%2A> almacena todos los valores de cadena como <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> objetos, aunque contengan referencias expansibles a variables de entorno. Para guardar los valores de cadena expandibles como cadenas (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), use el <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> sobrecarga del método.  
  
 Esta sobrecarga es equivalente a llamar a la <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> sobrecarga del método con <xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>.  
  
> [!NOTE]
>  En Windows 98 y Windows Millennium Edition (Windows Me), el registro no es Unicode y no todos los caracteres Unicode son válidos para todas las páginas de código. Un carácter Unicode que no es válido para la página de códigos actual se reemplaza por la mejor coincidencia disponible. No se inicia ninguna excepción.  
  
   
  
## Examples  
 El ejemplo de código siguiente almacena valores de varios tipos de datos en una clave de ejemplo, creación de la clave tal como lo hace y, a continuación, recupera y muestra los valores. En el ejemplo se muestra cómo almacenar y recuperar el par de nombre/valor (anónimos) de forma predeterminada y el uso de `defaultValue` cuando no existe un par nombre/valor.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> no comienza con una clave raíz del Registro válida.  
  
O bien 
 <paramref name="keyName" /> supera la longitud máxima permitida (255 caracteres).</exception>
        <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.Win32.RegistryKey" /> es de sólo lectura y no se puede escribir en ella; por ejemplo, es un nodo del nivel raíz.</exception>
        <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para crear o modificar claves del Registro.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Para modificar la clave del registro especificada, si existe, o para crear la clave del registro si aún no existe. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyName">Ruta de acceso completa de la clave del Registro que comienza con una clave raíz válida, como "HKEY_CURRENT_USER".</param>
        <param name="valueName">Nombre del par nombre/valor.</param>
        <param name="value">Valor que se va a almacenar.</param>
        <param name="valueKind">Tipo de datos del Registro que se utilizará para almacenar los datos.</param>
        <summary>Establece el par nombre/valor en la clave del Registro especificada, utilizando el tipo de datos del Registro especificado. Si la clave especificada no existe, se crea.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `valueName` parámetro ya no está restringido a un máximo de 255 caracteres; sin embargo, el `keyName` parámetro continúa tiene la limitación de 255 caracteres.  
  
 Dado que muchos valores se pueden almacenar en cada clave del registro, debe utilizar el `valueName` parámetro para especificar el valor concreto que desea establecer.  
  
> [!NOTE]
>  Una clave del registro puede contener un valor que no esté asociado a ningún nombre. Cuando este valor sin nombre se muestra en el editor del registro, aparece la cadena "(Default)" en lugar del nombre. Para establecer este valor sin nombre, especifique `null` o una cadena vacía ("") para `valueName`.  
  
 Si `valueName` no existe en la clave, se crea y se establece el valor asociado `value`.  
  
 Si `keyName` especifica una subclave que no existe, se crea la subclave en la raíz especificada. Por ejemplo, en Visual Basic, la cadena "HKEY_CURRENT_USER\MyTestKey" crea la subclave "MyTestKey" en la raíz HKEY_CURRENT_USER. La cadena "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" crea las subclaves anidadas "MyTestKey", "MyTestKey\Key2" y "MyTestKey\Key2\Key3".  
  
 Los nombres de raíz válido incluir HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG y HKEY_DYN_DATA.  
  
> [!NOTE]
>  El <xref:Microsoft.Win32.Registry.SetValue%2A> método abre una clave del registro, Establece el valor y cierra la clave cada vez que se llama. Si tiene que modificar un gran número de valores, el <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> método podría proporcionar un mejor rendimiento. La <xref:Microsoft.Win32.RegistryKey> clase también proporciona métodos que permiten agregar una lista de control de acceso (ACL) a una clave del registro, para probar el tipo de datos de un valor antes de recuperarlos y para eliminar las claves.  
  
 Si el tipo de la clase `value` no coincide con el especificado `valueKind`, y los datos no se pueden convertir, <xref:System.ArgumentException> se produce. Por ejemplo, puede almacenar un <xref:System.Int64?displayProperty=nameWithType> como un <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, pero solo si su valor es menor que el valor máximo de un <xref:System.Int32?displayProperty=nameWithType>. No se puede almacenar un único valor de cadena como un <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Si se pasan los valores de la conversión boxing <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> o <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, la conversión se realiza utilizando la referencia cultural invariable.  
  
> [!NOTE]
>  En Windows 98 y Windows Millennium Edition (Windows Me), el registro no es Unicode y no todos los caracteres Unicode son válidos para todas las páginas de código. Un carácter Unicode que no es válido para la página de códigos actual se reemplaza por la mejor coincidencia disponible. No se inicia ninguna excepción.  
  
   
  
## Examples  
 El ejemplo de código siguiente almacena valores de varios tipos de datos en una clave de ejemplo, creación de la clave tal como lo hace y, a continuación, recupera y muestra los valores. En el ejemplo se muestra cómo almacenar y recuperar el par de nombre/valor (anónimos) de forma predeterminada y el uso de `defaultValue` cuando no existe un par nombre/valor.  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> no comienza con una clave raíz del Registro válida.  
  
O bien 
 <paramref name="keyName" /> supera la longitud máxima permitida (255 caracteres).  
  
O bien 
El tipo de <paramref name="value" /> no coincidió con el tipo de datos del Registro especificado por <paramref name="valueKind" />; por consiguiente, no se pudieron convertir los datos correctamente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">La clave <see cref="T:Microsoft.Win32.RegistryKey" /> es de sólo lectura y, por tanto, no se puede escribir en ella (por ejemplo, se trata de un nodo del nivel raíz, o no se ha abierto con acceso de escritura).</exception>
        <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para crear o modificar claves del Registro.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Para modificar la clave del registro especificada, si existe, o para crear la clave del registro si aún no existe. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey Users;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.Users" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Users As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ Users;" />
      <MemberSignature Language="F#" Value=" staticval mutable Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.Users" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene información sobre la configuración de usuario predeterminada. Este campo lee la clave base HKEY_USERS del Registro de Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clave contiene una bifurcación para cada usuario del equipo. La configuración predeterminada se proporciona para los nuevos usuarios en el equipo local y para el usuario actual de forma predeterminada, si el usuario no ha cambiado las preferencias. Dado que Windows 98 / ME también es compatible con Registry.Users, las aplicaciones pueden tener acceso a la información específica del usuario del mismo modo que lo hacen en Windows 2000. Información de cada usuario se almacena en un archivo independiente, que puede almacenarse localmente o en un servidor de red. Windows 98 / ME puedo copiar este archivo en el sistema del usuario actual para que la configuración puede mover de un equipo a otro con el usuario.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo recuperar las subclaves de esta clave e imprime sus nombres en la pantalla. Use el <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> método para crear una instancia de la subclave específica de interés. A continuación, puede usar otras operaciones en <xref:Microsoft.Win32.RegistryKey> para manipular dicha clave.  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
