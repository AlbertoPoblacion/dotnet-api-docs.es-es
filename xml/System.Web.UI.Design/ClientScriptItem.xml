<Type Name="ClientScriptItem" FullName="System.Web.UI.Design.ClientScriptItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b14b07fbd6fbeea5c20b18534b49f51fcaecbd4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36391241" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ClientScriptItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptItem sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a client script element in a Web Form or user control at design time. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ClientScriptItem> clase representa un `script` elemento que está contenido en un documento Web en tiempo de diseño. Puede usar una implementación del Diseñador de control personalizado un <xref:System.Web.UI.Design.ClientScriptItem> va a agregar elementos de script de cliente a un formulario Web Forms o control de usuario.  
  
 En tiempo de diseño, use la <xref:System.Web.UI.Design.WebFormsRootDesigner> clase para establecer o examinar elementos de script de cliente que se encuentran en un documento, como un formulario Web Forms, un control de servidor Web, una página de contenido o una página maestra, en la superficie de diseño. Recuperar la colección de elementos de script de cliente que contiene el documento Web mediante el uso de la <xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A> método. Agregar un elemento de script de cliente al documento Web mediante el <xref:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument%2A> método.  
  
 Normalmente, un `script` elemento contiene instrucciones de script o especifica una ubicación externa para las instrucciones de script. El `script` elemento, opcionalmente, puede definir el idioma de las instrucciones de script. Use la <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> constructor para inicializar las propiedades para un nuevo objeto de secuencia de comandos. Use la <xref:System.Web.UI.Design.ClientScriptItem> propiedades para examinar el `script` atributos y contenido del objeto. El <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> propiedad representa la `language` atributo de la `script` elemento. El <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propiedad representa el `src` atributo. El <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> propiedad representa las instrucciones de script que se ejecuta en el cliente que se encuentran en el `script` elemento.  
  
 Use la <xref:System.Web.UI.Design.ClientScriptItem> clase para administrar secuencias de comandos que se ejecutan en tiempo de diseño.  
  
 Para administrar elementos de script de cliente en tiempo de ejecución, use la <xref:System.Web.UI.ClientScriptManager> clase. Para obtener más información sobre el uso de scripts de cliente en tiempo de ejecución, consulte [secuencia de comandos de cliente en ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
> [!NOTE]
>  El <xref:System.Web.UI.Design.ClientScriptItem> representa la clase `script` elementos en tiempo de diseño que se analizan y se ejecutan en el explorador del cliente en última instancia. Dado que la `script` elementos que se generan para el <xref:System.Web.UI.Design.ClientScriptItem> objetos no se ejecutan en el servidor, los elementos no contienen el `runat="server"` atributo.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ClientScriptItemCollection" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientScriptItem (string text, string source, string language, string type, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string source, string language, string type, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, source As String, language As String, type As String, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientScriptItem(System::String ^ text, System::String ^ source, System::String ^ language, System::String ^ type, System::String ^ id);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ClientScriptItem : string * string * string * string * string -&gt; System.Web.UI.Design.ClientScriptItem" Usage="new System.Web.UI.Design.ClientScriptItem (text, source, language, type, id)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The contents for the <see langword="script" /> element; a string of script statements to run on the client.</param>
        <param name="source">The <see langword="src" /> attribute value for the <see langword="script" /> element, specifying an external source location for the client script contents.</param>
        <param name="language">The <see langword="language" /> attribute value for the <see langword="script" /> element, specifying the language of the script statements.</param>
        <param name="type">The type attribute value for the <see langword="script" /> element, indicating the MIME type for the associated scripting engine.</param>
        <param name="id">The ID for the <see langword="script" /> element. This argument is required by the design host (for example, [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]).</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItem" /> class using the provided parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicialice las instrucciones para la <xref:System.Web.UI.Design.ClientScriptItem> objeto utilizando el `text` o `source` parámetro (no ambos). Use `text` para inicializar el script mediante una cadena de entrada que contiene las instrucciones. Como alternativa, use `source` para inicializar un script mediante una ruta de acceso que contiene las instrucciones de script.  
  
 Puede especificar cualquiera de los parámetros de entrada como `null` o una cadena vacía (""); la propiedad correspondiente se establece utilizando el valor de entrada y el `script` elemento se genera sin esa propiedad. Mediante `null` o una cadena vacía ("") genera los siguientes resultados:  
  
-   Para `text`, la correspondiente `script` elemento no contiene instrucciones de script.  
  
-   Para `source`, `src` atributo no está establecido el `script` elemento.  
  
-   Para `language`, `language` atributo no está establecido el `script` elemento.  
  
     Cuando un bloque de script de cliente no especifica el lenguaje de script, el explorador del cliente determina el idioma.  
  
-   Para `type`, el `type` atributo no está establecido en el elemento de secuencia de comandos.  
  
     Cuando un bloque de script de cliente no especifica el tipo de script, el explorador del cliente determina el tipo.  
  
-   Para `id`, el host de diseño (por ejemplo, [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]), se producirá un <xref:System.ArgumentNullException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> is null (thrown by the design host).</exception>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.UI.Design.ClientScriptItem.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see langword="ID" /> attribute value for the client script element.</summary>
        <value>El <see langword="ID" /> valor de la <see langword="script" /> elemento.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="System.Web.UI.Design.ClientScriptItem.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see langword="language" /> attribute value for the client script element.</summary>
        <value>El nombre de lenguaje especificado para el <see langword="language" /> de atributo en el <see langword="script" /> elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> propiedad representa el idioma en el que se escriben las instrucciones de script. Si el <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> propiedad es `null` o una cadena vacía (""), el `language` atributo no está establecido el `script` elemento. Cuando un bloque de script de cliente no especifica el lenguaje de script, el explorador del cliente determina el idioma.  
  
 El <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> propiedad se inicializa con el <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> constructor.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Web.UI.Design.ClientScriptItem.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see langword="src" /> attribute value for the client script element.</summary>
        <value>La ruta de acceso al archivo de origen especificado para la <see langword="src" /> de atributo en el <see langword="script" /> elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propiedad especifica una ubicación de origen externo para el contenido del script de cliente. Por lo general, las instrucciones de script para un `script` elemento se especifican mediante el <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> o <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propiedad.  
  
 Si el <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propiedad es `null` o una cadena vacía (""), el `src` atributo no está establecido el `script` elemento.  
  
 El <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propiedad se inicializa con el <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Web.UI.Design.ClientScriptItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the script statements contained in the client script element.</summary>
        <value>Las instrucciones de secuencia de comandos incluidas en el <see langword="script" /> elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> propiedad representa las instrucciones que figuran en la `script` elemento. Por lo general, las instrucciones de script para un `script` elemento se especifican mediante el <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> o <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propiedad.  
  
 Si el <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> propiedad es `null` o una cadena vacía (""), el `script` elemento no contiene ninguna instrucción de script.  
  
 El <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propiedad se inicializa con el <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> constructor.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.Design.ClientScriptItem.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see langword="type" /> attribute value for the client script element.</summary>
        <value>El nombre del tipo MIME asociado con el <see langword="script" /> elemento.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
  </Members>
</Type>