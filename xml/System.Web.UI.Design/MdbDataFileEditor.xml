<Type Name="MdbDataFileEditor" FullName="System.Web.UI.Design.MdbDataFileEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1efcb24f317e57862fa9d2860b11a38034f80883" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39851304" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MdbDataFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MdbDataFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.MdbDataFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class MdbDataFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class MdbDataFileEditor : System::Web::UI::Design::UrlEditor" />
  <TypeSignature Language="F#" Value="type MdbDataFileEditor = class&#xA;    inherit UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una interfaz de usuario en tiempo de diseño para seleccionar un archivo de base de datos de Microsoft Access.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.Design.MdbDataFileEditor> objeto se usa en tiempo de diseño para seleccionar y editar una dirección URL para un archivo de base de datos de Microsoft Access (.mdb) y, a continuación, asignar la dirección URL a una propiedad de control. Por ejemplo, el <xref:System.Web.UI.WebControls.AccessDataSource> control usa el <xref:System.Web.UI.Design.MdbDataFileEditor> clase en tiempo de diseño para establecer el valor de la <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> propiedad.  
  
 Use la <xref:System.ComponentModel.EditorAttribute> atributo para asociar el <xref:System.Web.UI.Design.MdbDataFileEditor> con una propiedad. Cuando se edita la propiedad asociada en la superficie de diseño, el host del diseñador se llama a la <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método. El <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método usa el <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> método, que a su vez muestra una interfaz de usuario para seleccionar la dirección URL y, a continuación, devuelve la dirección URL que está seleccionada por el usuario. El <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A> método indica el estilo de presentación de la interfaz de usuario.  
  
 Derive una clase de la <xref:System.Web.UI.Design.MdbDataFileEditor> para definir un editor personalizado para una propiedad de dirección URL de base de datos de Access. Por ejemplo, una clase derivada puede invalidar el <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método y, a continuación, llame el <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> método con un personalizado <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> o <xref:System.Web.UI.Design.MdbDataFileEditor.Caption%2A> valor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo asociar una instancia de la <xref:System.Web.UI.Design.MdbDataFileEditor> clase con una propiedad que está dentro de un control personalizado. Cuando se edita la propiedad del control en la superficie de diseño, la <xref:System.Web.UI.Design.MdbDataFileEditor> clase proporciona la interfaz de usuario para seleccionar y editar un nombre de archivo de base de datos de acceso para el valor de propiedad.  
  
 [!code-csharp[WebDesigner.MdbDataFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.MdbDataFileEditor/CS/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.MdbDataFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.MdbDataFileEditor/VB/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MdbDataFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.MdbDataFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MdbDataFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.MdbDataFileEditor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.MdbDataFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string" Usage="System.Web.UI.Design.MdbDataFileEditor.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el título que se va a mostrar en el cuadro de diálogo de selección.</summary>
        <value>El texto del título que se va a mostrar en el cuadro de diálogo de selección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.MdbDataFileEditor.Caption%2A> cadena se usa por la <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método al llamar a la <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> método, que muestra el cuadro de diálogo de selección de dirección URL para el usuario en tiempo de diseño.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.MdbDataFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string" Usage="System.Web.UI.Design.MdbDataFileEditor.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las opciones de filtro de dirección URL para el editor, que se utilizan para filtrar los elementos que aparecen en el cuadro de diálogo de selección de direcciones URL.</summary>
        <value>Una cadena que representa una o varias opciones de filtro de dirección URL del cuadro de diálogo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> propiedad la usa el <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método al llamar a la <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> método, que muestra el cuadro de diálogo de selección de dirección URL para el usuario en tiempo de diseño.  
  
 El <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> valor de propiedad predeterminado indica dos filtros de dirección URL para el cuadro de diálogo: uno para los archivos de base de datos de Microsoft Access (*.mdb) y otro para todos los archivos (\*.\*).  
  
 Para especificar una cadena de filtro personalizado, derive una clase de la <xref:System.Web.UI.Design.MdbDataFileEditor> clase e invalidar el <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> propiedad para devolver la cadena de filtro personalizado.  
  
 Una cadena de filtro contiene una o más opciones de filtro. Cada opción de filtro contiene una descripción del filtro, seguida por una barra vertical (&#124;) y el patrón de filtro. Las cadenas para distintas opciones de filtrado están separadas por una barra vertical.  
  
 Este es un ejemplo de una cadena de filtro que contiene dos opciones de filtro:  
  
 "`Microsoft Access Databases (*.mdb)|*.mdb|All Files (*.*)|*.*`".  
  
 Puede especificar varios patrones de filtro en una opción de filtro mediante la separación de los patrones de filtro con punto y coma. Este es un ejemplo de una cadena de filtro en la que la primera opción de filtro especifica dos modelos de filtro:  
  
 "`Custom Database Files (*.db1; *.db2)|*.db1;*.db2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>