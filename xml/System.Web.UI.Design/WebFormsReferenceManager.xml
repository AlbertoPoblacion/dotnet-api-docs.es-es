<Type Name="WebFormsReferenceManager" FullName="System.Web.UI.Design.WebFormsReferenceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9df69b56311b114b48563b168120c11b82abba1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589089" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebFormsReferenceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebFormsReferenceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebFormsReferenceManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebFormsReferenceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFormsReferenceManager abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una clase base para tener acceso a los tipos, directivas y controles del documento del proyecto web actual. Se debe heredar esta clase.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.Design.WebFormsReferenceManager> clase base es implementado por el host del diseñador para proporcionar acceso a tipos, directivas y controles de usuario definidos en un documento del proyecto Web. Puede usar una clase de diseñador de control del <xref:System.Web.UI.Design.WebFormsReferenceManager> para tener acceso a las definiciones del documento actual y para agregar un nuevo prefijo de etiqueta al documento actual.  
  
 Tiene acceso a la <xref:System.Web.UI.Design.WebFormsReferenceManager> servicios proporcionados por el host del diseñador a través de la <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propiedad de un <xref:System.Web.UI.Design.WebFormsRootDesigner> implementación. La <xref:System.Web.UI.Design.WebFormsRootDesigner> puede tener acceso a la implementación de dos maneras:  
  
-   Clases derivadas de <xref:System.Web.UI.Design.ControlDesigner> puede utilizar el <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> propiedad para tener acceso a un <xref:System.Web.UI.Design.WebFormsRootDesigner> implementación proporcionada por el host del diseñador. El <xref:System.Web.UI.Design.WebFormsReferenceManager> implementación se proporciona a través de la <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propiedad de <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> propiedad.  
  
-   Pueden tener acceso otras clases de diseñador la <xref:System.Web.UI.Design.WebFormsRootDesigner> implementación obteniendo primero el <xref:System.ComponentModel.Design.IDesignerHost> de servicios de implementación a través del componente diseñador <xref:System.ComponentModel.Component.Site%2A>y, a continuación, llamar a la <xref:System.ComponentModel.Design.IDesignerHost.GetDesigner%2A> método utilizando el host del diseñador <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A> propiedad.  
  
    > [!NOTE]
    >  <xref:System.Web.UI.Design.WebFormsReferenceManager> reemplaza la interfaz obsoleta <xref:System.Web.UI.Design.IWebFormReferenceManager>. Hosts del diseñador anteriores solo pueden admitir el <xref:System.Web.UI.Design.IWebFormReferenceManager> implementación de la interfaz. Compruebe que la <xref:System.Web.UI.Design.WebFormsRootDesigner> y <xref:System.Web.UI.Design.WebFormsReferenceManager> implementaciones proporcionadas por el host del diseñador no son `null` garantizar el host del diseñador implementa la <xref:System.Web.UI.Design.WebFormsRootDesigner> y <xref:System.Web.UI.Design.WebFormsReferenceManager> clases.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
    <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebFormsReferenceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebFormsReferenceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que la <xref:System.Web.UI.Design.WebFormsReferenceManager> clase es abstracta, no se puede crear una instancia de <xref:System.Web.UI.Design.WebFormsReferenceManager> directamente mediante el constructor.  
  
 Al derivar desde la <xref:System.Web.UI.Design.WebFormsReferenceManager> clase, reemplace el constructor para implementar acciones de inicialización personalizadas para la implementación del Administrador de referencia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisterDirectives">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection GetRegisterDirectives ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRegisterDirectives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRegisterDirectives () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ GetRegisterDirectives();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene las directivas de Registro del documento de proyecto actual.</summary>
        <returns>Colección de cadenas que representa las directivas de Registro definidas en el documento actual.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string GetTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTagPrefix (objectType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetTagPrefix(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">Tipo del objeto.</param>
        <summary>Obtiene el prefijo de etiqueta para el tipo de objeto especificado.</summary>
        <returns>El prefijo de etiqueta para el tipo de objeto especificado, si se encuentra; de lo contrario, <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public abstract Type GetType (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetType (tagPrefix As String, tagName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetType(System::String ^ tagPrefix, System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">El prefijo de etiqueta del tipo que se va a recuperar.</param>
        <param name="tagName">El nombre de etiqueta del tipo que se va a recuperar.</param>
        <summary>Obtiene el tipo de objeto con el prefijo y nombre de etiqueta especificados.</summary>
        <returns>El <see cref="T:System.Type" /> del objeto con el prefijo y nombre de etiqueta especificados, si existe; en caso contrario, es <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetUserControlPath">
      <MemberSignature Language="C#" Value="public abstract string GetUserControlPath (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserControlPath(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUserControlPath (tagPrefix As String, tagName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUserControlPath(System::String ^ tagPrefix, System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">El prefijo de etiqueta del control de usuario que se va a recuperar.</param>
        <param name="tagName">Nombre de etiqueta del control de usuario que se va a recuperar.</param>
        <summary>Obtiene la ruta de acceso URL relativa del control de usuario con el prefijo y nombre de etiqueta especificados.</summary>
        <returns>Cadena que representa la ruta de acceso URL relativa para el tipo de control de usuario especificado, si existe; en caso contrario, es <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath%2A> utiliza el prefijo de etiqueta y el nombre para localizar la directiva de registro de control de usuario en el documento actual y devuelve el `src` valor definido en la directiva register del atributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UserControl" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string RegisterTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegisterTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RegisterTagPrefix (objectType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ RegisterTagPrefix(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">El tipo al que se va a agregar un prefijo de etiqueta en el documento actual.</param>
        <summary>Agrega un prefijo de etiqueta para el tipo especificado.</summary>
        <returns>Cadena de prefijo de etiqueta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el prefijo de etiqueta ya existe, no se agrega una nueva directiva de registro.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>