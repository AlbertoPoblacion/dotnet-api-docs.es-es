<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d987e9f0ffaf7b1818b7d646845498696df77f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36589986" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d4991-101">Representa una hoja de editor en tiempo de diseño para una expresión personalizada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4991-101">Represents a design-time editor sheet for a custom expression.</span>
      </span>
      <span data-ttu-id="d4991-102">Esta clase debe heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4991-102">This class must be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4991-103">Una hoja de editor de expresiones personalizado permite al desarrollador establecer las propiedades de una expresión personalizada en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="d4991-103">A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</span></span> <span data-ttu-id="d4991-104">Valores de propiedad de control se pueden establecer utilizando cadenas de expresión; las cadenas de expresión se evalúan en tiempo de ejecución a un generador de expresiones y en tiempo de diseño mediante un editor de expresiones.</span><span class="sxs-lookup"><span data-stu-id="d4991-104">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</span></span>  
  
 <span data-ttu-id="d4991-105">Cuando se examina el <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> propiedad de un control en la cuadrícula de propiedades en tiempo de diseño, el diseñador visual muestra un cuadro de diálogo para establecer expresiones que proporcionan el valor de una propiedad de control.</span><span class="sxs-lookup"><span data-stu-id="d4991-105">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</span></span> <span data-ttu-id="d4991-106">Puede seleccionar el tipo de expresión basándose en una lista de prefijos de expresión.</span><span class="sxs-lookup"><span data-stu-id="d4991-106">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="d4991-107">Cuando selecciona un prefijo de expresión de la lista, el diseñador visual utiliza asociado <xref:System.Web.UI.Design.ExpressionEditor> y <xref:System.Web.UI.Design.ExpressionEditorSheet> objetos para evaluar y convertir la cadena de expresión basan en la sintaxis de ese tipo de expresión.</span><span class="sxs-lookup"><span data-stu-id="d4991-107">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to evaluate and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="d4991-108">El diseñador visual utiliza propiedades de hoja de editor de expresiones para solicitar una o varias cadenas que se combinan en la cadena de expresión personalizada.</span><span class="sxs-lookup"><span data-stu-id="d4991-108">The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</span></span>  
  
 <span data-ttu-id="d4991-109">Normalmente, para proporcionar un nuevo tipo de expresión en tiempo de diseño, se define un prefijo de expresión único y proporcionar personalizado <xref:System.Web.Compilation.ExpressionBuilder> y <xref:System.Web.UI.Design.ExpressionEditor> las implementaciones.</span><span class="sxs-lookup"><span data-stu-id="d4991-109">Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="d4991-110">Si lo desea, puede proporcionar un personalizado <xref:System.Web.UI.Design.ExpressionEditorSheet> implementación que define las propiedades que se usan para formar la expresión.</span><span class="sxs-lookup"><span data-stu-id="d4991-110">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression.</span></span> <span data-ttu-id="d4991-111">Para asociar un prefijo de expresión a un generador de expresiones y un editor de expresiones, aplique el <xref:System.Web.Compilation.ExpressionEditorAttribute> atributo y un <xref:System.Web.Compilation.ExpressionPrefixAttribute> atributo personalizado <xref:System.Web.Configuration.ExpressionBuilder> clase y, a continuación, configure el prefijo de expresión para un generador de expresiones en el `expressionBuilders` elemento en el archivo de configuración Web.</span><span class="sxs-lookup"><span data-stu-id="d4991-111">To associate an expression prefix with an expression builder and an expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute and an <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute to the custom <xref:System.Web.Configuration.ExpressionBuilder> class, and then configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="d4991-112">La implementación predeterminada de la <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> método devuelve una hoja de editor básico, que utiliza una sola cadena de entrada para formar la expresión.</span><span class="sxs-lookup"><span data-stu-id="d4991-112">The default implementation of the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns a basic editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="d4991-113">Editores de expresiones personalizados que se derivan de la <xref:System.Web.UI.Design.ExpressionEditor> puede invalidar el <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> método devuelva un editor personalizado de implementación de la hoja.</span><span class="sxs-lookup"><span data-stu-id="d4991-113">Custom expression editors that are derived from the <xref:System.Web.UI.Design.ExpressionEditor> can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span> <span data-ttu-id="d4991-114">Normalmente, una hoja de editor personalizado contiene varias propiedades que se utilizan para generar la cadena de expresión.</span><span class="sxs-lookup"><span data-stu-id="d4991-114">Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</span></span> <span data-ttu-id="d4991-115">El <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> método devuelve la cadena de expresión resultante basándose en las propiedades de la expresión actual.</span><span class="sxs-lookup"><span data-stu-id="d4991-115">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns the resulting expression string based on the current expression properties.</span></span>  
  
 <span data-ttu-id="d4991-116">Por ejemplo, el <xref:System.Web.UI.Design.ResourceExpressionEditor> clase se deriva de la <xref:System.Web.UI.Design.ExpressionEditor> clase y proporciona una implementación para evaluar y asociar una referencia de la cadena de recurso a una propiedad de control en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="d4991-116">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="d4991-117">El <xref:System.Web.Compilation.ResourceExpressionBuilder> clase está asociada con el prefijo de expresión `Resources` y <xref:System.Web.UI.Design.ResourceExpressionEditor> implementación.</span><span class="sxs-lookup"><span data-stu-id="d4991-117">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="d4991-118">El <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> método devuelve un <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, que define las propiedades individuales que forman una expresión de referencia de recurso.</span><span class="sxs-lookup"><span data-stu-id="d4991-118">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 <span data-ttu-id="d4991-119">Al heredar de la <xref:System.Web.UI.Design.ExpressionEditorSheet> (clase), debe reemplazar los miembros siguientes:</span><span class="sxs-lookup"><span data-stu-id="d4991-119">When you inherit from the <xref:System.Web.UI.Design.ExpressionEditorSheet> class, you must override the following members:</span></span>  
  
-   <span data-ttu-id="d4991-120">El <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> método devuelva un editor personalizado de implementación de la hoja.</span><span class="sxs-lookup"><span data-stu-id="d4991-120">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span>  
  
-   <span data-ttu-id="d4991-121">El <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor para implementar acciones de inicialización personalizadas para la implementación de hoja de editor de expresiones.</span><span class="sxs-lookup"><span data-stu-id="d4991-121">The <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to implement custom initialization actions for your expression editor sheet implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="d4991-122">
        <para>Derivar una hoja de editor de expresiones personalizado desde la <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> (clase), si se está definiendo un nuevo tipo de expresión para los valores de propiedad de control y desea generar la cadena de expresión en función de varios valores de propiedad de expresión. La implementación de una clase derivada debe contener lo siguiente:-una propiedad pública para cada valor distinto en la cadena de expresión que se pueden establecer en tiempo de diseño.  -Una implementación de la <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> método que constituye la cadena de expresión personalizada de los valores de propiedad de la hoja de editor.  -Si lo desea, una implementación de constructor que establece los valores iniciales del editor de propiedades de la hoja.  La clase de editor de expresiones personalizada asociada crea una instancia de la hoja de editor derivada en el <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> método, inicializa esa instancia con la cadena de expresión actual establecida para la propiedad de control y devuelve la instancia al diseñador visual. El diseñador visual permite establecer propiedades de la hoja de la expresión y, a continuación, llama a la <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> método para formar la cadena de expresión de los valores de propiedad de la hoja de expresión de entrada.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="d4991-122">
          <para>Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values. A derived class implementation should contain the following:  -   A public property for each distinct value in the expression string that can be set at design time.  -   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.  -   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.  The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer. The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="d4991-123">Implementación del proveedor de servicios proporcionada por el host del diseñador, que se utiliza para obtener servicios en tiempo de diseño adicionales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-123">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4991-124">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-124">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4991-125">Dado que la <xref:System.Web.UI.Design.ExpressionEditorSheet> clase es abstracta, no se puede crear una instancia de un <xref:System.Web.UI.Design.ExpressionEditorSheet> directamente mediante el <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="d4991-125">Because the <xref:System.Web.UI.Design.ExpressionEditorSheet> class is abstract, you cannot create an instance of an <xref:System.Web.UI.Design.ExpressionEditorSheet> directly using the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d4991-126">
            <para>Al derivar desde la <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> clase, invalide el <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor para implementar acciones de inicialización personalizadas para la implementación de hoja de editor de expresiones.  Por ejemplo, una clase de hoja de editor de expresiones personalizado que implementa las propiedades de expresión adicionales puede definir los valores predeterminados de las propiedades de la expresión en el <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor. Una clase de hoja de editor de expresiones personalizada puede definir sobrecargas adicionales del constructor público que utilizan los valores de parámetro de entrada para establecer los valores iniciales de las propiedades de expresión.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-126">
              <para>When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor to implement custom initialization actions for your expression editor sheet implementation.  For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor. A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4991-127">Cuando se reemplaza en una clase derivada, devuelve la cadena de expresión formada por los valores de propiedades de la hoja del editor de expresiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-127">When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4991-128">La cadena de expresión personalizada para los valores de propiedad actuales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-128">The custom expression string for the current property values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4991-129">Una hoja de editor de expresiones personalizada contiene la configuración de tiempo de diseño de varias propiedades de expresión, que se combinan para formar una cadena de expresión.</span><span class="sxs-lookup"><span data-stu-id="d4991-129">A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</span></span> <span data-ttu-id="d4991-130">Valores de propiedad de control se pueden establecer utilizando cadenas de expresión; las cadenas de expresión se evalúan en tiempo de ejecución mediante un generador de expresiones.</span><span class="sxs-lookup"><span data-stu-id="d4991-130">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</span></span>  
  
 <span data-ttu-id="d4991-131">El <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> método devuelve una cadena de expresión que se genera desde las propiedades de la expresión actual.</span><span class="sxs-lookup"><span data-stu-id="d4991-131">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns an expression string that is built from the current expression properties.</span></span> <span data-ttu-id="d4991-132">El diseñador visual permite establecer propiedades de la hoja de la expresión y, a continuación, llama a la <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> método para obtener la cadena de expresión y establecer el valor de propiedad de control.</span><span class="sxs-lookup"><span data-stu-id="d4991-132">The visual designer allows you to set the expression sheet properties, and then calls the <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method to get the expression string and set the control property value.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d4991-133">
            <para>Derivar una hoja de editor de expresiones personalizado desde la <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> (clase), si se está definiendo un nuevo tipo de expresión para los valores de propiedad de control y desea generar la cadena de expresión en función de varios valores de propiedad de expresión. La implementación de una clase derivada debe contener lo siguiente:-una propiedad pública para cada valor distinto en la cadena de expresión que se pueden establecer en tiempo de diseño.  -Una implementación de la <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> método que constituye la cadena de expresión personalizada de los valores de propiedad de la hoja de editor.  -Si lo desea, una implementación de constructor que establece los valores iniciales del editor de propiedades de la hoja.  La clase de editor de expresiones personalizada asociada crea una instancia de la hoja de editor derivada en el <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> método, inicializa esa instancia con la cadena de expresión actual establecida para la propiedad de control y, a continuación, se devuelve la instancia al objeto visual diseñador. El diseñador visual permite establecer propiedades de la hoja de la expresión y, a continuación, llama a la <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> método para formar la cadena de expresión de los valores de propiedad de la hoja de expresión de entrada.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-133">
              <para>Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values. A derived class implementation should contain the following:  -   A public property for each distinct value in the expression string that can be set at design time.  -   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.  -   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.  The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer. The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4991-134">Obtiene un valor que indica si la cadena de expresión es válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-134">Gets a value that indicates whether the expression string is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4991-135">Es <see langword="true" /> si la cadena de expresión es válida; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-135">
              <see langword="true" />, if the expression string is valid; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4991-136">Esta implementación base siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="d4991-136">This base implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4991-137">Obtiene la implementación del proveedor de servicios que utiliza la hoja de editor de expresiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-137">Gets the service provider implementation that is used by the expression editor sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4991-138">Un <see cref="T:System.IServiceProvider" />, que normalmente proporciona el host de diseño, y que se puede utilizar para obtener servicios en tiempo de diseño adicionales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4991-138">An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4991-139">Use la <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor para establecer el <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementación para una hoja de editor de expresiones personalizado.</span><span class="sxs-lookup"><span data-stu-id="d4991-139">Use the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to set the <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementation for a custom expression editor sheet.</span></span>  
  
 <span data-ttu-id="d4991-140">El <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> propiedad puede utilizarse para acceder a los servicios proporcionados por el host del diseñador.</span><span class="sxs-lookup"><span data-stu-id="d4991-140">The <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> property can be used to access services that are provided by the designer host.</span></span> <span data-ttu-id="d4991-141">Por ejemplo, llamar a la <xref:System.IServiceProvider.GetService%2A> método con el <xref:System.Web.UI.Design.IWebApplication> interfaz para acceder a los elementos de proyecto, documentos o detalles del archivo de configuración que se proporcionan a través del diseñador visual.</span><span class="sxs-lookup"><span data-stu-id="d4991-141">For example, call the <xref:System.IServiceProvider.GetService%2A> method with the <xref:System.Web.UI.Design.IWebApplication> interface to access project items, documents, or configuration file details that are provided through the visual designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>