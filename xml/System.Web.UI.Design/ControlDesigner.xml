<Type Name="ControlDesigner" FullName="System.Web.UI.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25b75f32f6802d179f891c33366390e6ebb5968d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36590535" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits HtmlControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::Web::UI::Design::HtmlControlDesigner" />
  <TypeSignature Language="F#" Value="type ControlDesigner = class&#xA;    inherit HtmlControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.HtmlControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a base control designer class for extending the design-mode behavior of a Web server control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner> clase proporciona una clase de diseñador de control base que se puede heredar y ha ampliado para proporcionar compatibilidad en tiempo de diseño para un control de servidor Web en un host de diseño, como [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 El modelo de objetos para trabajar con la representación en tiempo de diseño se ha mejorado respecto a versiones anteriores, con las nuevas clases base siguientes para proporcionar acceso al modelo de objetos simplificado:  
  
-   <xref:System.Web.UI.Design.ControlDesigner>, que no es nueva, pero se ha mejorado considerablemente.  
  
-   <xref:System.Web.UI.Design.ContainerControlDesigner>.  
  
-   <xref:System.Web.UI.Design.WebControls.CompositeControlDesigner>.  
  
## <a name="automatic-formatting"></a>Formato automático  
 Puede crear una variedad de formatos automáticos y predefinidos que puede simplificar el proceso de los desarrolladores de páginas que se va a aplicar cambios de estilo complejos a controles de servidor Web personalizados. Por ejemplo, el <xref:System.Web.UI.Design.WebControls.TableDesigner> control, que se deriva de la <xref:System.Web.UI.Design.ControlDesigner> clase, proporciona muchos formatos automáticos entre los que elegir. Para implementar y proporcionar formato automático en los controles personalizados, utilice las siguientes características:  
  
-   Propiedad <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A>  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A>.  
  
-   La clase <xref:System.Web.UI.Design.DesignerAutoFormat>.  
  
-   La clase <xref:System.Web.UI.Design.DesignerAutoFormatStyle>.  
  
## <a name="action-lists-smart-tags"></a>Listas de acciones (etiquetas inteligentes)  
 Listas de acciones son menús de tareas importantes o ampliamente utilizados que un desarrollador de páginas que utiliza un control puede realizar en una interfaz de usuario de tiempo de diseño (IU), como [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. Por ejemplo, la vista en tiempo de diseño del control podría proporcionar un menú de tareas disponibles. Esto incluye una tarea para dar formato al control automáticamente. Para obtener información acerca de las listas de acción, empiece con las siguientes características:  
  
-   Propiedad <xref:System.Web.UI.Design.ControlDesigner.ActionLists%2A>  
  
-   La clase <xref:System.ComponentModel.Design.DesignerActionList>.  
  
-   Método <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>.  
  
-   La clase <xref:System.ComponentModel.Design.DesignerActionListCollection>.  
  
-   La clase <xref:System.ComponentModel.Design.DesignerActionMethodItem>.  
  
-   La clase <xref:System.ComponentModel.Design.DesignerActionPropertyItem>.  
  
## <a name="control-designer-regions"></a>Regiones del Diseñador de controles  
 Las regiones son las áreas modificables en la vista en tiempo de diseño de un control de servidor Web. Esta característica ofrece edición de tipo WYSIWYG de controles internos, propiedades y el contenido de la plantilla en tiempo de diseño. Puede hacer que el Diseñador de controles cree controles en regiones o puede usar el cuadro de herramientas para arrastrar y colocar controles en regiones. Las regiones se administran con las siguientes características:  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A>.  
  
-   La clase <xref:System.Web.UI.Design.DesignerRegion>.  
  
-   La clase <xref:System.Web.UI.Design.EditableDesignerRegion>.  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A>.  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A>.  
  
## <a name="templates"></a>Plantillas  
 El modelo para crear una interfaz de usuario de edición en tiempo de diseño de controles con plantilla, como la <xref:System.Web.UI.WebControls.GridView> de control, se ha mejorado en gran medida de las versiones anteriores. Puede crear controles personalizados complejos que incluyan plantillas para diversas partes del control y el Diseñador de controles personalizados puede ayudar a los desarrolladores de páginas que se va a modificar plantillas con las siguientes características:  
  
-   Propiedad <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A>  
  
-   Propiedad <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A>  
  
-   La clase <xref:System.Web.UI.Design.TemplateGroup>.  
  
## <a name="design-time-rendering"></a>Representación en tiempo de diseño  
 La <xref:System.Web.UI.Design.ControlDesigner> clase tiene los siguientes métodos para admitir la representación en tiempo de diseño del control de servidor Web. La mayoría de estos métodos es los mismos que en versiones anteriores:  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>.  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A>.  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A>.  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>.  
  
-   Método <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una clase simple de diseñador que se deriva de la <xref:System.Web.UI.Design.ControlDesigner> clase. Este diseñador de controles admite un personalizado `TextControl` clase y proporciona un comando para cambiar el tamaño del texto de un control en tiempo de diseño. El Diseñador de control está asociado con el control especificando el Diseñador de controles en un <xref:System.ComponentModel.DesignerAttribute> declaración del objeto en el `TextControl` clase. La clave para guardar cambios de las propiedades del Diseñador de controles para el marcado HTML se encuentra en la `ToggleTextSize` método personalizado `ActionList` clase.  
  
 Para probar el ejemplo, agregue una referencia al ensamblado System.Design.dll y compile el código.  
  
 [!code-csharp[ControlDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.cs#1)]
 [!code-vb[ControlDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.vb#1)]  
[!code-aspx-csharp[ControlDesignerSample#8](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.aspx#8)]
[!code-aspx-vb[ControlDesignerSample#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.aspx#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
    <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
    <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the action list collection for the control designer.</summary>
        <value>Un objeto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contiene los elementos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> del diseñador de controles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un control compuesto simple con un <xref:System.Web.UI.WebControls.Label> y un <xref:System.Web.UI.WebControls.TextBox> (control), junto con las propiedades para establecer las propiedades de texto en ambos controles internos y también el <xref:System.Web.UI.WebControls.WebControl.Width%2A> y <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propiedades de la <xref:System.Web.UI.WebControls.TextBox> control. Una clase de diseñador de controles asociada crea tres <xref:System.ComponentModel.Design.DesignerActionMethodItem> comandos, cada uno de los cuales establece dos propiedades en el control y se pueden revertir con la funcionalidad de deshacer del host de diseño.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Para agregar un menú de la lista de acciones en un control personalizado en la vista Diseño, el Diseñador de control personalizado debe reemplazar la <see cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" /> propiedad para devolver una clase de control personalizado que se deriva de la <see cref="T:System.ComponentModel.Design.DesignerActionList" /> clase.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public virtual bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowResize : bool" Usage="System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control can be resized in the design-time environment.</summary>
        <value>
          <see langword="true" />, si el control puede cambiar de tamaño; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.Design.ControlDesigner.AllowResize%2A> propiedad en una clase de diseñador de control personalizado.  
  
 Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> propiedad.  
  
 [!code-csharp[DesignerTemplateGroupSample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#3)]
 [!code-vb[DesignerTemplateGroupSample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Use la <see cref="P:System.Web.UI.Design.ControlDesigner.AllowResize" /> propiedad en clases derivadas para habilitar o deshabilitar los desarrolladores de páginas en el tamaño del control en el host de diseño.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoFormats">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutoFormats As DesignerAutoFormatCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::DesignerAutoFormatCollection ^ AutoFormats { System::Web::UI::Design::DesignerAutoFormatCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AutoFormats : System.Web.UI.Design.DesignerAutoFormatCollection" Usage="System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormatCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of predefined automatic formatting schemes to display in the **Auto Format** dialog box for the associated control at design time.</summary>
        <value>Objeto <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> que contiene los esquemas predefinidos del control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control de servidor Web completando incluye no sólo el control, pero además, posiblemente, su correspondiente controlar la clase de diseñador que se deriva de la <xref:System.Web.UI.Design.ControlDesigner> clase y un formato que se deriva de la <xref:System.Web.UI.Design.DesignerAutoFormat> clase. El <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> propiedad es una colección de instancias de la <xref:System.Web.UI.Design.DesignerAutoFormat> clase. Para obtener un ejemplo de formato automático en [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], consulte <xref:System.Web.UI.WebControls.Calendar>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> propiedad en un diseñador de controles personalizados. Implementa el Diseñador de control derivado el <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> propiedad agregando tres instancias de un formato automático personalizado que se derivan de la <xref:System.Web.UI.Design.DesignerAutoFormat> clase.  
  
 [!code-csharp[DesignerAutoFormat#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerAutoFormat/CS/DesignerAutoFormat.cs#1)]
 [!code-vb[DesignerAutoFormat#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerAutoFormat/VB/DesignerAutoFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Controles que exponen automáticamente autoformatos tarea de obtención de una lista y comandos de contexto para sus formatos. Cuando esté utilizando formatos automáticos, use la <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> propiedad para establecer las propiedades en la función de devolución de llamada.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateErrorDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates HTML markup to display an error message at design time.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="member this.CreateErrorDesignTimeHtml : string -&gt; string" Usage="controlDesigner.CreateErrorDesignTimeHtml errorMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The error message to include in the generated HTML markup.</param>
        <summary>Creates HTML markup to display a specified error message at design time.</summary>
        <returns>An HTML markup string that contains the specified error message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> método para crear el formato HTML para mostrar un mensaje de error para un control en tiempo de diseño. El valor de `errorMessage` especifica una cadena localizada que se muestra al usuario del control en tiempo de diseño.  
  
 El <xref:System.Web.UI.Design.ControlDesigner> implementación de la clase de la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> método devuelve una tabla con dos filas, como se indica a continuación:  
  
-   La primera fila contiene el nombre de tipo y nombre de sitio para el <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> propiedad de la <xref:System.Web.UI.Design.ControlDesigner> objeto.  
  
-   La segunda fila contiene la cadena de mensaje de error en la entrada.  
  
 Para generar el marcado HTML para un mensaje de error con una excepción asociada, utilice el <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%2CSystem.Exception%29> de sobrecarga. Para generar el marcado HTML para una excepción sin especificar un mensaje de error localizado, use la <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>El <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" /> sobrecarga es funcionalmente equivalente a llamar a la <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> método con e establecido en <see langword="null" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String, e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage, Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.CreateErrorDesignTimeHtml : string * Exception -&gt; string" Usage="controlDesigner.CreateErrorDesignTimeHtml (errorMessage, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The error message to include in the generated HTML string.</param>
        <param name="e">The exception to include in the generated HTML string.</param>
        <summary>Creates the HTML markup to display a specified exception error message at design time.</summary>
        <returns>HTML markup that contains the specified <paramref name="errorMessage" /> and <paramref name="e" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> método para proporcionar un formato HTML simple que puede usarse para mostrar los detalles de error y excepción para un control en tiempo de diseño. El valor de `errorMessage` especifica una cadena localizada que se muestra al usuario del control en tiempo de diseño.  
  
 El <xref:System.Web.UI.Design.ControlDesigner> implementación de la clase de la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> método devuelve una tabla con dos filas, como se indica a continuación:  
  
-   La primera fila contiene el nombre de tipo y nombre de sitio para el <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> propiedad de la <xref:System.Web.UI.Design.ControlDesigner> objeto.  
  
-   La segunda fila contiene el mensaje de error en la entrada y la <xref:System.Exception.Message%2A> cadena de la excepción.  
  
 Para generar el marcado HTML para un mensaje de error sin especificar una excepción, use la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%29> sobrecarga. Para generar el marcado HTML para una excepción sin especificar un mensaje de error localizado, use la <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>El <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> método debe llamarse desde el <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" /> o <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> método cuando se producen excepciones.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePlaceHolderDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
        <block subset="none" type="overrides">
          <para>El modelo de diseño típico es intentar obtener el marcado HTML mediante el control asociado y, a continuación, si se produce un error, llame a la <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> método. Si el control no devuelve ningún tipo de marcado, llame a la <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> método, que si no se invalida para proporcionar un código específico, llama a la <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> método, que debe contener información sobre el tipo y el identificador del control.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="member this.CreatePlaceHolderDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.CreatePlaceHolderDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
        <returns>A string that contains design-time HTML markup providing basic information about the control.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>El modelo de diseño típico es intentar obtener el marcado HTML mediante el control asociado y, a continuación, si se produce un error, llame a la <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> método. Si el control no devuelve ningún tipo de marcado, llame a la <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> método, que si no se invalida para proporcionar un código específico, llama a la <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> método, que debe contener información sobre el tipo y el identificador del control.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml (string instruction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml(string instruction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml (instruction As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml(System::String ^ instruction);" />
      <MemberSignature Language="F#" Value="member this.CreatePlaceHolderDesignTimeHtml : string -&gt; string" Usage="controlDesigner.CreatePlaceHolderDesignTimeHtml instruction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instruction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instruction">A string that contains text and markup to add to the HTML output.</param>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control, and also additional specified instructions or information.</summary>
        <returns>A string that contains design-time HTML markup providing information about the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método en un diseñador de controles con plantilla. A continuación, se pasa una cadena como el `instruction` parámetro en una llamada a la <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> método, que proporciona el formato HTML en tiempo de diseño.  
  
 Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> propiedad.  
  
 [!code-csharp[DesignerTemplateGroupSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#4)]
 [!code-vb[DesignerTemplateGroupSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>El modelo de diseño típico es intentar obtener el marcado HTML mediante el control asociado y, a continuación, si se produce un error, llame a la <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> método. Si el control no devuelve ningún tipo de marcado, llame a la <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> método, que si no se invalida para proporcionar un código específico, llama a la <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> método, que debe contener información sobre el tipo y el identificador del control.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateViewControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateViewControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateViewControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateViewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateViewControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateViewControl();" />
      <MemberSignature Language="F#" Value="abstract member CreateViewControl : unit -&gt; System.Web.UI.Control&#xA;override this.CreateViewControl : unit -&gt; System.Web.UI.Control" Usage="controlDesigner.CreateViewControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
        <returns>A Web server control.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingsEnabled">
      <MemberSignature Language="C#" Value="protected virtual bool DataBindingsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBindingsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DataBindingsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DataBindingsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindingsEnabled : bool" Usage="System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether data binding is supported by the containing region for the associated control.</summary>
        <value>
          <see langword="true" />, si el contenedor para el control admite el enlace de datos; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesignerState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.ControlDesignerState DesignerState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.ControlDesignerState DesignerState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignerState As ControlDesignerState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::ControlDesignerState ^ DesignerState { System::Web::UI::Design::ControlDesignerState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerState : System.Web.UI.Design.ControlDesignerState" Usage="System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ControlDesignerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that is used to persist data for the associated control at design time.</summary>
        <value>A <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> propiedad que implementa <see cref="T:System.Collections.IDictionary" /> y utiliza el <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> para conservar los datos de estado para el control asociado en tiempo de diseño.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores para el <xref:System.Web.UI.Design.ControlDesigner.DesignerState%2A> propiedad persisten incluso si el usuario cambia de diseño a la vista de origen, o vuelve a cargar el documento, o se cierra y vuelve a abrir el host de diseño.  
  
 Puede obtener y establecer valores en el objeto devuelto como lo haría en un IDictionary de objeto, con los valores guardados automáticamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeElementView">
      <MemberSignature Language="C#" Value="protected object DesignTimeElementView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DesignTimeElementView" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignTimeElementView As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ DesignTimeElementView { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeElementView : obj" Usage="System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Error: This property can no longer be referenced, and is included to support existing compiled applications. The design-time element view architecture is no longer used. http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the view-control object for the control designer.</summary>
        <value>
          <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.Design.ControlDesigner.DesignTimeElementView%2A> propiedad está obsoleta y no hay ningún reemplazo para la funcionalidad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeHtmlRequiresLoadComplete">
      <MemberSignature Language="C#" Value="public virtual bool DesignTimeHtmlRequiresLoadComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesignTimeHtmlRequiresLoadComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeHtmlRequiresLoadComplete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeHtmlRequiresLoadComplete : bool" Usage="System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SetViewFlags(ViewFlags.DesignTimeHtmlRequiresLoadComplete, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the design host must finish loading before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called.</summary>
        <value>
          <see langword="true" />, si la carga debe cumplirse antes de la <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> método se puede llamar; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada de la <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> propiedad devuelve `false`.  
  
> [!NOTE]
>  La propiedad <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> está obsoleta. Use la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> método para la funcionalidad del Diseñador de control equivalente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.Rectangle" Usage="controlDesigner.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the coordinates of the rectangle representing the boundaries for the control as displayed on the design surface.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> object representing the boundaries for the control on the design surface relative to the control, not the document.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.DesignerRegion.GetBounds" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeHtml : unit -&gt; string&#xA;override this.GetDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.GetDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
        <returns>The HTML markup used to represent the control at design time.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método en un diseñador de controles personalizados. Si la propiedad de texto para el control asociado está vacía, el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> llamadas al método el <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> método. En caso contrario, el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método crea y representa un control de hipervínculo.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si va a crear un control contenedor personalizado, asegúrese de que representará el control y todos los controles secundarios en tiempo de diseño, independientemente de si la <see cref="P:System.Web.UI.Control.Visible" /> propiedad está establecida en <see langword="true" /> o <see langword="false" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeHtml : System.Web.UI.Design.DesignerRegionCollection -&gt; string&#xA;override this.GetDesignTimeHtml : System.Web.UI.Design.DesignerRegionCollection -&gt; string" Usage="controlDesigner.GetDesignTimeHtml regions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">A collection of control designer regions for the associated control.</param>
        <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
        <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El host de diseño llama el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método para obtener el marcado HTML en tiempo de diseño y la lista actual de control de las regiones del diseñador. Con DesignerRegionCollection, el host de diseño puede solicitar el marcado de cada región de diseñador de control que puede modificar.  
  
 El <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método se proporciona para un diseñador de controles derivado, como la <xref:System.Web.UI.Design.WebControls.GridViewDesigner> (clase), que debe procesar el contenido de la región antes de llamar a la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear marcado HTML a través del <xref:System.Web.UI.Design.DesignerRegionCollection> colección.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#5)]
 [!code-vb[SimpleMultiRegionControlDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeResourceProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesignTimeResourceProviderFactory (serviceProvider As IServiceProvider) As DesignTimeResourceProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::DesignTimeResourceProviderFactory ^ GetDesignTimeResourceProviderFactory(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetDesignTimeResourceProviderFactory : IServiceProvider -&gt; System.Web.UI.Design.DesignTimeResourceProviderFactory" Usage="System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignTimeResourceProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object that can retrieve global and local services.</param>
        <summary>Returns an appropriate resource provider factory, depending on the globalization settings in the configuration file for the site.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object, if any are defined in the configuration file; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un generador de proveedores de recursos crea proveedores de recursos y los escritores de recursos, según la configuración actual en la sección System.Web/Globalization del archivo de configuración (el archivo Machine.config o Web.config archivos de recursos globales y locales ). Si no se encuentra ninguna configuración de globalización, la `serviceProvider` parámetro se utiliza para crear un <xref:System.Web.UI.Design.DesignTimeResourceProviderFactory> objeto mediante la implementación predeterminada para el host de diseño.  
  
 Normalmente, los programadores de controles no invalidará el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.ResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberSignature Language="F#" Value="abstract member GetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion -&gt; string&#xA;override this.GetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion -&gt; string" Usage="controlDesigner.GetEditableDesignerRegionContent region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object to get content for.</param>
        <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
        <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada de la <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> método devuelve una cadena vacía ("").  
  
 Las clases que derivan de la <xref:System.Web.UI.Design.ControlDesigner> clase admiten la edición basada en la región en la superficie de diseño y reemplazan el <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> método para devolver el contenido de una región especificada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo obtener una referencia al host de diseño y, a continuación, usar dicha referencia para crear un <xref:System.Web.UI.Design.ControlParser> objeto que crea el marcado HTML de `region` y su contenido.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#6)]
 [!code-vb[SimpleMultiRegionControlDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetEmptyDesignTimeHtml : unit -&gt; string&#xA;override this.GetEmptyDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.GetEmptyDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
        <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El comportamiento predeterminado de la <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> método consiste en devolver una cadena que contiene el nombre del componente. El <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> método debe llamarse en la implementación de la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método cuando no hay ningún formato HTML en tiempo de diseño.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método en un diseñador de controles personalizados. Si el `Text` propiedad para el control asociado está vacía, el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> llamadas al método <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> método. En caso contrario, el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método crea y representa un `Hyperlink` control.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorDesignTimeHtml : Exception -&gt; string&#xA;override this.GetErrorDesignTimeHtml : Exception -&gt; string" Usage="controlDesigner.GetErrorDesignTimeHtml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">The exception that occurred.</param>
        <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
        <returns>The design-time HTML markup for the specified exception.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> método se llama normalmente, si se produce una excepción el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo generar marcado HTML en tiempo de diseño para el control cuando se produce un error y llame al método el <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> método.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/CS/LoginDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/VB/LoginDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>El modelo de diseño típico es intentar obtener el marcado HTML mediante el control asociado y, a continuación, si se produce un error, llame a la <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> método. Si el control no devuelve ningún tipo de marcado, llame a la <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> método, que si no se invalida para proporcionar un código específico, llama a la <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> método, que debe contener información sobre el tipo y el identificador del control.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public virtual string GetPersistenceContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistenceContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistenceContent () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistenceContent();" />
      <MemberSignature Language="F#" Value="abstract member GetPersistenceContent : unit -&gt; string&#xA;override this.GetPersistenceContent : unit -&gt; string" Usage="controlDesigner.GetPersistenceContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the persistable inner HTML markup of the control at design time.</summary>
        <returns>A string representing the persistable inner HTML markup for the associated control. The default is <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Invalidar el <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" /> método para proporcionar control personalizado de la persistencia del contenido interno para el host de diseño.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ControlPersister" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistInnerHtml">
      <MemberSignature Language="C#" Value="public virtual string GetPersistInnerHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistInnerHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistInnerHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistInnerHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetPersistInnerHtml : unit -&gt; string&#xA;override this.GetPersistInnerHtml : unit -&gt; string" Usage="controlDesigner.GetPersistInnerHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is GetPersistenceContent(). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the persistable inner HTML markup of the control.</summary>
        <returns>The persistable inner HTML markup of the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml%2A> método está obsoleto. Use la <xref:System.Web.UI.Design.ControlDesigner.GetPersistenceContent%2A> método para la funcionalidad del Diseñador de control equivalente.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetViewRendering">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ViewRendering GetViewRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.Design.ViewRendering GetViewRendering() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewRendering () As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::Design::ViewRendering ^ GetViewRendering();" />
      <MemberSignature Language="F#" Value="member this.GetViewRendering : unit -&gt; System.Web.UI.Design.ViewRendering" Usage="controlDesigner.GetViewRendering " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="static member GetViewRendering : System.Web.UI.Control -&gt; System.Web.UI.Design.ViewRendering" Usage="System.Web.UI.Design.ControlDesigner.GetViewRendering control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Web.UI.Control" /> object.</param>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the specified control.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Design.ControlDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Design.ControlDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetViewRendering (designer As ControlDesigner) As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Design::ControlDesigner ^ designer);" />
      <MemberSignature Language="F#" Value="static member GetViewRendering : System.Web.UI.Design.ControlDesigner -&gt; System.Web.UI.Design.ViewRendering" Usage="System.Web.UI.Design.ControlDesigner.GetViewRendering designer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">A control designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control for the specified control designer.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="HidePropertiesInTemplateMode">
      <MemberSignature Language="C#" Value="protected internal virtual bool HidePropertiesInTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePropertiesInTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HidePropertiesInTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HidePropertiesInTemplateMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidePropertiesInTemplateMode : bool" Usage="System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the properties of the associated control are hidden when the control is in template mode.</summary>
        <value>
          <see langword="true" />, si las propiedades del control asociado están ocultas cuando el control está en modo de plantilla; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad ID nunca está oculta. El <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> método usa la <xref:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode%2A> propiedad para determinar si las propiedades distintas de la propiedad ID, deben ocultarse de la cuadrícula de propiedades mientras el control está en modo de edición de plantillas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.Design.ControlDesigner.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ID string for the control.</summary>
        <value>La cadena de identificador para el control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.ID%2A> propiedad se utiliza internamente en el Diseñador de control y para la interacción con la ventana Propiedades. El <xref:System.Web.UI.Design.ControlDesigner.ID%2A> propiedad prevalece sobre el tiempo de ejecución <xref:System.Web.UI.Control.ID%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="controlDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">The control being designed.</param>
        <summary>Initializes the control designer and loads the specified component.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> método se llama por el host de diseño para completar las acciones siguientes:  
  
-   Cargar el Diseñador de control con el componente a diseñar.  
  
-   Preparar la vista en el control mediante la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> método.  
  
-   Compruebe que el control asociado es del tipo correcto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar una clase de control y una clase de diseñador de controles que invalide la <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> método para inicializar las variables internas.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InTemplateMode">
      <MemberSignature Language="C#" Value="protected bool InTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InTemplateMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InTemplateMode : bool" Usage="System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control is in either template viewing or editing mode in the design host. The <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> property is read-only.</summary>
        <value>
          <see langword="true" />, si el control está en la vista o modo; de edición de plantilla en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control de servidor Web está en modo de plantilla cuando se está viendo una plantilla de solo lectura o está editando una plantilla modificable en un host de diseño como [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 El <xref:System.Web.UI.Design.ControlDesigner> clase proporciona un valor predeterminado <xref:System.Web.UI.Design.ViewEventHandler> objeto que se va a actualizar el <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A> valor cuando cambia el modo de plantilla para el control asociado. Los diseñadores personalizados que se derivan de la <xref:System.Web.UI.Design.TemplatedControlDesigner> clase puede invalidar el <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> método para realizar un procesamiento adicional cuando lo cambios de modo de un control en el host de diseño de la edición de plantillas.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
        <altmember cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invalidates the control as displayed on the design surface and causes the design host to call the <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al llamar a <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> método también llama <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="controlDesigner.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidates the whole area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para habilitar el Diseñador de control controlar los eventos de pintura, use la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> método en el <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> método.  
  
 El <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> método proporciona una manera de indicar al diseñador de control para volver a dibujar el control en el host de diseño. En esencia, esto equivale a llamar a <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> método, porque hace que se vuelvan a dibujar todo el control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="controlDesigner.Invalidate rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> object that represents the area to invalidate, relative to the upper-left corner of the control.</param>
        <summary>Invalidates the specified area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para habilitar el Diseñador de control controlar los eventos de pintura, use la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> método en el <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> método.  
  
 El <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> método proporciona el host de diseño una manera de indicar al diseñador de control para volver a dibujar una parte específica del control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeTransactedChange">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (component, callback, context, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación de la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> método notifica al host de diseño, que viene determinado por la <xref:System.Web.UI.Control.Site%2A> propiedad de `component`, que un cambio se está produciendo en el control asociado y, si el cambio no se ha cancelado por el host de diseño, se invoca el especificado `callback` utilizando los `context`y, a continuación, notifica al host de diseño que se ha completado el cambio.  
  
 Si el host de diseño o el control asociado inicia un estático `Canceled` campo de excepción de un <xref:System.ComponentModel.Design.CheckoutException> excepción, la transacción se cancela sin invocar `callback`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un control compuesto simple con un <xref:System.Web.UI.WebControls.Label> y un <xref:System.Web.UI.WebControls.TextBox> (control), junto con las propiedades para establecer el texto de etiqueta y también el <xref:System.Web.UI.WebControls.TextBox.Text%2A>, <xref:System.Web.UI.WebControls.WebControl.Width%2A>, y <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propiedades de el <xref:System.Web.UI.WebControls.TextBox> control. Una clase de diseñador de controles asociada crea tres <xref:System.ComponentModel.Design.DesignerActionMethodItem> comandos, cada uno de los cuales establece dos propiedades en el control. Mediante el uso de la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> método, puede usar la funcionalidad de deshacer del host de diseño, como [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], para revertir cada transacción completada como una unidad.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.CheckoutException" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (component, callback, context, description, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically, either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación de la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> método notifica al host de diseño, que viene determinado por la <xref:System.Web.UI.Control.Site%2A> propiedad de `component`, que se está produciendo un cambio a los especificados `member` (propiedad o método) del control asociado y, si el cambio no se ha cancelado por el host de diseño, se invoca especificado `callback` mediante especificado `context` como argumento y, a continuación, notifica al host de diseño que se ha completado el cambio.  
  
 Si el host de diseño o el control asociado inicia un estático `Canceled` campo de excepción de un <xref:System.ComponentModel.Design.CheckoutException> excepción, la transacción se cancela sin invocar `callback`.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%28System.ComponentModel.IComponent%2CSystem.Web.UI.Design.TransactedChangeCallback%2CSystem.Object%2CSystem.String%29>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (IServiceProvider serviceProvider, System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.IServiceProvider serviceProvider, class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (serviceProvider As IServiceProvider, component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(IServiceProvider ^ serviceProvider, System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : IServiceProvider * System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (serviceProvider, component, callback, context, description, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object representing the design host that provides control designer services for the associated control.</param>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación de la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> método notifica al host de diseño, que se representa mediante `serviceProvider`, que se está produciendo un cambio a los especificados `member` (propiedad o método) del control asociado y, si no se cancela el cambio mediante el host de diseño, se invoca especificado `callback` mediante especificado `context` como argumento y, a continuación, notifica al host de diseño que se ha completado el cambio.  
  
 Si el host de diseño o el control asociado inicia un estático `Canceled` campo de excepción de un <xref:System.ComponentModel.Design.CheckoutException> excepción, la transacción se cancela sin invocar `callback`.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.  -or-  <paramref name="serviceProvider" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to use Tag.SetDirty() and Tag.IsDirty. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the Web server control has been marked as changed.</summary>
        <value>
          <see langword="true" />, si el control de servidor Web ha cambiado desde su última persistente o cargado; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  La propiedad <xref:System.Web.UI.Design.ControlDesigner.IsDirty%2A> está obsoleta. Use la <xref:System.Web.UI.Design.IControlDesignerTag.IsDirty%2A> propiedad y el <xref:System.Web.UI.Design.IControlDesignerTag.SetDirty%2A> método en el <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> propiedad para la funcionalidad del Diseñador de control equivalente.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" />
        <altmember cref="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="IsPropertyBound">
      <MemberSignature Language="C#" Value="public bool IsPropertyBound (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPropertyBound(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPropertyBound (propName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPropertyBound(System::String ^ propName);" />
      <MemberSignature Language="F#" Value="member this.IsPropertyBound : string -&gt; bool" Usage="controlDesigner.IsPropertyBound propName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is DataBindings.Contains(string). The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">The property to test for data binding.</param>
        <summary>Retrieves a value indicating whether the specified property on the associated control is data-bound.</summary>
        <returns>
          <see langword="true" />, if the property is data-bound; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.Design.ControlDesigner.IsPropertyBound%2A> método está obsoleto. Use la <xref:System.Web.UI.DataBindingCollection.Contains%2A> método en el <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> propiedad para la funcionalidad del Diseñador de control equivalente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBindingCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public void Localize (System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Localize(class System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Localize (resourceWriter As IDesignTimeResourceWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Localize(System::Web::UI::Design::IDesignTimeResourceWriter ^ resourceWriter);" />
      <MemberSignature Language="F#" Value="member this.Localize : System.Web.UI.Design.IDesignTimeResourceWriter -&gt; unit" Usage="controlDesigner.Localize resourceWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceWriter" Type="System.Web.UI.Design.IDesignTimeResourceWriter" />
      </Parameters>
      <Docs>
        <param name="resourceWriter">An object derived from the <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> object that is used to write resources into the design-time response stream.</param>
        <summary>Uses the provided resource writer to persist the localizable properties of the associated control to a resource in the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> método se llama por el host de diseño para crear entradas de recursos para cada propiedad que se marca con un <xref:System.ComponentModel.LocalizableAttribute> objeto y las propiedades que utilice una expresión de recurso explícita como un valor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoFormatApplied">
      <MemberSignature Language="C#" Value="public virtual void OnAutoFormatApplied (System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAutoFormatApplied(class System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAutoFormatApplied (appliedAutoFormat As DesignerAutoFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAutoFormatApplied(System::Web::UI::Design::DesignerAutoFormat ^ appliedAutoFormat);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoFormatApplied : System.Web.UI.Design.DesignerAutoFormat -&gt; unit&#xA;override this.OnAutoFormatApplied : System.Web.UI.Design.DesignerAutoFormat -&gt; unit" Usage="controlDesigner.OnAutoFormatApplied appliedAutoFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appliedAutoFormat" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
        <summary>Called when a predefined, automatic formatting scheme has been applied to the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> método se llama después de un <xref:System.Web.UI.Design.DesignerAutoFormat> objeto aplica un formato predefinido para el control asociado. Un <xref:System.Web.UI.Design.DesignerAutoFormat> objeto define el formato automático esquema estilo y el nombre de configuración que se aplica al control.  
  
 Las clases que derivan de la <xref:System.Web.UI.Design.ControlDesigner> clase invalidación el <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> método para realizar un procesamiento adicional cuando se aplica una combinación de formato automática para el control asociado.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingsCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingsCollectionChanged (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingsCollectionChanged(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingsCollectionChanged (propName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingsCollectionChanged(System::String ^ propName);" />
      <MemberSignature Language="F#" Value="override this.OnBindingsCollectionChanged : string -&gt; unit" Usage="controlDesigner.OnBindingsCollectionChanged propName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to handle the Changed event on the DataBindings collection. The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">The property to test for changes in its bindings collection.</param>
        <summary>Called when the data-binding collection changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> método se llama cuando un llamador externo ha cambiado la colección de enlace de datos.  
  
> [!NOTE]
>  El <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> método está obsoleto. Use la <xref:System.Web.UI.DataBindingCollection.Changed> evento en el <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> colección para la funcionalidad del Diseñador de control equivalente.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.DataBindingCollection.Changed" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.Design.DesignerRegionMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.Design.DesignerRegionMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::Design::DesignerRegionMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : System.Web.UI.Design.DesignerRegionMouseEventArgs -&gt; unit&#xA;override this.OnClick : System.Web.UI.Design.DesignerRegionMouseEventArgs -&gt; unit" Usage="controlDesigner.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.Design.DesignerRegionMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> object that specifies the location and, possibly, the control designer region that the user clicked.</param>
        <summary>Called by the design host when the user clicks the associated control at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> evento es desencadenado por el host de diseño para determinadas acciones en un control en la superficie de diseño. Por ejemplo, un evento se desencadena para las condiciones siguientes:  
  
-   El usuario hace clic en el control.  
  
-   El Diseñador de controles dibuja en la superficie de diseño.  
  
-   El usuario entra o sale del modo para el control de edición de plantillas.  
  
 El <xref:System.Web.UI.Design.ControlDesigner> clase proporciona un delegado predeterminado para controlar la <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> eventos. Clases derivadas de <xref:System.Web.UI.Design.ControlDesigner> invalidar la <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> método para procesar los eventos que se producen cuando el usuario hace clic en un control.  
  
 El <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> método permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 La implementación predeterminada de la <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> método devuelve sin realizar ningún procesamiento.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar un controlador para el <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> eventos en una región donde hacer clic del control y use un <xref:System.Web.UI.Design.DesignerRegionMouseEventArgs> objeto para identificar la región que se hace clic en.  
  
 Este ejemplo de código forma parte de un ejemplo más extenso de código para el <xref:System.Web.UI.Design.EditableDesignerRegion> clase.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalidar el <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> método en una clase derivada de la <see cref="T:System.Web.UI.Design.ControlDesigner" /> clase para administrar el tiempo de diseño, haga clic en eventos en el control. Si <paramref name="e" /> no es nulo, la región donde ha hecho clic, si los hay, se especifica en el <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" /> propiedad.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanged (sender As Object, ce As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ ce);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit&#xA;override this.OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="controlDesigner.OnComponentChanged (sender, ce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source of the event.</param>
        <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
        <summary>Called when the associated control changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> método se llama cuando se cambia una propiedad en el control asociado. Permite al implementador hacer cualquier procesamiento que podría ser necesario después de un cambio de propiedad. Llamar a la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> método hace que el host de diseño llamar a la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método. La implementación base de la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> método también conserva el control en el marcado de la página.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalidar el <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> método para proporcionar un procesamiento adicional antes de guardar el control y antes de actualizar el formato HTML en tiempo de diseño.  Al reemplazar el <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanging (object sender, System.ComponentModel.Design.ComponentChangingEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object sender, class System.ComponentModel.Design.ComponentChangingEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanging (sender As Object, ce As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanging(System::Object ^ sender, System::ComponentModel::Design::ComponentChangingEventArgs ^ ce);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : obj * System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit&#xA;override this.OnComponentChanging : obj * System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit" Usage="controlDesigner.OnComponentChanging (sender, ce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The object that is the source of the event.</param>
        <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
        <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event for the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando tanto el <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> o <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> método se llama, el <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> evento tiene lugar antes de que los cambios se realizan en el control asociado. Después de que los cambios están completos, la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> se produce el método.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnControlResize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlResize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnControlResize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlResize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlResize();" />
      <MemberSignature Language="F#" Value="abstract member OnControlResize : unit -&gt; unit&#xA;override this.OnControlResize : unit -&gt; unit" Usage="controlDesigner.OnControlResize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is OnComponentChanged(). OnComponentChanged is called when any property of the control is changed. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the associated Web server control has been resized in the design host at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> método está obsoleto. Use la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> método para la funcionalidad del Diseñador de control equivalente.  
  
 El <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> método normalmente se llama solo por el entorno en tiempo de diseño cuando el control de servidor Web asociado para cambiar de tamaño da lugar a una acción del usuario. El <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> método puede llamarse varias veces durante un proceso de cambio de tamaño para mostrar el tamaño actualizado del control antes de que se complete el cambio de tamaño. Las propiedades de ancho y alto del control se actualizan antes de la <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> se llama al método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="controlDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> object that specifies the graphics and rectangle boundaries used to draw the control.</param>
        <summary>Called when the control designer draws the associated control on the design surface, if the <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> value is <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> evento es desencadenado por el host de diseño para determinadas acciones en un control en la superficie de diseño. Por ejemplo, un evento se desencadena para las condiciones siguientes:  
  
-   El usuario hace clic en el control.  
  
-   El diseño host solicita el formato HTML para representar el control asociado en la superficie de diseño.  
  
-   El usuario entra o sale del modo para el control de edición de plantillas.  
  
 El <xref:System.Web.UI.Design.ControlDesigner> clase proporciona un delegado predeterminado para controlar la <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> eventos. Clases derivadas de <xref:System.Web.UI.Design.ControlDesigner> debe establecer el <xref:System.Web.UI.Design.ViewFlags.CustomPaint?displayProperty=nameWithType> valor e invalide el <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> método para procesar los eventos que se producen cuando el host de diseño dibuja el control en la superficie de diseño.  
  
 El <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> método permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 La implementación predeterminada de la <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> método devuelve sin realizar ningún procesamiento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalidar el <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> método en una clase derivada de la <see cref="T:System.Web.UI.Design.ControlDesigner" /> clase para controlar los eventos de dibujo de un control en la superficie de diseño. Sin embargo, el evento sólo se produce si el <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> se ha establecido el valor con el <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> método.</para>
        </block>
        <altmember cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.IControlDesignerView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">The properties for the class of the component.</param>
        <summary>Adds properties to or removes properties from the Properties grid in a design host at design time or provides new design-time properties that might correspond to properties on the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con el <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> método, puede agregar elementos al diccionario de propiedades que un diseñador de controles que se expone a través de un <xref:System.ComponentModel.TypeDescriptor> objeto.  
  
 Las claves del diccionario de propiedades son los nombres de las propiedades. Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Puede modificar directamente el diccionario que sea accesible a través del parámetro de propiedades, o puede dejar sin cambios. Si invalida el <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> método, llame a la implementación base antes de realizar su propio filtrado.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseResizeEvent">
      <MemberSignature Language="C#" Value="public void RaiseResizeEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseResizeEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseResizeEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseResizeEvent();" />
      <MemberSignature Language="F#" Value="member this.RaiseResizeEvent : unit -&gt; unit" Usage="controlDesigner.RaiseResizeEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because resizing is handled by the OnComponentChanged() method. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent%2A> método está obsoleto y no hay ningún reemplazo para esta característica.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to inherit from ContainerControlDesigner instead and to use an EditableDesignerRegion. Regions allow for better control of the content in the designer. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the properties of the control are read-only at design time.</summary>
        <value>
          <see langword="true" />, si las propiedades del control son de solo lectura en tiempo de diseño; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.Design.ControlDesigner> clase es de solo lectura, por naturaleza. Características de lectura/escritura se proporcionan mediante la adición de un <xref:System.Web.UI.Design.DesignerRegion> objeto o clases base, como el <xref:System.Web.UI.Design.ContainerControlDesigner> clase.  
  
> [!NOTE]
>  La propiedad <xref:System.Web.UI.Design.ControlDesigner.ReadOnly%2A> está obsoleta. Se deriva el <xref:System.Web.UI.Design.ContainerControlDesigner> clase a la que puede agregar regiones del diseñador modificables o desde el <xref:System.Web.UI.Design.TemplatedControlDesigner> objeto al que se pueden crear regiones del diseñador modificables en plantillas.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClone">
      <MemberSignature Language="C#" Value="public void RegisterClone (object original, object clone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClone(object original, object clone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClone (original As Object, clone As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClone(System::Object ^ original, System::Object ^ clone);" />
      <MemberSignature Language="F#" Value="member this.RegisterClone : obj * obj -&gt; unit" Usage="controlDesigner.RegisterClone (original, clone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Object" />
        <Parameter Name="clone" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="original">The control associated with the control designer.</param>
        <param name="clone">The cloned copy of the associated control.</param>
        <summary>Registers internal data in a cloned control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada vez que se clona un elemento, puede haber algunas estructuras de datos internas, como `meta:` atributos, que deben incluirse en el control clonado mediante el Diseñador de controles. Puede agregar un desarrollador de páginas `meta:` atributos para el marcado de un control y no existe ninguna forma, ni tampoco existe una razón para el control distinguir cuál podrían ser esas etiquetas. Por lo tanto, si el Diseñador de controles proporciona una manera de editar propiedades complejas o formatos antes de aplicar cambios a una página, crear un clon del control, pase el control original y el clon a este <xref:System.Web.UI.Design.ControlDesigner.RegisterClone%2A> (método) y, después, cuando los cambios se conservan en la etiqueta, todas las `meta:` atributos también se guardan.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="original" /> is null.  -or-  <paramref name="clone" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.WebFormsRootDesigner RootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.WebFormsRootDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RootDesigner As WebFormsRootDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::WebFormsRootDesigner ^ RootDesigner { System::Web::UI::Design::WebFormsRootDesigner ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootDesigner : System.Web.UI.Design.WebFormsRootDesigner" Usage="System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.WebFormsRootDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the control designer for the Web Forms page that contains the associated control.</summary>
        <value>Un <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> objeto que puede utilizarse en tiempo de diseño para componentes de acceso en la página de formularios Web Forms que contiene el control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> propiedad representa el Diseñador de controles de la página de formularios Web Forms que contiene el control. Use la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> propiedad para tener acceso y manipular la página de formularios Web Forms contenedora en tiempo de diseño.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberSignature Language="F#" Value="abstract member SetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit&#xA;override this.SetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit" Usage="controlDesigner.SetEditableDesignerRegionContent (region, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">An editable design region contained within the control.</param>
        <param name="content">The content to assign for the editable design region.</param>
        <summary>Specifies the content for an editable region of the control at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que derivan de la <xref:System.Web.UI.Design.ControlDesigner> clase admiten la edición basada en la región en la superficie de diseño y reemplazan el <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> método para establecer el contenido de una región especificada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo obtener una referencia al host de diseño y, a continuación, usar dicha referencia para crear un <xref:System.Web.UI.Design.ControlParser> objeto que activa `content` en una instancia de la <xref:System.Web.UI.ITemplate> interfaz y asigna el <xref:System.Web.UI.ITemplate> de instancia para el vista apropiada.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#7](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#7)]
 [!code-vb[SimpleMultiRegionControlDesigner#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="SetRegionContent">
      <MemberSignature Language="C#" Value="protected void SetRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberSignature Language="F#" Value="member this.SetRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit" Usage="controlDesigner.SetRegionContent (region, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">An editable design region contained within the design-time view of the control.</param>
        <param name="content">The content to assign for the editable design region.</param>
        <summary>Specifies the content for an editable region in the design-time view of the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, el <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> método no se reemplaza en los diseñadores derivados. La clase base hace que el host de diseño llamar a la <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> método para la región. Invalidar el <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> método cuando los datos personalizados son necesarios para el control antes de llamar a <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> método.  
  
 Use la <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> método para insertar código HTML en una región del control.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="SetViewFlags">
      <MemberSignature Language="C#" Value="protected void SetViewFlags (System.Web.UI.Design.ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetViewFlags(valuetype System.Web.UI.Design.ViewFlags viewFlags, bool setFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetViewFlags(System::Web::UI::Design::ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="F#" Value="member this.SetViewFlags : System.Web.UI.Design.ViewFlags * bool -&gt; unit" Usage="controlDesigner.SetViewFlags (viewFlags, setFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewFlags" Type="System.Web.UI.Design.ViewFlags" />
        <Parameter Name="setFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewFlags">A <see cref="T:System.Web.UI.Design.ViewFlags" /> value.</param>
        <param name="setFlag">
          <see langword="true" /> to set the flag, <see langword="false" /> to remove the flag.</param>
        <summary>Assigns the specified bitwise <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration to the specified flag value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hay varias marcas que se pueden establecer. Por ejemplo, use la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> método para establecer el <xref:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete> valor del elemento actual <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propiedad del Diseñador de controles, en lugar de la obsoleta <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> método para indicar que la plantilla está en modo de edición.  
  
 [!code-csharp[DesignerTemplateGroupSample#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#5)]
 [!code-vb[DesignerTemplateGroupSample#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.IControlDesignerTag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.IControlDesignerTag Tag" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Tag As IControlDesignerTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::IControlDesignerTag ^ Tag { System::Web::UI::Design::IControlDesignerTag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tag : System.Web.UI.Design.IControlDesignerTag" Usage="System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IControlDesignerTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object representing the HTML markup element for the associated control.</summary>
        <value>Un <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> objeto que representa el elemento de marcado HTML para el control asociado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, el <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> propiedad se usa solo para la comunicación entre el host de diseño y el Diseñador de controles y no se utiliza por los programadores de controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IControlDesignerTag" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplateGroups : System.Web.UI.Design.TemplateGroupCollection" Usage="System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
        <value>Una colección de objetos <see cref="T:System.Web.UI.Design.TemplateGroup" />. El valor predeterminado es un <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> vacío</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una clase de diseñador de controles que se deriva de la <xref:System.Web.UI.Design.ControlDesigner> clase. Este diseñador de controles admite un control con cuatro plantillas posibles.  
  
 Para probarlo, compile el código y, a continuación, en un diseño de host como [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], ver la página en la vista Diseño. Seleccione el control, haga clic en la lista de acciones para seleccionar una plantilla que desee modificar y, a continuación, utiliza la característica de arrastrar y colocar para mover controles a la plantilla.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Puede modificar el <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> colección directamente o se puede dejar sin cambios. Si va a reemplazar el <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> propiedad, llame a la implementación base antes de agregar grupos de plantillas a la colección.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual void UpdateDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateDesignTimeHtml ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member UpdateDesignTimeHtml : unit -&gt; unit&#xA;override this.UpdateDesignTimeHtml : unit -&gt; unit" Usage="controlDesigner.UpdateDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Refreshes the design-time HTML markup for the associated Web server control by calling the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> método se llama por el host de diseño para actualizar la presentación del control de servidor Web asociado en tiempo de diseño, por ejemplo, cuando se ha modificado el control. Además, puede llamar un diseñador de controles el <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> método después de modificar los valores del control para actualizar la presentación del control.  
  
> [!NOTE]
>  Si se está llamando a la <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> eventos, o mediante el <xref:System.ComponentModel.PropertyDescriptor> objeto para establecer las propiedades, el <xref:System.ComponentModel.Design.IComponentChangeService> llamadas de la interfaz el <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo responder a una `Click` evento en un diseñador de controles para cambiar el foco entre las regiones en un control de varias regiones y usar el <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> método para actualizar la apariencia del control en el host de diseño.  
  
 Este ejemplo de código forma parte de un ejemplo más extenso de la <xref:System.Web.UI.Design.EditableDesignerRegion> clase.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected virtual bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsePreviewControl : bool" Usage="System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
        <value>
          <see langword="true" />, si el diseñador de control utiliza una copia temporal del control para la vista previa en tiempo de diseño; en otro caso, <see langword="false" />, si el diseñador de control utiliza la propiedad <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> para el control contenido en el diseñador de control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propiedad es `true`, el <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propiedad devuelve una copia temporal del control. Cambios en el control temporal no se conservan en el documento.  
  
 Si el <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propiedad es `false`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propiedad devuelve una instancia de la <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> propiedad para el control. Se conservan los cambios en la instancia del control.  
  
 El <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> en el <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> objeto se usa para establecer el valor de la <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propiedad. Por lo tanto, la <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> configuración determina el tipo de control que se devuelve por la <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propiedad de la base de <xref:System.Web.UI.Design.ControlDesigner> clase. Si el <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> no se especifica en la declaración del Diseñador de control, el <xref:System.Web.UI.Design.ControlDesigner> comportamiento de los objetos es equivalente a especificar la <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> propiedad como `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Los diseñadores personalizados que se derivan de la <see cref="T:System.Web.UI.Design.ControlDesigner" /> clase puede invalidar la <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> propiedad y pasar por alto la <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> objeto. Por lo general, para indicar que la <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> propiedad siempre devuelve una copia temporal del control, invalide el <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> propiedad que se devuelva siempre <see langword="true" />. Para indicar que la <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> propiedad siempre devuelve una instancia del control, invalide el <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> propiedad que se devuelva siempre <see langword="false" />. Por ejemplo, el <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> clase se deriva de la <see cref="T:System.Web.UI.Design.ControlDesigner" /> y siempre devuelve <see langword="true" /> para el <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> propiedad.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ViewControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ViewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ViewControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewControl : System.Web.UI.Control with get, set" Usage="System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Web server control that can be used for previewing the design-time HTML markup.</summary>
        <value>Un <see cref="T:System.Web.UI.Control" /> objeto utilizado por la clase base para generar el marcado HTML en tiempo de diseño.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propiedad utiliza la <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propiedad para determinar su valor devuelto.  
  
 Si el <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propiedad es `true`, el <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propiedad devuelve una copia temporal del control. Cambios en el control temporal no se conservan.  
  
 Si el <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propiedad es `false`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propiedad devuelve una instancia de la <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> propiedad para el control. Se conservan los cambios en la instancia del control.  
  
 El <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> en el <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> objeto se usa para establecer el valor de la <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propiedad. Por lo tanto, la <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> configuración determina el tipo de control que se devuelve por la <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propiedad de la base de <xref:System.Web.UI.Design.ControlDesigner> clase. Si el <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> no se especifica en la declaración del Diseñador de control, el <xref:System.Web.UI.Design.ControlDesigner> comportamiento de los objetos es equivalente a especificar la <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> propiedad como `false`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo marcar un diseñador de controles con el <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> atributo. El ejemplo de código deriva un control de servidor Web de la <xref:System.Web.UI.WebControls.Label> clase y asocia el control a una implementación del Diseñador de control personalizado. La declaración de clase de diseñador de control se marca con la `SupportsPreviewControl` atributo establecido en `true`. El Diseñador de control reemplaza el <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> método y, a continuación, muestra la <xref:System.Web.UI.WebControls.Label.Text%2A> propiedad del control en cursiva en tiempo de diseño.  
  
 [!code-csharp[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/CS/supportspreviewdesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/VB/supportspreviewdesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControlCreated">
      <MemberSignature Language="C#" Value="public virtual bool ViewControlCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewControlCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewControlCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ViewControlCreated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ViewControlCreated : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether a <see langword="View" /> control has been created for display on the design surface.</summary>
        <value>
          <see langword="true" />, si se ha creado un control para su visualización en la superficie de diseño; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="protected virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool" Usage="System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the control is visible at design time.</summary>
        <value>
          <see langword="true" /> en todos los casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>