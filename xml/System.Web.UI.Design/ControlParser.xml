<Type Name="ControlParser" FullName="System.Web.UI.Design.ControlParser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="451532296be9fb7d6872dc534ee2a94a3354145a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ControlParser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlParser sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona métodos para crear un control <see cref="T:System.Web.UI.Control" /> de servidor Web o una interfaz <see cref="T:System.Web.UI.ITemplate" /> a partir de una cadena de marcado que representa un control o plantilla almacenados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase ControlParser proporciona métodos que pueden crear un control de UI o interfaz ITemplate analizando una cadena de marcado que representa un control o una plantilla de control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo obtener el marcado HTML para un control en una página mediante la <xref:System.Web.UI.Design.ControlPersister> clase y cómo crear una instancia de un control de él mediante el <xref:System.Web.UI.Design.ControlParser> clase. El ejemplo también muestra cómo mostrar cuadros de diálogo de Microsoft Windows desde un diseñador.  
  
 [!code-cpp[ControlParserPersisterExample#1](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlParserPersisterExample/CPP/webcustomcontrol1.cpp#1)]
 [!code-csharp[ControlParserPersisterExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlParserPersisterExample/CS/webcustomcontrol1.cs#1)]
 [!code-vb[ControlParserPersisterExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlParserPersisterExample/VB/webcustomcontrol1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.Design.ControlPersister" />
  </Docs>
  <Members>
    <MemberGroup MemberName="ParseControl">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un control a partir del marcado especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseControl">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Control ParseControl (System.ComponentModel.Design.IDesignerHost designerHost, string controlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Control ParseControl(class System.ComponentModel.Design.IDesignerHost designerHost, string controlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseControl (designerHost As IDesignerHost, controlText As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Control ^ ParseControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ controlText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="controlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página.</param>
        <param name="controlText">Marcado HTML para el control.</param>
        <summary>Crea un control a partir del marcado especificado, utilizando el host del diseñador especificado.</summary>
        <returns>Control <see cref="T:System.Web.UI.Control" /> representado por *controlText*; en caso contrario, <see langword="null" /> si el analizador no puede compilar el control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlParser.ParseControl%2A> método tiene acceso a la cadena que representa las directivas de registro en la página Web ASP.NET utilizando los servicios del host del diseñador. Servicios de host del diseñador se adquieren a través de la <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propiedad de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objeto, o si no está disponible, el <xref:System.Web.UI.Design.IWebFormReferenceManager> servicio.  
  
 El <xref:System.Web.UI.Design.ControlParser.ParseControl%2A> método produce una excepción si el analizador no puede generar el control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un control de texto de marcado HTML. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.Design.ControlParser> clase.  
  
 [!code-cpp[ControlParserPersisterExample#2](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlParserPersisterExample/CPP/webcustomcontrol1.cpp#2)]
 [!code-csharp[ControlParserPersisterExample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlParserPersisterExample/CS/webcustomcontrol1.cs#2)]
 [!code-vb[ControlParserPersisterExample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlParserPersisterExample/VB/webcustomcontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Un parámetro no es válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseControl">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Control ParseControl (System.ComponentModel.Design.IDesignerHost designerHost, string controlText, string directives);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Control ParseControl(class System.ComponentModel.Design.IDesignerHost designerHost, string controlText, string directives) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseControl (designerHost As IDesignerHost, controlText As String, directives As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Control ^ ParseControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ controlText, System::String ^ directives);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="controlText" Type="System.String" />
        <Parameter Name="directives" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página.</param>
        <param name="controlText">Texto del formato HTML del control.</param>
        <param name="directives">Directivas de página que se van a incluir en el código del control.</param>
        <summary>Crea un control a partir del marcado especificado, utilizando el host y las directivas del diseñador especificados.</summary>
        <returns>
          <see cref="T:System.Web.UI.Control" /> representado por <paramref name="controlText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlParser.ParseControl%2A> método tiene acceso a la cadena que representa las directivas de registro en la página Web ASP.NET utilizando los servicios del host del diseñador. Servicios de host del diseñador se adquieren a través de la <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propiedad de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objeto, o si no está disponible, el <xref:System.Web.UI.Design.IWebFormReferenceManager> servicio.  
  
 El <xref:System.Web.UI.Design.ControlParser.ParseControl%2A> método produce una excepción si el analizador no puede generar el control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un control de texto de marcado HTML. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.Design.ControlParser> clase.  
  
 [!code-cpp[ControlParserPersisterExample#2](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlParserPersisterExample/CPP/webcustomcontrol1.cpp#2)]
 [!code-csharp[ControlParserPersisterExample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlParserPersisterExample/CS/webcustomcontrol1.cs#2)]
 [!code-vb[ControlParserPersisterExample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlParserPersisterExample/VB/webcustomcontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Un parámetro no es válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseControls">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Control[] ParseControls (System.ComponentModel.Design.IDesignerHost designerHost, string controlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Control[] ParseControls(class System.ComponentModel.Design.IDesignerHost designerHost, string controlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseControls(System.ComponentModel.Design.IDesignerHost,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseControls (designerHost As IDesignerHost, controlText As String) As Control()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::UI::Control ^&gt; ^ ParseControls(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ controlText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="controlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página.</param>
        <param name="controlText">Cadena que representa una colección de marcado para controles.</param>
        <summary>Crea una matriz de controles a partir del marcado especificado utilizando el host del diseñador especificado.</summary>
        <returns>Matriz de elementos <see cref="T:System.Web.UI.Control" />, analizada a partir de <paramref name="controlText" />; de lo contrario, <see langword="null" />, si el analizador no puede compilar los controles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlParser.ParseControls%2A> método tiene acceso a la cadena que representa las directivas de registro en la página Web ASP.NET utilizando los servicios del host del diseñador. Servicios de host del diseñador se adquieren a través de la <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propiedad de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objeto, o si no está disponible, el <xref:System.Web.UI.Design.IWebFormReferenceManager> servicio.  
  
 El <xref:System.Web.UI.Design.ControlParser.ParseControls%2A> método produce una excepción si el analizador no puede generar los controles desde el `controlText` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designerHost" /> es <see langword="null" />.  
  
 \- o -  
  
 <paramref name="controlText" /> es <see langword="null" /> o una cadena vacía ("").</exception>
        <altmember cref="Overload:System.Web.UI.Design.ControlParser.ParseControl" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseTemplate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una interfaz <see cref="T:System.Web.UI.ITemplate" /> a partir del marcado de plantilla especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ITemplate ParseTemplate (System.ComponentModel.Design.IDesignerHost designerHost, string templateText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ITemplate ParseTemplate(class System.ComponentModel.Design.IDesignerHost designerHost, string templateText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseTemplate (designerHost As IDesignerHost, templateText As String) As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ITemplate ^ ParseTemplate(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ templateText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="templateText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página.</param>
        <param name="templateText">Cadena que contiene el marcado de la plantilla.</param>
        <summary>Crea una interfaz <see cref="T:System.Web.UI.ITemplate" /> a partir del marcado de plantilla especificado.</summary>
        <returns>Una instancia de <see cref="T:System.Web.UI.ITemplate" /> creada mediante el análisis de <paramref name="templateText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlParser.ParseTemplate%2A> método tiene acceso a la cadena que representa las directivas de registro en la página Web ASP.NET utilizando los servicios del host del diseñador. Servicios de host del diseñador se adquieren a través de la <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propiedad de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objeto, o si no está disponible, el <xref:System.Web.UI.Design.IWebFormReferenceManager> servicio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designerHost" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ITemplate ParseTemplate (System.ComponentModel.Design.IDesignerHost designerHost, string templateText, string directives);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ITemplate ParseTemplate(class System.ComponentModel.Design.IDesignerHost designerHost, string templateText, string directives) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseTemplate (designerHost As IDesignerHost, templateText As String, directives As String) As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ITemplate ^ ParseTemplate(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ templateText, System::String ^ directives);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="templateText" Type="System.String" />
        <Parameter Name="directives" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instancia de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que es el host del diseñador de la página.</param>
        <param name="templateText">Cadena que contiene el marcado de la plantilla.</param>
        <param name="directives">Directivas que se agregan al principio del código de la plantilla.</param>
        <summary>Analiza el marcado de plantilla especificado y crea una interfaz <see cref="T:System.Web.UI.ITemplate" />.</summary>
        <returns>Una instancia de <see cref="T:System.Web.UI.ITemplate" /> creada mediante el análisis de <paramref name="templateText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Design.ControlParser.ParseTemplate%2A> método tiene acceso a la cadena que representa las directivas de registro en la página Web ASP.NET utilizando los servicios del host del diseñador. Servicios de host del diseñador se adquieren a través de la <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propiedad de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objeto, o si no está disponible, el <xref:System.Web.UI.Design.IWebFormReferenceManager> servicio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designerHost" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>