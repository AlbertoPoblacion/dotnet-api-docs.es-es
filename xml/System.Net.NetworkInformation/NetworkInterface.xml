<Type Name="NetworkInterface" FullName="System.Net.NetworkInformation.NetworkInterface">
  <TypeSignature Language="C#" Value="public abstract class NetworkInterface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NetworkInterface extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.NetworkInterface" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NetworkInterface" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkInterface abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="65a4d-101">Proporciona información estadística y de configuración para una interfaz de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-101">Provides configuration and statistical information for a network interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-102">Esta clase encapsula los datos para las interfaces de red, también conocidos como adaptadores, en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-102">This class encapsulates data for network interfaces, also known as adapters, on the local computer.</span></span> <span data-ttu-id="65a4d-103">No cree instancias de esta clase; el <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> método devuelve una matriz que contiene una instancia de esta clase para cada interfaz de red en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-103">You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65a4d-104">En el ejemplo de código siguiente se muestra información sobre las interfaces.</span><span class="sxs-lookup"><span data-stu-id="65a4d-104">The following code example displays information about interfaces.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#12)]
 [!code-csharp[NCLNetInfoReport#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#12)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="65a4d-105">Para ejecutar código no administrado.</span><span class="sxs-lookup"><span data-stu-id="65a4d-105">for executing unmanaged code.</span></span> <span data-ttu-id="65a4d-106">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="65a4d-106">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NetworkInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NetworkInterface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65a4d-107">Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-107">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-108">Se llama a este constructor solo por las clases que derivan de la <xref:System.Net.NetworkInformation.NetworkInterface> clase.</span><span class="sxs-lookup"><span data-stu-id="65a4d-108">This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-109">Obtiene la descripción de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="65a4d-109">Gets the description of the interface.</span></span></summary>
        <value><span data-ttu-id="65a4d-110">Un objeto <see cref="T:System.String" /> que describe esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="65a4d-110">A <see cref="T:System.String" /> that describes this interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-111">La descripción es texto legible que describe la interfaz de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-111">The description is human-readable text that describes the network interface.</span></span> <span data-ttu-id="65a4d-112">La información incluida en la descripción depende de la capacidad del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="65a4d-112">The information included in the description depends on the capabilities of the operating system.</span></span>  <span data-ttu-id="65a4d-113">En Windows, por lo general se describen el proveedor de la interfaz, el tipo (por ejemplo, Ethernet), la marca y el modelo.</span><span class="sxs-lookup"><span data-stu-id="65a4d-113">On Windows, it typically describes the interface vendor, type (for example, Ethernet), brand, and model.</span></span> <span data-ttu-id="65a4d-114">En otras plataformas, puede ser tan breve como el nombre de la interfaz, como `eth0`.</span><span class="sxs-lookup"><span data-stu-id="65a4d-114">On other platforms, it may be as brief as the name of the interface, such as `eth0`.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="65a4d-115">En el ejemplo de código siguiente se muestra un resumen de todas las interfaces en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-115">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNetworkInterfaces">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllNetworkInterfaces () As NetworkInterface()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::NetworkInformation::NetworkInterface ^&gt; ^ GetAllNetworkInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterface[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65a4d-116">Devuelve objetos que describen las interfaces de red del equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-116">Returns objects that describe the network interfaces on the local computer.</span></span></summary>
        <returns><span data-ttu-id="65a4d-117">Una matriz <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> que contiene objetos que describen las interfaces de red disponibles o una matriz vacía si no se detecta ninguna interfaz.</span><span class="sxs-lookup"><span data-stu-id="65a4d-117">A <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-118">Las interfaces de red en un equipo que proporcionan conectividad de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-118">The network interfaces on a computer provide network connectivity.</span></span> <span data-ttu-id="65a4d-119">Interfaces de red también se denomina son adaptadores de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-119">Network interfaces are also known as network adapters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65a4d-120">En el ejemplo de código siguiente se muestra información de configuración de servicio de nombres de dominio (DNS) para adaptadores de red del equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-120">The following code example displays Domain Name Service (DNS) configuration information for the local computer's network adapters.</span></span>  
  
 [!code-cpp[NCLNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NCLNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NCLNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="65a4d-121">Se ha producido un error en una llamada de función de Windows.</span><span class="sxs-lookup"><span data-stu-id="65a4d-121">A Windows system function call failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPProperties">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPProperties () As IPInterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceProperties ^ GetIPProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65a4d-122">Devuelve un objeto que describe la configuración de esta interfaz de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-122">Returns an object that describes the configuration of this network interface.</span></span></summary>
        <returns><span data-ttu-id="65a4d-123">Un objeto <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> que describe esta interfaz de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-123">An <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> object that describes this network interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-124">Tenga en cuenta que la información en el objeto devuelto por este método refleja las interfaces en el momento en que se crea la matriz.</span><span class="sxs-lookup"><span data-stu-id="65a4d-124">Note that the information in the object returned by this method reflects the interfaces as of the time the array is created.</span></span> <span data-ttu-id="65a4d-125">Esta información no se actualiza dinámicamente.</span><span class="sxs-lookup"><span data-stu-id="65a4d-125">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65a4d-126">En el ejemplo de código siguiente se muestra información para los adaptadores de red del equipo local que admiten IPv4.</span><span class="sxs-lookup"><span data-stu-id="65a4d-126">The following code example displays information for the local computer's network adapters that support IPv4.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPStatistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPStatistics () As IPInterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceStatistics ^ GetIPStatistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65a4d-127">Obtiene las estadísticas IP para esta instancia de <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-127">Gets the IP statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span></span></summary>
        <returns><span data-ttu-id="65a4d-128">Devuelva <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-128">Returns <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span></span>  
  
 <span data-ttu-id="65a4d-129">Las estadísticas de IP.</span><span class="sxs-lookup"><span data-stu-id="65a4d-129">The IP statistics.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4Statistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPv4Statistics () As IPv4InterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPv4InterfaceStatistics ^ GetIPv4Statistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv4InterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65a4d-130">Obtiene las estadísticas IPv4 para esta instancia de <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-130">Gets the IPv4 statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span></span></summary>
        <returns><span data-ttu-id="65a4d-131">Un objeto <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-131">An <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsNetworkAvailable">
      <MemberSignature Language="C#" Value="public static bool GetIsNetworkAvailable ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsNetworkAvailable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsNetworkAvailable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsNetworkAvailable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65a4d-132">Indica si hay disponible alguna conexión de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-132">Indicates whether any network connection is available.</span></span></summary>
        <returns>
          <span data-ttu-id="65a4d-133"><see langword="true" /> si hay disponible una conexión de red; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-133"><see langword="true" /> if a network connection is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-134">Se considera una conexión de red esté disponible si cualquier interfaz de red está marcada "arriba" y no es una interfaz de bucle invertido o de túnel.</span><span class="sxs-lookup"><span data-stu-id="65a4d-134">A network connection is considered to be available if any network interface is marked "up" and is not a loopback or tunnel interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhysicalAddress">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPhysicalAddress () As PhysicalAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::PhysicalAddress ^ GetPhysicalAddress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PhysicalAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65a4d-135">Devuelve la dirección MAC (Media Access Control) o dirección física de este adaptador.</span><span class="sxs-lookup"><span data-stu-id="65a4d-135">Returns the Media Access Control (MAC) or physical address for this adapter.</span></span></summary>
        <returns><span data-ttu-id="65a4d-136">Un objeto <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> que contiene la dirección física.</span><span class="sxs-lookup"><span data-stu-id="65a4d-136">A <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> object that contains the physical address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-137">El objeto devuelto por este método contiene una dirección que se ajuste a los medios utilizados para el transporte de datos en el nivel de vínculo de datos.</span><span class="sxs-lookup"><span data-stu-id="65a4d-137">The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer.</span></span> <span data-ttu-id="65a4d-138">Por ejemplo, en una red Ethernet, este método devuelve la dirección de hardware de Ethernet.</span><span class="sxs-lookup"><span data-stu-id="65a4d-138">For example, on an Ethernet network, this method returns the Ethernet hardware address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65a4d-139">En el ejemplo de código siguiente se muestra las direcciones físicas de todas las interfaces en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-139">The following code example displays the physical addresses of all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-140">Obtiene el identificador del adaptador de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-140">Gets the identifier of the network adapter.</span></span></summary>
        <value><span data-ttu-id="65a4d-141">Un objeto <see cref="T:System.String" /> que contiene el identificador.</span><span class="sxs-lookup"><span data-stu-id="65a4d-141">A <see cref="T:System.String" /> that contains the identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IPv6LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int IPv6LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IPv6LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IPv6LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-142">Obtiene el índice de la interfaz de bucle invertido para IPv6.</span><span class="sxs-lookup"><span data-stu-id="65a4d-142">Gets the index of the IPv6 loopback interface.</span></span></summary>
        <value><span data-ttu-id="65a4d-143">Devuelva <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-143">Returns <see cref="T:System.Int32" />.</span></span>  
  
 <span data-ttu-id="65a4d-144">El índice de la interfaz de bucle invertido para IPv6.</span><span class="sxs-lookup"><span data-stu-id="65a4d-144">The index for the IPv6 loopback interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-145">Una interfaz de red puede tener índices de interfaz diferente para la interfaz de bucle invertido de IPv4 e IPv6.</span><span class="sxs-lookup"><span data-stu-id="65a4d-145">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="65a4d-146">La propiedad P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex sólo devuelve la interfaz de bucle invertido de IPv6.</span><span class="sxs-lookup"><span data-stu-id="65a4d-146">The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="IsReceiveOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReceiveOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReceiveOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReceiveOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReceiveOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-147">Obtiene un valor <see cref="T:System.Boolean" /> que indica si la interfaz de red está establecida para recibir paquetes de datos únicamente.</span><span class="sxs-lookup"><span data-stu-id="65a4d-147">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is set to only receive data packets.</span></span></summary>
        <value>
          <span data-ttu-id="65a4d-148"><see langword="true" /> si la interfaz sólo recibe tráfico de red; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-148"><see langword="true" /> if the interface only receives network traffic; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65a4d-149">En el ejemplo de código siguiente se muestra un resumen de todas las interfaces en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-149">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="65a4d-150">Esta propiedad no es válida en equipos que ejecutan sistemas operativos anteriores a Windows XP.</span><span class="sxs-lookup"><span data-stu-id="65a4d-150">This property is not valid on computers running operating systems earlier than Windows XP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-151">Obtiene el índice de la interfaz de bucle invertido para IPv4.</span><span class="sxs-lookup"><span data-stu-id="65a4d-151">Gets the index of the IPv4 loopback interface.</span></span></summary>
        <value><span data-ttu-id="65a4d-152">Valor <see cref="T:System.Int32" /> que contiene el índice de la interfaz de bucle invertido para IPv4.</span><span class="sxs-lookup"><span data-stu-id="65a4d-152">A <see cref="T:System.Int32" /> that contains the index for the IPv4 loopback interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-153">El índice de la interfaz de bucle invertido normalmente es 1, pero no se puede confiar en el objeto.</span><span class="sxs-lookup"><span data-stu-id="65a4d-153">The index of the loopback interface is usually 1, but you cannot rely on this.</span></span> <span data-ttu-id="65a4d-154">Use la <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> propiedad que se va a obtener el valor correcto.</span><span class="sxs-lookup"><span data-stu-id="65a4d-154">Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.</span></span>  
  
 <span data-ttu-id="65a4d-155">Una interfaz de red puede tener índices de interfaz diferente para la interfaz de bucle invertido de IPv4 e IPv6.</span><span class="sxs-lookup"><span data-stu-id="65a4d-155">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="65a4d-156">El <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> propiedad sólo devuelve la interfaz de bucle invertido de IPv4.</span><span class="sxs-lookup"><span data-stu-id="65a4d-156">The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="65a4d-157">Esta propiedad no es válida en los equipos que sólo ejecutan Ipv6.</span><span class="sxs-lookup"><span data-stu-id="65a4d-157">This property is not valid on computers running only Ipv6.</span></span></exception>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-158">Obtiene el nombre del adaptador de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-158">Gets the name of the network adapter.</span></span></summary>
        <value><span data-ttu-id="65a4d-159">Un objeto <see cref="T:System.String" /> que contiene el nombre del adaptador.</span><span class="sxs-lookup"><span data-stu-id="65a4d-159">A <see cref="T:System.String" /> that contains the adapter name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65a4d-160">En el ejemplo de código siguiente se muestra un resumen de todas las interfaces en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-160">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInterfaceType">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NetworkInterfaceType As NetworkInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::NetworkInterfaceType NetworkInterfaceType { System::Net::NetworkInformation::NetworkInterfaceType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-161">Obtiene el tipo de interfaz.</span><span class="sxs-lookup"><span data-stu-id="65a4d-161">Gets the interface type.</span></span></summary>
        <value><span data-ttu-id="65a4d-162">Valor de <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> que especifica el tipo de interfaz de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-162">An <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> value that specifies the network interface type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-163">Los tipos de interfaz se describen en detalle en la <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> documentación de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="65a4d-163">The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> enumeration documentation.</span></span>  

 <span data-ttu-id="65a4d-164">En principio, esta propiedad puede devolver cualquier miembro de la <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeración.</span><span class="sxs-lookup"><span data-stu-id="65a4d-164">In principle, this property can return any member of the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration.</span></span> <span data-ttu-id="65a4d-165">El valor específico que devuelve depende de las condiciones de tiempo de ejecución de la topología de red subyacente.</span><span class="sxs-lookup"><span data-stu-id="65a4d-165">The specific value that it does return is dependent on the runtime conditions of the underlying network topology.</span></span> <span data-ttu-id="65a4d-166">Esto significa que:</span><span class="sxs-lookup"><span data-stu-id="65a4d-166">This means that:</span></span>
 
 - <span data-ttu-id="65a4d-167">No es posible determinar de antemano qué valor de la propiedad devuelve para una red determinada.</span><span class="sxs-lookup"><span data-stu-id="65a4d-167">It is not possible to determine in advance which value the property returns for a particular network.</span></span>
 
 - <span data-ttu-id="65a4d-168">Es posible que en la práctica de una red determinada, todo el rango de valores de enumeración no está disponible.</span><span class="sxs-lookup"><span data-stu-id="65a4d-168">It is possible that in practice on a particular network, the full range of enumeration values is not available.</span></span> <span data-ttu-id="65a4d-169">Por ejemplo, en una red de gigabit Ethernet, es posible que la propiedad devuelve <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> en lugar de <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="65a4d-169">For example, on a gigabit Ethernet network, it is possible that the property returns <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> rather than <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span></span>

## Examples  
 <span data-ttu-id="65a4d-170">En el ejemplo siguiente se muestra la información de tipo para todas las interfaces en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-170">The following example displays type information for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationalStatus">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.OperationalStatus OperationalStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.OperationalStatus OperationalStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.OperationalStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OperationalStatus As OperationalStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::OperationalStatus OperationalStatus { System::Net::NetworkInformation::OperationalStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.OperationalStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-171">Obtiene el estado operativo actual de la conexión de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-171">Gets the current operational state of the network connection.</span></span></summary>
        <value><span data-ttu-id="65a4d-172">Uno de los valores de <see cref="T:System.Net.NetworkInformation.OperationalStatus" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-172">One of the <see cref="T:System.Net.NetworkInformation.OperationalStatus" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-173">Los valores de estado operativo se describen en detalle en la <xref:System.Net.NetworkInformation.OperationalStatus> documentación de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="65a4d-173">The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65a4d-174">En el ejemplo de código siguiente se muestra un resumen de todas las interfaces en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-174">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public virtual long Speed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Speed" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Speed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Speed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Speed { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-175">Obtiene la velocidad de la interfaz de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-175">Gets the speed of the network interface.</span></span></summary>
        <value><span data-ttu-id="65a4d-176">Valor <see cref="T:System.Int64" /> que especifica la velocidad en bits por segundo.</span><span class="sxs-lookup"><span data-stu-id="65a4d-176">A <see cref="T:System.Int64" /> value that specifies the speed in bits per second.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-177">El valor devuelto por esta propiedad se notifica mediante la interfaz de red.</span><span class="sxs-lookup"><span data-stu-id="65a4d-177">The value returned by this property is reported by the network interface.</span></span> <span data-ttu-id="65a4d-178">No se calcula dinámicamente.</span><span class="sxs-lookup"><span data-stu-id="65a4d-178">It is not computed dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65a4d-179">En el ejemplo de código siguiente se muestra cómo mostrar la velocidad de las interfaces en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-179">The following code example demonstrates displaying the speed of interfaces on the local computer.</span></span>  
  
 [!code-cpp[NclNetInfo2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#13)]
 [!code-csharp[NclNetInfo2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#13)]
 [!code-vb[NclNetInfo2#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::Net::NetworkInformation::NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaceComponent" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" />
      </Parameters>
      <Docs>
        <param name="networkInterfaceComponent"><span data-ttu-id="65a4d-180">Valor <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-180">A <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" /> value.</span></span></param>
        <summary><span data-ttu-id="65a4d-181">Obtiene un valor <see cref="T:System.Boolean" /> que indica si la interfaz admite el protocolo especificado.</span><span class="sxs-lookup"><span data-stu-id="65a4d-181">Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface supports the specified protocol.</span></span></summary>
        <returns>
          <span data-ttu-id="65a4d-182"><see langword="true" /> si se admite el protocolo especificado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-182"><see langword="true" /> if the specified protocol is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65a4d-183">En el ejemplo de código siguiente se muestra las estadísticas para las interfaces de IPV4 en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-183">The following code example displays statistics for IPV4 interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsMulticast">
      <MemberSignature Language="C#" Value="public virtual bool SupportsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.SupportsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65a4d-184">Obtiene un valor <see cref="T:System.Boolean" /> que indica si la interfaz de red está habilitada para recibir paquetes de multidifusión.</span><span class="sxs-lookup"><span data-stu-id="65a4d-184">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is enabled to receive multicast packets.</span></span></summary>
        <value>
          <span data-ttu-id="65a4d-185"><see langword="true" /> si la interfaz recibe paquetes de multidifusión; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65a4d-185"><see langword="true" /> if the interface receives multicast packets; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65a4d-186">Multidifusión es el acto de enviar un paquete de datos a varios destinos simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="65a4d-186">Multicasting is the act of sending a data packet to multiple destinations simultaneously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65a4d-187">En el ejemplo de código siguiente se muestra un resumen de todas las interfaces en el equipo local.</span><span class="sxs-lookup"><span data-stu-id="65a4d-187">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="65a4d-188">Esta propiedad no es válida en equipos que ejecutan sistemas operativos anteriores a Windows XP.</span><span class="sxs-lookup"><span data-stu-id="65a4d-188">This property is not valid on computers running operating systems earlier than Windows XP.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>