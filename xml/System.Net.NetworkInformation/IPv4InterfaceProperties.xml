<Type Name="IPv4InterfaceProperties" FullName="System.Net.NetworkInformation.IPv4InterfaceProperties">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cdeef502760707c58eb623ea644f5fa060cecf7c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36551353" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IPv4InterfaceProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPv4InterfaceProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPv4InterfaceProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPv4InterfaceProperties abstract" />
  <TypeSignature Language="F#" Value="type IPv4InterfaceProperties = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona información sobre las interfaces de red que admiten el Protocolo de Internet versión 4 (IPv4).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase proporciona acceso a información de configuración y dirección para las interfaces de red compatibles con IPv4. No cree instancias de esta clase; Devuelve el <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> método.  
  
 Para las propiedades de IPV6, consulte <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene un <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> objeto y muestra sus datos.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPv4InterfaceProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPv4InterfaceProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este constructor solo por las clases que derivan de <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public abstract int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Index" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el índice de la interfaz de red asociado a la dirección del Protocolo de Internet 4 (IPv4).</summary>
        <value>Valor <see cref="T:System.Int32" /> que contiene el índice de la interfaz IPv4.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el valor de esta propiedad es cero, esta interfaz no admite IPv4.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene un <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> objeto y muestra sus datos.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutomaticPrivateAddressingActive">
      <MemberSignature Language="C#" Value="public abstract bool IsAutomaticPrivateAddressingActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutomaticPrivateAddressingActive" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAutomaticPrivateAddressingActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAutomaticPrivateAddressingActive : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si esta interfaz dispone de una dirección de direccionamiento IP privado automático (APIPA).</summary>
        <value>Es <see langword="true" /> si la interfaz utiliza una dirección APIPA; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El direccionamiento IP privado automático permite que los equipos que no tienen acceso a un servidor de protocolo de configuración dinámica de Host (DHCP) que se asigne automáticamente una dirección IP no entra en conflicto con direcciones públicas. Estas direcciones se encuentran en el intervalo de 169.254.0.0 a 169.254.255.255.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene un <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> objeto y muestra sus datos.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutomaticPrivateAddressingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsAutomaticPrivateAddressingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutomaticPrivateAddressingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAutomaticPrivateAddressingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAutomaticPrivateAddressingEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si esta interfaz tiene habilitado el direccionamiento IP privado automático (APIPA).</summary>
        <value>Es <see langword="true" /> si la interfaz utiliza APIPA; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El direccionamiento IP privado automático permite que los equipos que no tienen acceso a un servidor de protocolo de configuración dinámica de Host (DHCP) que se asigne automáticamente una dirección IP no entra en conflicto con direcciones públicas. Estas direcciones se encuentran en el intervalo de 169.254.0.0 a 169.254.255.255.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene un <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> objeto y muestra sus datos.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDhcpEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsDhcpEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDhcpEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDhcpEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDhcpEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDhcpEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si la interfaz se ha configurado de forma que utilice un servidor DHCP (Protocolo de configuración dinámica de host) para obtener una dirección IP.</summary>
        <value>Es <see langword="true" /> si la interfaz se ha configurado para obtener una dirección IP a partir de un servidor DHCP; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando esta propiedad es `true`, un servidor DHCP asigna la dirección IP a la interfaz cuando el equipo establece sus conexiones de red.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene un <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> objeto y muestra sus datos.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForwardingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsForwardingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForwardingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsForwardingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsForwardingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForwardingEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si esta interfaz puede reenviar (enrutar) paquetes.</summary>
        <value>Es <see langword="true" /> si esta interfaz enruta paquetes; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si se deshabilita el enrutamiento, se descartarán los paquetes recibidos por la interfaz con una dirección de destino que no se mantiene en la interfaz.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene un <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> objeto y muestra sus datos.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mtu">
      <MemberSignature Language="C#" Value="public abstract int Mtu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Mtu" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Mtu As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Mtu { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Mtu : int" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la unidad de transmisión máxima (MTU) para esta interfaz de red.</summary>
        <value>Un valor <see cref="T:System.Int64" /> que especifica la MTU.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La MTU de una interfaz de red es el paquete más grande que puede ser transmitido. Se mide en octetos (bytes de 8 bits).  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene un <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> objeto y muestra sus datos.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesWins">
      <MemberSignature Language="C#" Value="public abstract bool UsesWins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesWins" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UsesWins As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool UsesWins { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesWins : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si una interfaz utiliza Servicios de nombres Internet de Windows (WINS).</summary>
        <value>Es <see langword="true" /> si la interfaz utiliza WINS; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WINS proporciona una base de datos distribuida para el registro y las consultas dinámicas de nombres NetBIOS para las asignaciones de direcciones IPv4.  
  
   
  
## Examples  
 El código siguiente en el ejemplo se obtiene un <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> objeto y muestra sus datos.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>