<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventRegistrationTokenTable`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55cb06fe01693f3bffa96595f065ba288c1152f42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cb06fe01693f3bffa96595f065ba288c1152f42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
          <source>The type of the event handler delegate for a particular event.</source>
          <target state="translated">Tipo de delegado de controlador de eventos para un evento en particular.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
          <source>Stores mappings between delegates and event tokens, to support the implementation of a Windows Runtime event in managed code.</source>
          <target state="translated">Almacena las asignaciones entre delegados y tokens de eventos para admitir la implementación de un evento Windows Runtime en código administrado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
          <source>Use this type when you need to manage the addition and removal of events manually.</source>
          <target state="translated">Use este tipo cuando necesite administrar la adición y eliminación de eventos de forma manual.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
          <source>An instance of this table stores the delegates that represent the event handlers that have been added to an event.</source>
          <target state="translated">Una instancia de esta tabla almacena a los delegados que representan los controladores de eventos que se han agregado a un evento.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
          <source>To raise the event, invoke the delegate that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.InvocationList%2A&gt;</ph> property, if it is not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Para generar el evento, invoque el delegado devuelto por el <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.InvocationList%2A&gt;</ph> propiedad, si no es <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
          <source>An instance of this table is required for each event.</source>
          <target state="translated">Una instancia de esta tabla se requiere para cada evento.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.#ctor">
          <source><ph id="ph1">&lt;paramref name="T" /&gt;</ph> is not a delegate type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="T" /&gt;</ph> no es un tipo de delegado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.AddEventHandler(`0)">
          <source>The event handler to add.</source>
          <target state="translated">Controlador de eventos que se va a agregar.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.AddEventHandler(`0)">
          <source>Adds the specified event handler to the table and to the invocation list, and returns a token that can be used to remove the event handler.</source>
          <target state="translated">Agrega el controlador de eventos especificado a la tabla y a la lista de invocación, y devuelve un token que se puede utilizar para quitar el controlador de eventos.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.AddEventHandler(`0)">
          <source>A token that can be used to remove the event handler from the table and the invocation list.</source>
          <target state="translated">Un token que se puede utilizar para quitar el controlador de eventos de la tabla y de la lista de llamadas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable{`0}@)">
          <source>An event registration token table, passed by reference.</source>
          <target state="translated">Una tabla de token del registro de eventos, pasada por referencia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable{`0}@)">
          <source>Returns the specified event registration token table, if it is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>; otherwise, returns a new event registration token table.</source>
          <target state="translated">Devuelve la tabla de tokens de registro de eventos especificada, si no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>; en caso contrario, devuelve una nueva tabla de tokens de registro de eventos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable{`0}@)">
          <source>The event registration token table that is specified by <ph id="ph1">&lt;paramref name="refEventTable" /&gt;</ph>, if it is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>; otherwise, a new event registration token table.</source>
          <target state="translated">Tabla de tokens de registro de eventos especificada por <ph id="ph1">&lt;paramref name="refEventTable" /&gt;</ph>, si no es <ph id="ph2">&lt;see langword="null" /&gt;</ph>; de lo contrario, una nueva tabla de tokens de registro de eventos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable{`0}@)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.GetOrCreateEventRegistrationTokenTable%2A&gt;</ph> method to initialize an event registration token table in scenarios where any of several threads can create the table.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable%601.GetOrCreateEventRegistrationTokenTable%2A&gt;</ph> método para inicializar una tabla de token de registro de eventos en escenarios donde cualquiera de varios subprocesos puede crear la tabla.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable{`0}@)">
          <source>If this method is called on multiple threads at the same time, the same event registration token table is returned on all threads.</source>
          <target state="translated">Si se llama a este método en varios subprocesos al mismo tiempo, se devuelve la misma tabla de símbolo (token) de registro de eventos en todos los subprocesos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.InvocationList">
          <source>Gets or sets a delegate of type <ph id="ph1">&lt;paramref name="T" /&gt;</ph> whose invocation list includes all the event handler delegates that have been added, and that have not yet been removed.</source>
          <target state="translated">Obtiene o establece un delegado de tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph> cuya lista de invocación incluya todos los delegados de controladores de eventos que se han agregado y que todavía no se han quitado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.InvocationList">
          <source>Invoking this delegate invokes all the event handlers.</source>
          <target state="translated">Al invocar este delegado se invocan todos los controladores de eventos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.InvocationList">
          <source>A delegate of type <ph id="ph1">&lt;paramref name="T" /&gt;</ph> that represents all the event handler delegates that are currently registered for an event.</source>
          <target state="translated">Delegado de tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph> que representa todos los delegados de controladores de eventos registrados actualmente para un evento.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
          <source>Removes an event handler from the table and the invocation list.</source>
          <target state="translated">Quita un controlador de eventos de la tabla y de la lista de llamadas.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)">
          <source>The token that was returned when the event handler was added.</source>
          <target state="translated">El token que se devolvió cuando se agregó el controlador de eventos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)">
          <source>Removes the event handler that is associated with the specified token from the table and the invocation list.</source>
          <target state="translated">Quita el controlador de eventos asociado al token especificado de la tabla y la lista de llamadas.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)">
          <source>If the token is not registered, the table and the invocation list are not modified.</source>
          <target state="translated">Si el token no está registrado, no se modifican en la tabla y la lista de invocación.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(`0)">
          <source>The event handler to remove.</source>
          <target state="translated">Controlador de eventos que se va a quitar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(`0)">
          <source>Removes the specified event handler delegate from the table and the invocation list.</source>
          <target state="translated">Quita el delegado especificado del controlador de eventos de la tabla y de la lista de llamadas.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(`0)">
          <source>If the handler is not registered, the table and the invocation list are not modified.</source>
          <target state="translated">Si el controlador no está registrado, no se modifican en la tabla y la lista de invocación.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>