<Type Name="SoapExtensionReflector" FullName="System.Web.Services.Description.SoapExtensionReflector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bdaa22b0a02a98ab2b7be6813340865189c2125" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30546619" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionReflector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionReflector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionReflector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionReflector" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionReflector abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona a las clases una interfaz y funcionalidad comunes para agregar información de la extensión SOAP a un objeto <see cref="T:System.Web.Services.Description.ServiceDescription" /> para cada método.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abstracto <xref:System.Web.Services.Description.SoapExtensionReflector> clase expone un método abstracto, <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>. Este método abstracto permite que una clase derivada para agregar descripciones de las extensiones SOAP al reflejar un método Web en objetos que se colocan en un <xref:System.Web.Services.Description.ServiceDescription> objeto. El propio método no es una entrada. Las descripciones se agregan para todos los métodos Web que pertenecen a un enlace especificado que genera un <xref:System.Web.Services.Description.ServiceDescription>.  
  
 Puede usar un <xref:System.Web.Services.Description.ServiceDescription> para generar un documento de lenguaje de descripción de servicios Web (WSDL) a través de la <xref:System.Web.Services.Description.ServiceDescription.Write%2A> método. El <xref:System.Web.Services.Description.ServiceDescriptionImporter> clase y clases relacionadas también pueden utilizar un <xref:System.Web.Services.Description.ServiceDescription> para generar el proxy de cliente de código o abstract. código de servidor.  
  
 Usar una clase derivada de la <xref:System.Web.Services.Description.SoapExtensionReflector> clase junto con una clase derivada de la clase abstracta <xref:System.Web.Services.Protocols.SoapExtension> mensajes de clase para extender el procesamiento en tiempo de ejecución de SOAP en el cliente o servicio.  
  
 Puede especificar <xref:System.Web.Services.Description.SoapExtensionReflector> en un archivo de configuración a través de la [ \<soapExtensionReflectorTypes > elemento](http://msdn.microsoft.com/library/6950609a-c9a3-4f6f-a5fc-a05d6d204d5c) elemento y su elemento secundario **agregar** elemento. También puede aplicar la configuración a una aplicación Web ASP.NET que publica un servicio Web.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionReflector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionReflector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Web.Services.Description.SoapExtensionReflector" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectDescription">
      <MemberSignature Language="C#" Value="public virtual void ReflectDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReflectDescription ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReflectDescription();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera información de la descripción específica del servicio colocada en un objeto <see cref="T:System.Web.Services.Description.ServiceDescription" /> que se corresponde a un enlace.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ProtocolReflector ReflectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ProtocolReflector ReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ReflectionContext As ProtocolReflector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ProtocolReflector ^ ReflectionContext { System::Web::Services::Description::ProtocolReflector ^ get(); void set(System::Web::Services::Description::ProtocolReflector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ProtocolReflector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la instancia de una clase derivada de la clase <see cref="T:System.Web.Services.Description.ProtocolReflector" /> abstracta que invoca al método <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />.</summary>
        <value>Instancia de una clase derivada de la clase <see cref="T:System.Web.Services.Description.ProtocolReflector" /> abstracta que invoca al método <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si implementa una clase que se deriva de la <xref:System.Web.Services.Description.SoapExtensionReflector> `abstract` (clase), no es necesario implementar una clase que se deriva de <xref:System.Web.Services.Description.ProtocolReflector> para invocar la <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> método o para establecer el <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectMethod">
      <MemberSignature Language="C#" Value="public abstract void ReflectMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReflectMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReflectMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          El método <see langword="Abstract" /> que debe implementar una clase derivada para agregar información de la extensión SOAP a un objeto <see cref="T:System.Web.Services.Description.ServiceDescription" /> para cada método.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> método se llama para cada método Web que pertenece a un enlace que el <xref:System.Web.Services.Description.ServiceDescription> representa. El <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> el método no usa el método Web directamente. La información de la extensión SOAP se agrega para todos los métodos Web en un enlace reflejado desde una clase de servicio Web.  
  
 Una implementación de la <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> puede generar información como el enlace de operación, `abstract` operación y los mensajes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>