<Type Name="SoapExtensionImporter" FullName="System.Web.Services.Description.SoapExtensionImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad7ef606f59872e02d91dc19860459d80be3a058" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30545969" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionImporter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una interfaz y funcionalidad comunes para que las clases generen atributos de código que especifiquen las extensiones SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Services.Description.SoapExtensionImporter> `abstract` clase expone un `abstract` método <xref:System.Web.Services.Description.SoapExtensionImporter.ImportMethod%2A>, que permite que una clase derivada para agregar metadatos a cualquier método que represente una operación en un enlace. El propio método no es un método de entrada. Los atributos de código, que se agregan a todos los métodos Web en una clase de enlace, representan las extensiones del protocolo de servicios Web de SOAP, por ejemplo, para agregar encabezados adicionales a un mensaje SOAP saliente o realizar un procesamiento adicional en un mensaje SOAP entrante.  
  
 Puede usar una clase derivada de <xref:System.Web.Services.Description.SoapExtensionImporter> para extender la generación de código de proxy de cliente o `abstract` código del servidor. Puede utilizar esta clase derivada junto con una clase derivada de la `abstract` <xref:System.Web.Services.Protocols.SoapExtension> (clase), que extiende el procesamiento en tiempo de ejecución de mensajes SOAP en el cliente o servicio.  
  
 Puede especificar <xref:System.Web.Services.Description.SoapExtensionImporter> en un archivo de configuración a través de la `soapExtensionImporterTypes` elemento de configuración y su elemento secundario `add` elemento. Puede aplicar la configuración para:  
  
-   Una aplicación Web ASP.NET: servicio o cliente.  
  
-   Una aplicación de .NET Framework independiente: sólo cliente.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.Description.SoapExtensionImporter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapProtocolImporter ImportContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.SoapProtocolImporter ImportContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionImporter.ImportContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportContext As SoapProtocolImporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapProtocolImporter ^ ImportContext { System::Web::Services::Description::SoapProtocolImporter ^ get(); void set(System::Web::Services::Description::SoapProtocolImporter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapProtocolImporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la instancia de <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> que invoca el método <see cref="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" />.</summary>
        <value>La instancia de <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> que invoca el método <see cref="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Services.Description.SoapProtocolImporter> objeto mantiene las referencias a las instancias de <xref:System.Web.Services.Description.SoapExtensionImporter> derivados de tipos y, a continuación, llama el <xref:System.Web.Services.Description.SoapExtensionImporter.ImportMethod%2A> en cada una de esas instancias.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMethod">
      <MemberSignature Language="C#" Value="public abstract void ImportMethod (System.CodeDom.CodeAttributeDeclarationCollection metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportMethod(class System.CodeDom.CodeAttributeDeclarationCollection metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ImportMethod (metadata As CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ImportMethod(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> en el cual el método <see cref="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" /> puede colocar las nuevas instancias de <see cref="T:System.CodeDom.CodeAttributeDeclaration" />.</param>
        <summary>Cuando se reemplaza en una clase derivada, agrega las declaraciones de atributos del código a cualquier método que representa una operación en un enlace.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método al que se aplican las declaraciones de atributo no se utiliza directamente el <xref:System.Web.Services.Description.SoapExtensionImporter.ImportMethod%2A> método. Los atributos se agregan a todos los métodos Web en una clase de enlace.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>